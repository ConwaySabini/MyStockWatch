{"version":3,"sources":["../../server/models/Autocomplete.js"],"names":["nameSchema","mongoose","Schema","country","String","currency","exchange","name","symbol","type","autocompleteSchema","_id","default","names","timestamps","collection","statics","createAutocomplete","create","error","getAutocomplete","find","model"],"mappings":";;;;;;;AACA;;AACA;;;;AAFA;AAIA;AACA,MAAMA,UAAU,GAAG,IAAIC,kBAASC,MAAb,CACf;AACIC,EAAAA,OAAO,EAAEC,MADb;AAEIC,EAAAA,QAAQ,EAAED,MAFd;AAGIE,EAAAA,QAAQ,EAAEF,MAHd;AAIIG,EAAAA,IAAI,EAAEH,MAJV;AAKII,EAAAA,MAAM,EAAEJ,MALZ;AAMIK,EAAAA,IAAI,EAAEL;AANV,CADe,CAAnB,C,CAWA;;AACA,MAAMM,kBAAkB,GAAG,IAAIT,kBAASC,MAAb,CACvB;AACIS,EAAAA,GAAG,EAAE;AACDF,IAAAA,IAAI,EAAEL,MADL;AAEDQ,IAAAA,OAAO,EAAE,MAAM;AAFd,GADT;AAKIC,EAAAA,KAAK,EAAE,CAACb,UAAD;AALX,CADuB,EAQvB;AACIc,EAAAA,UAAU,EAAE,IADhB;AAEIC,EAAAA,UAAU,EAAE;AAFhB,CARuB,CAA3B,C,CAcA;;AACAL,kBAAkB,CAACM,OAAnB,CAA2BC,kBAA3B,GAAgD,gBAAgBJ,KAAhB,EAAuB;AACnE,MAAI;AACA;AACA,WAAO,MAAM,KAAKK,MAAL,CAAY;AAAEL,MAAAA;AAAF,KAAZ,CAAb;AACH,GAHD,CAGE,OAAOM,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ,CAPD,C,CASA;;;AACAT,kBAAkB,CAACM,OAAnB,CAA2BI,eAA3B,GAA6C,kBAAkB;AAC3D,MAAI;AACA,WAAO,MAAM,KAAKC,IAAL,EAAb;AACH,GAFD,CAEE,OAAOF,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ,CAND;;eAQelB,kBAASqB,KAAT,CAAe,cAAf,EAA+BZ,kBAA/B,C","sourcesContent":["// imports\nimport mongoose from \"mongoose\";\nimport { nanoid } from \"nanoid\";\n\n// Schema for each stock\nconst nameSchema = new mongoose.Schema(\n    {\n        country: String,\n        currency: String,\n        exchange: String,\n        name: String,\n        symbol: String,\n        type: String,\n    },\n);\n\n// Schema for the user model\nconst autocompleteSchema = new mongoose.Schema(\n    {\n        _id: {\n            type: String,\n            default: () => nanoid(),\n        },\n        names: [nameSchema]\n    },\n    {\n        timestamps: true,\n        collection: \"users\",\n    }\n);\n\n// Creates the stock list for autocomplete\nautocompleteSchema.statics.createAutocomplete = async function (names) {\n    try {\n        // create the names\n        return await this.create({ names });\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Get all users in the database and return them\nautocompleteSchema.statics.getAutocomplete = async function () {\n    try {\n        return await this.find();\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport default mongoose.model(\"Autocomplete\", autocompleteSchema);\n"],"file":"Autocomplete.js"}