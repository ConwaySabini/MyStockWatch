{"version":3,"sources":["../../server/models/Autocomplete.js"],"names":["autocompleteSchema","mongoose","Schema","strict","statics","createAutocomplete","trie","created","create","error","getAutocomplete","find","deleteAutocomplete","id","deleteOne","_id","model"],"mappings":";;;;;;;AACA;;AACA;;;;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAMA,kBAAkB,GAAG,IAAIC,kBAASC,MAAb,CACvB,CACI;AACA;AACA;AACA;AACA;AALJ,CADuB,EAQvB;AACIC,EAAAA,MAAM,EAAE;AADZ,CARuB,CAA3B,C,CAaA;;AACAH,kBAAkB,CAACI,OAAnB,CAA2BC,kBAA3B,GAAgD,gBAAgBC,IAAhB,EAAsB;AAClE,MAAI;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,OAAO,GAAG,MAAM,KAAKC,MAAL,CAAY;AAAEF,MAAAA;AAAF,KAAZ,CAAtB,CANA,CAOA;AACA;AACH,GATD,CASE,OAAOG,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ,CAbD,C,CAeA;;;AACAT,kBAAkB,CAACI,OAAnB,CAA2BM,eAA3B,GAA6C,kBAAkB;AAC3D,MAAI;AACA,WAAO,MAAM,KAAKC,IAAL,EAAb;AACH,GAFD,CAEE,OAAOF,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ,CAND,C,CAQA;;;AACAT,kBAAkB,CAACI,OAAnB,CAA2BQ,kBAA3B,GAAgD,gBAAgBC,EAAhB,EAAoB;AAChE,MAAI;AACA,WAAO,MAAM,KAAKC,SAAL,CAAe;AAAEC,MAAAA,GAAG,EAAEF;AAAP,KAAf,CAAb;AACH,GAFD,CAEE,OAAOJ,KAAP,EAAc;AACZ,UAAMA,KAAN;AACH;AACJ,CAND;;eAQeR,kBAASe,KAAT,CAAe,cAAf,EAA+BhB,kBAA/B,C","sourcesContent":["// imports\nimport mongoose from \"mongoose\";\nimport { nanoid } from \"nanoid\";\n\n// // Schema for each stock\n// const nameSchema = new mongoose.Schema(\n//     {\n//         country: String,\n//         currency: String,\n//         exchange: String,\n//         name: String,\n//         symbol: String,\n//         type: String,\n//     },\n// );\n\n// const childrenSchema = new mongoose.Schema(\n//     {\n//         letter: mongoose.Schema.Types.Mixed,\n//         children: {\n//             type: Map,\n//             of: mongoose.Schema.Types.Mixed,\n//         },\n//         data: mongoose.Schema.Types.Mixed,\n//         word: mongoose.Schema.Types.Mixed,\n//     },\n// );\n\n// Schema for the user model\nconst autocompleteSchema = new mongoose.Schema(\n    {\n        // _id: {\n        //     type: String,\n        //     default: () => nanoid(),\n        // }\n        //trie: {}\n    },\n    {\n        strict: false\n    }\n);\n\n// Creates the stock list for autocomplete\nautocompleteSchema.statics.createAutocomplete = async function (trie) {\n    try {\n        // create the names\n        // const createdAutocomplete = mongoose.model(\"autocomplete\", autocompleteSchema);\n        // const autocomplete = new createdAutocomplete({ trie: trie });\n        // autocomplete.save();\n        // return autocomplete;\n        const created = await this.create({ trie });\n        //created.save();\n        //return created;\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Get all users in the database and return them\nautocompleteSchema.statics.getAutocomplete = async function () {\n    try {\n        return await this.find();\n    } catch (error) {\n        throw error;\n    }\n}\n\n// Delete a trie with the given id and return the result\nautocompleteSchema.statics.deleteAutocomplete = async function (id) {\n    try {\n        return await this.deleteOne({ _id: id });\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport default mongoose.model(\"Autocomplete\", autocompleteSchema);\n"],"file":"Autocomplete.js"}