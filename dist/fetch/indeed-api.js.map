{"version":3,"sources":["../../server/fetch/indeed-api.js"],"names":["redis","require","axios","default","client","createClient","promisify","setAsync","set","bind","baseURL","fetchGithub","resCount","page","allJobs","res","fetch","jobs","json","push","length","console","log","interns","filter","job","jobTitle","title","toLowerCase","includes","success","JSON","stringify","module","exports"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiBE,OAA/B;;AACA,MAAMC,MAAM,GAAGJ,KAAK,CAACK,YAAN,EAAf;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAgBL,OAAO,CAAC,MAAD,CAA7B;;AACA,MAAMM,QAAQ,GAAGD,SAAS,CAACF,MAAM,CAACI,GAAR,CAAT,CAAsBC,IAAtB,CAA2BL,MAA3B,CAAjB;AAIA,MAAMM,OAAO,GAAG,sBAAhB;;AAEA,eAAeC,WAAf,GAA6B;AAC3B,MAAIC,QAAQ,GAAG,CAAf;AAAA,MAAkBC,IAAI,GAAG,CAAzB;AACA,QAAMC,OAAO,GAAG,EAAhB,CAF2B,CAI3B;;AACA,SAAOF,QAAQ,GAAG,CAAlB,EAAqB;AACnB,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,OAAQ,SAAQG,IAAK,EAAzB,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAa,GAAGF,IAAhB;AACAL,IAAAA,QAAQ,GAAGK,IAAI,CAACG,MAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,QAAtB;AACAC,IAAAA,IAAI;AACL,GAZ0B,CAc3B;;;AACA,QAAMU,OAAO,GAAGT,OAAO,CAACU,MAAR,CAAeC,GAAG,IAAI;AACpC,UAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAUC,WAAV,EAAjB;;AAEA,QACEF,QAAQ,CAACG,QAAT,CAAkB,QAAlB,KACAH,QAAQ,CAACG,QAAT,CAAkB,SAAlB,CADA,IAEAH,QAAQ,CAACG,QAAT,CAAkB,KAAlB,CAFA,IAGAH,QAAQ,CAACG,QAAT,CAAkB,WAAlB,CAJF,EAKE;AACA,aAAO,KAAP;AACD,KAPD,CAQA;AACA;AACA;AAVA,SAWK;AACH,aAAO,IAAP;AACD;AACF,GAjBe,CAAhB;AAkBAR,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,OAAO,CAACH,MAAnC,EAjC2B,CAkC3B;;AACA,QAAMU,OAAO,GAAG,MAAMvB,QAAQ,CAAC,QAAD,EAAWwB,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAX,CAA9B;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEQ,IAAAA;AAAF,GAAZ;AACD,C,CAED;;;AAEAG,MAAM,CAACC,OAAP,GAAiBvB,WAAjB","sourcesContent":["const redis = require(\"redis\");\nconst axios = require('axios').default;\nconst client = redis.createClient();\n\nconst { promisify } = require(\"util\");\nconst setAsync = promisify(client.set).bind(client);\n\n\n\nconst baseURL = 'https://rapidapi.com'\n\nasync function fetchGithub() {\n  let resCount = 1, page = 0;\n  const allJobs = [];\n\n  // fetch all pages\n  while (resCount > 0) {\n    const res = await fetch(`${baseURL}?page=${page}`);\n    const jobs = await res.json();\n    allJobs.push(...jobs);\n    resCount = jobs.length;\n    console.log('length', resCount);\n    page++;\n  }\n\n  // filter algorithm\n  const interns = allJobs.filter(job => {\n    const jobTitle = job.title.toLowerCase();\n\n    if (\n      jobTitle.includes('senior') ||\n      jobTitle.includes('manager') ||\n      jobTitle.includes('sr.') ||\n      jobTitle.includes('architect')\n    ) {\n      return false;\n    }\n    //if (jobTitle.includes('intern') || jobTitle.includes('internship')) {\n    //return true;\n    //}\n    else {\n      return true;\n    }\n  })\n  console.log('internships', interns.length);\n  // store data in redis\n  const success = await setAsync('github', JSON.stringify(interns));\n\n  console.log({ success });\n}\n\n//fetchGithub();\n\nmodule.exports = fetchGithub;\n"],"file":"indeed-api.js"}