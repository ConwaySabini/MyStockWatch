{"version":3,"sources":["../../server/controllers/AutocompleteController.js"],"names":["validator","require","onGetAutocomplete","req","res","autocomplete","Autocomplete","getAutocomplete","status","json","success","error","onCreateAutocomplete","trie","body","createdAutocomplete","createAutocomplete","onDeleteAutocomplete","deleteAutocomplete","params","id","message","deletedCount"],"mappings":";;;;;;;AAGA;;;;AAHA;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB,C,CACA;;;AAGA;eACe;AAEX;AACAC,EAAAA,iBAAiB,EAAE,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC,QAAI;AACA;AACA,YAAMC,YAAY,GAAG,MAAMC,sBAAaC,eAAb,EAA3B;AACA,aAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBL,QAAAA;AAAjB,OAArB,CAAP;AACH,KAJD,CAIE,OAAOM,KAAP,EAAc;AACZ,aAAOP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEA;AAAzB,OAArB,CAAP;AACH;AACJ,GAXU;AAaX;AACA;AACAC,EAAAA,oBAAoB,EAAE,OAAOT,GAAP,EAAYC,GAAZ,KAAoB;AACtC,QAAI;AACA,YAAM;AAAES,QAAAA;AAAF,UAAWV,GAAG,CAACW,IAArB,CADA,CAEA;AACA;AACA;;AACA,YAAMC,mBAAmB,GAAG,MAAMT,sBAAaU,kBAAb,CAC9BH,IAD8B,CAAlC,CALA,CAQA;AACA;AAEA;;AACA,aAAOT,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBK,QAAAA;AAAjB,OAArB,CAAP;AACH,KAbD,CAaE,OAAOJ,KAAP,EAAc;AACZ,aAAOP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEA;AAAzB,OAArB,CAAP;AACH;AACJ,GAhCU;AAkCX;AACA;AACAM,EAAAA,oBAAoB,EAAE,OAAOd,GAAP,EAAYC,GAAZ,KAAoB;AACtC,QAAI;AACA,YAAMS,IAAI,GAAG,MAAMP,sBAAaY,kBAAb,CAAgCf,GAAG,CAACgB,MAAJ,CAAWC,EAA3C,CAAnB;AACA,aAAOhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,IADe;AAExBW,QAAAA,OAAO,EAAG,sBAAqBR,IAAI,CAACS,YAAa;AAFzB,OAArB,CAAP;AAIH,KAND,CAME,OAAOX,KAAP,EAAc;AACZ,aAAOP,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEA;AAAzB,OAArB,CAAP;AACH;AACJ;AA9CU,C","sourcesContent":["// libraries\nconst validator = require('validator');\n// models\nimport Autocomplete from '../models/Autocomplete.js';\n\n// Export Autocomplete Controller\nexport default {\n\n    // Returns a list of all stocks\n    onGetAutocomplete: async (req, res) => {\n        try {\n            // finds all stocks and returns them\n            const autocomplete = await Autocomplete.getAutocomplete();\n            return res.status(200).json({ success: true, autocomplete });\n        } catch (error) {\n            return res.status(500).json({ success: false, error: error });\n        }\n    },\n\n    // Tries to create autocomplete, returns the autocomplete on success,\n    // otherwise returns an error\n    onCreateAutocomplete: async (req, res) => {\n        try {\n            const { trie } = req.body;\n            //console.log(\"trie: \", trie);\n            // create the autocomplete\n            //const string = JSON.stringify(trie);\n            const createdAutocomplete = await Autocomplete.createAutocomplete(\n                trie\n            );\n            //const autocomplete = new Autocomplete({ trie: string });\n            //await autocomplete.save();\n\n            // return the autocomplete and success message\n            return res.status(200).json({ success: true, createdAutocomplete });\n        } catch (error) {\n            return res.status(500).json({ success: false, error: error });\n        }\n    },\n\n    // Delete the autocomplete with the given id and returns the success message on success,\n    // otherwise returns an error\n    onDeleteAutocomplete: async (req, res) => {\n        try {\n            const trie = await Autocomplete.deleteAutocomplete(req.params.id);\n            return res.status(200).json({\n                success: true,\n                message: `Deleted a count of ${trie.deletedCount} tries.`\n            });\n        } catch (error) {\n            return res.status(500).json({ success: false, error: error });\n        }\n    },\n}\n"],"file":"AutocompleteController.js"}