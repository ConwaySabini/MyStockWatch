{"version":3,"sources":["components/Theme/theme.js","components/Theme/globalStyles.js","components/Profile/Profile.jsx","components/Nav/Nav.jsx","components/Footer/Footer.jsx","context/StockContext.jsx","components/TechnicalGraph/TechnicalGraph.jsx","components/Stock/StockButtons.jsx","components/Stock/Stock.jsx","components/StockList/StockList.jsx","components/StockHub/StockHub.jsx","components/Favorite/Favorite.jsx","components/Menu/ListStock.jsx","components/Menu/RenderLists.jsx","components/Menu/Menu.jsx","components/Dashboard/Dashboard.jsx","components/Home/Home.jsx","components/Card/Card.jsx","components/CardList/CardList.jsx","components/News/News.jsx","App.jsx","components/Theme/useDarkMode.js","reportWebVitals.js","index.jsx"],"names":["lightTheme","body","stockBody","navBar","hover","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","theme","require","default","Nav","toggleTheme","logout","useAuth0","useState","isBurger","setIsBurger","className","class","role","aria-label","id","href","icon","faChartLine","size","onClick","aria-expanded","aria-hidden","faMoon","faSun","Footer","axios","StockContext","createContext","StockContextProvider","props","initialStockState","JSON","parse","localStorage","getItem","initialFavoriteState","initialListsState","stocks","setStocks","favorites","setFavorites","lists","setLists","useEffect","setItem","stringify","removeFavorite","userId","url","newFavorites","filter","favorite","updateFavoriteData","findFavorite","symbol","find","toUpperCase","findStock","stock","updateStockData","newStocks","a","put","console","error","updateListData","newLists","Provider","value","addStock","data","percentChange","timeline","nanoid","removeStock","favoriteURL","listsURL","foundStock","undefined","list","push","deleteStockFromLists","clearStocks","stocksURL","favoritesURL","userID","addFavorite","clearFavorites","setNewFavorites","findSymbol","stockToGet","editStock","map","editFavorite","getStockTime","setNewStocks","removeList","name","addList","addStockToList","foundList","clearLists","findList","setNewLists","removeStockFromList","children","TechnicalGraph","width","height","stockData","idx","low","values","close","high","i","length","Math","min","max","margin","left","right","top","bottom","discontinuousTimeScaleProviderBuilder","inputDateAccessor","d","Date","datetime","ScaleProvider","xScale","xAccessor","displayXAccessor","pricesDisplayFormat","format","chartHeight","timeDisplayFormat","timeFormat","openCloseColor","open","ChartCanvas","ratio","seriesName","zoomAnchor","lastVisibleItemBasedZoomAnchor","Chart","yExtents","YAxis","showGridLines","tickFormat","CandlestickSeries","MouseCoordinateY","rectWidth","displayFormat","EdgeIndicator","itemType","fill","lineStroke","yAccessor","MovingAverageTooltip","origin","options","ZoomButtons","OHLCTooltip","XAxis","MouseCoordinateX","CrossHairCursor","StockButtons","handleChart","loading","handleTime","setLoading","user","handleUpdate","useContext","setList","UPDATE_FAVORITES","process","UPDATE_LISTS","sub","aria-haspopup","aria-controls","disabled","faAngleDown","faTrashAlt","Stock","handleTimeChange","handleStockChange","simpleChart","setSimpleChart","useDimensions","breakpoints","XS","SM","MD","LG","updateOnBreakpointChange","onResize","observe","unobserve","entry","labels","prices","militaryTime","index","timeIndex","label","slice","responsive","title","display","fontSize","fontColor","legend","position","time","flag","ref","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","datasets","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","borderWidth","hanelUpdate","StockList","filterSymbols","filterStocks","StockHub","setSymbol","setFilterSymbols","filterSymbol","setFilterSymbol","setTimeline","stockChange","setStockChange","currentStock","setCurrentStock","currentFavorite","setCurrentFavorite","descending","setDescending","modal","setModal","showHero","setShowHero","updateStocks","setUpdateStocks","UPDATE_STOCKS","SERVER","fetchDataFromServer","get","response","log","createNewStockData","_id","method","params","interval","outputsize","headers","firstRender","useRef","changeStockData","request","status","message","calculatePercentChange","current","addStockData","priceSize","endPrice","startPrice","percentChangeRounded","toFixed","parseFloat","handleSubmit","e","preventDefault","handleFilter","splitSymbols","includes","replace","split","toggleHero","faAngleUp","onSubmit","type","placeholder","onChange","target","required","sortedStocks","sort","b","Favorite","price","ListStock","RenderLists","hideList","Menu","listName","setListName","listsToRender","setListsToRender","renderGainers","setRenderGainers","renderLosers","setRenderLosers","renderFavorites","setRenderFavorites","render","setRender","FavoritesModal","setFavoritesModal","ListsModal","setListModal","hideMenu","setHideMenu","GET_LISTS","GET_FAVORITES","renderLists","checkForLists","checkForFavorites","gainers","losers","gainer","loser","event","showList","onKeyDown","faPlusCircle","Dashboard","setUserId","GET_USER","email","checkForUser","firstName","lastName","password","userResponse","Home","loginWithRedirect","isAuthenticated","Card","article","count","thumbnail","organization","description","date","link","letter","provider","image","contentUrl","datePublished","attributes","gettyImage","crop_4_3","publishOn","links","self","src","alt","window","newLink","CardList","news","News","setNews","setType","BingNewsOptions","textFormat","safeSearch","category","SeekingAlphaIndividual","until","addNewsData","articles","addNewsForSymbol","classname","App","setTheme","componentMounted","setComponentMounted","setMode","mode","localTheme","matchMedia","matches","useDarkMode","themeMode","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.ecdb6ef8.chunk.js","sourcesContent":["export const lightTheme = {\n  body: '#F7F7F7',\n  stockBody: '#c8c8c8',\n  navBar: '#FFFFFF',\n  hover: '#cbc9cf',\n  text: '#363537',\n  toggleBorder: '#FFF',\n  gradient: 'linear-gradient(#39598A, #79D7ED)',\n}\n\nexport const darkTheme = {\n  body: '#2E2E2E',\n  stockBody: '#3d3c3e',\n  navBar: '#363537',\n  hover: '#757378',\n  text: '#FAFAFA',\n  toggleBorder: '#6B8096',\n  gradient: 'linear-gradient(#091236, #1E215D)',\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n  \n  .Dashboard {\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #NewsSection {\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #news-card {\n    background-color: ${({ theme }) => theme.navBar};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #menu-label {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #card-title {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #navigation-bar {\n    background-color: ${({ theme }) => theme.navBar};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #navbar-item:hover {\n    background-color: ${({ theme }) => theme.hover};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #navbar-item {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #home-footer {\n    background-color: ${({ theme }) => theme.navBar};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #StockChart {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #hero-color {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n  \n  #StockInput {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #FilterInput {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #FilterInput::placeholder {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #StockInput::placeholder {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #menu-input {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #menu-input::placeholder {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #form-button {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n`;\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst axios = require('axios').default;\n\nconst Profile = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    isAuthenticated && (\n      <>\n        <div id=\"Profile\" class=\"navbar-item mb-2 ml-4 mr-3 \">\n          <img src={user.picture} alt={user.name} id=\"profile-picture\" />\n          {/* <h2>{user.name}</h2>\n        <p>{user.email}</p> */}\n        </div>\n      </>\n    )\n  );\n}\n\nexport default Profile;\n","import './Nav.css';\nimport { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Profile from '../Profile/Profile';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartLine, faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\n//import { useTheme } from \"../../context/ThemeContext\";\n\n//TODO add navbar links to hamburger menu\n\n// Component to render the navigation bar\nfunction Nav({ toggleTheme, theme }) {\n  const { logout } = useAuth0();\n  const [isBurger, setIsBurger] = useState(false);\n\n  return (\n    <div className=\"navigation\">\n      <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\" id=\"navigation-bar\">\n        <>\n          {\n            isBurger ? (\n              <>\n                <div class=\"navbar-brand\">\n                  <a class=\"navbar-item\" href=\"/dashboard#title\">\n                    <FontAwesomeIcon icon={faChartLine} size=\"2x\" />\n                    <a class=\"nav-title fa-2x\" href=\"/dashboard#title\">\n                      MyStockWatch\n                    </a>\n                    {/* <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" /> */}\n                  </a>\n\n                  <a\n                    href=\"#burger\"\n                    role=\"button\"\n                    class=\"navbar-burger showNav is-active\"\n                    onClick={() => setIsBurger(!isBurger)}\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                  >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                  </a>\n                </div>\n                <div id=\"navbarBasicExample\" class=\"navbar-menu is-active\">\n                  <div class=\"navbar-start\">\n                    <a class=\"navbar-item\" href=\"/home\" id=\"navbar-hover\">\n                      Home\n                    </a>\n                    <a class=\"navbar-item\" href=\"/dashboard\" id=\"navbar-hover\">\n                      Dashboard\n                    </a>\n                    <a class=\"navbar-item\" href=\"/news\" id=\"navbar-hover\">\n                      News\n                    </a>\n                    {/* <a class=\"navbar-item\" href=\"about\">\n              About\n            </a> */}\n                  </div>\n                  <div class=\"navbar-end\">\n                    <div class=\"navbar-item\">\n                      <div class=\"buttons\">\n                        <button class=\"button is-primary mt-2 ml-2 mb-2\" onClick={() => logout()}>\n                          <strong>Log Out</strong>\n                        </button>\n                      </div>\n                      {/* <Profile></Profile> */}\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <div class=\"navbar-brand\">\n                  <a class=\"navbar-item\" href=\"/dashboard/#title\">\n                    <FontAwesomeIcon icon={faChartLine} size=\"2x\" />\n                    <a class=\"nav-title fa-2x\" href=\"/dashboard/#title\">\n                      MyStockWatch\n                    </a>\n                    {/* <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" /> */}\n                  </a>\n\n                  <a\n                    href=\"#burger\"\n                    role=\"button\"\n                    class=\"navbar-burger showNav\"\n                    onClick={() => setIsBurger(!isBurger)}\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                  >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                  </a>\n                </div>\n                <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n                  <div class=\"navbar-start\">\n                    <a class=\"navbar-item\" href=\"/home\" id=\"navbar-item\">\n                      Home\n                    </a>\n                    <a class=\"navbar-item\" href=\"/dashboard\" id=\"navbar-item\">\n                      Dashboard\n                    </a>\n                    <a class=\"navbar-item\" href=\"/news\" id=\"navbar-item\">\n                      News\n                    </a>\n                    {/* <a class=\"navbar-item\" href=\"about\">\n              About\n            </a> */}\n                  </div>\n                  <div class=\"navbar-end\">\n                    <div class=\"navbar-item\">\n                      <div class=\"buttons\">\n                        {\n                          theme === 'light' ? (\n                            <button class=\"button is-link mt-2\" onClick={toggleTheme}>\n                              <FontAwesomeIcon icon={faMoon} />\n                            </button>\n                          ) : (\n                            <button class=\"button is-link mt-2\" onClick={toggleTheme}>\n                              <FontAwesomeIcon icon={faSun} />\n                            </button>\n                          )\n                        }\n                        <button class=\"button is-primary mt-2 ml-2 mb-2\" onClick={() => logout()}>\n                          <strong>Log Out</strong>\n                        </button>\n                      </div>\n                      {/* <Profile></Profile> */}\n                    </div>\n                  </div>\n                </div>\n              </>\n            )\n          }\n        </>\n      </nav >\n\n    </div >\n  );\n}\n\nexport default Nav;\n","import './Footer.css';\n\n//TODO link my name to portfolio\n// Component to display the footer of the application\nfunction Footer() {\n  return (\n\n    <div className=\"HomeFooter\" >\n      {/* Footer with information and links */}\n      <footer class=\"footer\" id=\"home-footer\">\n        <section class=\"section is-small\">\n          <div class=\"container\">\n            <div class=\"content has-text-centered\">\n              <div class=\"soc\">\n                <a href=\"/#github\">\n                  <i class=\"fa fa-github-alt fa-lg\" role=\"none\"></i>\n                </a>\n              </div>\n              <div className=\"FooterMessage\">\n                <p>\n                  <strong>MyStockWatch</strong> by <a href=\"/\">Ethan Sabini</a>. The source code is licensed by\n                  <a href=\"http://opensource.org/licenses/mit-license.php\"> MIT</a>. The website content\n                  is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect, createContext } from 'react';\nimport { nanoid } from 'nanoid';\nconst axios = require('axios').default;\n\nexport const StockContext = createContext();\n\nconst StockContextProvider = props => {\n  // Set the state in local storage\n  const initialStockState = JSON.parse(localStorage.getItem('stocks')) || [];\n  const initialFavoriteState = JSON.parse(localStorage.getItem('favorites')) || [];\n  const initialListsState = JSON.parse(localStorage.getItem('lists')) || [];\n\n  // states for stock, favorites, and news list\n  const [stocks, setStocks] = useState(initialStockState);\n  const [favorites, setFavorites] = useState(initialFavoriteState);\n  const [lists, setLists] = useState(initialListsState);\n\n  // update local storage on modification\n  useEffect(() => {\n    localStorage.setItem('stocks', JSON.stringify(stocks));\n  }, [stocks]);\n\n  // update local storage on modification\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n\n  // update local storage on modification\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(lists));\n  }, [lists]);\n\n  // Add favorites\n  const addFavorite = (symbol, data, percentChange, timeline, url, userId) => {\n    const newFavorites = [...favorites, { symbol, data, percentChange, timeline, id: nanoid() }];\n    setFavorites(newFavorites);\n    updateFavoriteData(url, userId, newFavorites);\n  }\n\n  // Remove favorites\n  const removeFavorite = (id, userId, url) => {\n    let newFavorites = favorites.filter(favorite => favorite.id !== id);\n    setFavorites(newFavorites);\n\n    // delete the stock from the favorites database\n    updateFavoriteData(url, userId, newFavorites);\n  }\n\n  // Clear favorites\n  const clearFavorites = (url, userId) => {\n    let newFavorites = [];\n    // update database with new favorites\n    updateFavoriteData(url, userId, newFavorites);\n    // update context\n    setFavorites([]);\n  }\n\n  // Find Favorite\n  const findFavorite = symbol => {\n    return favorites.find(favorite => favorite.symbol.toUpperCase() === symbol.toUpperCase());\n  }\n\n  // Add List\n  const addList = (name, stocks, url, userId) => {\n    //check if list name already exists\n    const listExists = lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n    if (listExists === undefined) {\n      // add the list to the lists\n      let newLists = [...lists, { name, stocks, id: nanoid() }];\n      // update database with new lists\n      updateListData(url, userId, newLists);\n      // update context\n      setLists(newLists);\n    }\n\n  }\n\n  // Find List\n  const findList = name => {\n    return lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n  }\n\n  // Find and remove List\n  const removeList = (name, url, userId) => {\n    let newLists = lists.filter(list => list.name.toUpperCase() !== name.toUpperCase());\n    // update context\n    setLists(newLists);\n    // update database with new lists\n    updateListData(url, userId, newLists);\n  }\n\n  // Add a stock to a list\n  const addStockToList = (name, symbol, url, userId) => {\n    // edit stock if it exists\n    const foundStock = stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n    // find the list with the stock\n    const foundList = lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n    // check if stock already exists in list\n    const inList = foundList.stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n    // add the stock to the list if it is not in the list already\n    if (inList === undefined) {\n      // set the new stocks with added stock\n      let newStocks = [...foundList.stocks, foundStock];\n      foundList.stocks = newStocks;\n      // update the lists\n      const newLists = lists.map(list => (list.name.toUpperCase() === name.toUpperCase() ? foundList : list));\n      // update the database and context\n      updateListData(url, userId, newLists);\n      setLists(newLists);\n    }\n  }\n\n  // remove a stock from a list\n  const removeStockFromList = (name, symbol, url, userId) => {\n    // edit stock if it exists\n    const foundStock = stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n    const foundList = lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n    // change the lists stocks to remove the stock\n    foundList.stocks = foundList.stocks.filter(stock => stock.symbol.toUpperCase() !== foundStock.symbol.toUpperCase());\n    // Add the list to the lists\n    const newLists = lists.map(list => (list.name.toUpperCase() === name.toUpperCase() ? foundList : list));\n    // update the list in the database\n    updateListData(url, userId, newLists);\n    // update context API lists\n    setLists(newLists);\n  }\n\n  // check if a list contains a stock\n  const deleteStockFromLists = (symbol, userId, url) => {\n    let newLists = [];\n    // find the lists if they exist\n    for (let list of lists) {\n      newLists.push(list);\n    }\n    for (let list of newLists) {\n      for (let stock of list.stocks) {\n        if (stock.symbol === symbol) {\n          // remove the stock from the list\n          list.stocks = list.stocks.filter(stock => stock.symbol.toUpperCase() !== symbol.toUpperCase());\n        }\n      }\n    }\n    setLists(newLists);\n    // delete the stock from the lists database\n    updateListData(url, userId, newLists);\n  }\n\n  // Clear favorites\n  const clearLists = (url, userId) => {\n    let newLists = [];\n    updateListData(url, userId, newLists);\n    setLists([]);\n  }\n\n  // Add stocks\n  const addStock = (symbol, data, percentChange, timeline) => {\n    // update context\n    setStocks([...stocks, { symbol, data, percentChange, timeline, id: nanoid() }]);\n  }\n\n  // Remove stock by id\n  const removeStock = (id, url, favoriteURL, listsURL, userId) => {\n    let newStocks = stocks.filter(stock => stock.id !== id);\n    setStocks(newStocks);\n    // find the favorite if it exists\n    let foundStock = findStock(id);\n    let favorite = findFavorite(foundStock.symbol);\n    if (favorite !== undefined) {\n      // remove favorite stock\n      removeFavorite(favorite.id, userId, favoriteURL);\n    }\n    // remove stock from the list\n    deleteStockFromLists(foundStock.symbol, userId, listsURL);\n    // delete the stock from the database\n    updateStockData(url, userId, newStocks);\n  }\n\n  // Clear stocks and favorites \n  const clearStocks = (stocksURL, favoritesURL, listsURL, userID) => {\n    // update context\n    setStocks([]);\n    setFavorites([]);\n    setLists([]);\n    // update database\n    let newStocks = [];\n    updateStockData(stocksURL, userID, newStocks);\n    updateFavoriteData(favoritesURL, userID, newStocks);\n    updateListData(listsURL, userID, newStocks);\n  }\n\n  // Find stock and return it\n  const findStock = id => {\n    return stocks.find(stock => stock.id === id);\n  }\n\n  // Find stock timeline and return it\n  const getStockTime = id => {\n    const stockToGet = stocks.find(stock => stock.id === id);\n    return stockToGet.timeline;\n  }\n\n  // Find stock with matching symbol\n  const findSymbol = symbol => {\n    const stockToGet = stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n    if (stockToGet !== undefined) {\n      return stockToGet;\n    }\n    return undefined;\n  }\n\n  // Edit stock\n  const editStock = (symbol, data, percentChange, timeline, id, stocksURL, listsURL, userId) => {\n    // edit stock if it exists\n    const newStocks = stocks.map(stock => (stock.id === id ? { symbol, data, percentChange, timeline, id } : stock));\n    setStocks(newStocks);\n    let newLists = [];\n    // find the lists if they exist\n    for (let list of lists) {\n      newLists.push(list);\n    }\n    for (let list of newLists) {\n      list.stocks = list.stocks.map(stock => (stock.symbol.toUpperCase() === symbol.toUpperCase() ? { symbol, data, percentChange, timeline, id } : stock));\n    }\n    setLists(newLists);\n    updateStockData(stocksURL, userId, newStocks);\n    updateListData(listsURL, userId, newLists);\n  }\n\n  // Set all stocks, method does not need to use database API\n  const setNewStocks = (newStocks) => {\n    setStocks(newStocks);\n  }\n\n  // Set all lists, method does not need to use database API\n  const setNewLists = (newLists) => {\n    setLists(newLists);\n  }\n\n  // Set all favorites, method does not need to use database API\n  const setNewFavorites = (newFavorites) => {\n    setFavorites(newFavorites);\n  }\n\n  // Edit favorite\n  const editFavorite = (symbol, data, percentChange, timeline, id, url, userId) => {\n    // edit favorite if it exists\n    const newFavorites = favorites.map(favorite => (favorite.id === id ? { symbol, data, percentChange, timeline, id } : favorite));\n    // update databse data\n    updateFavoriteData(url, userId, newFavorites);\n    setFavorites(newFavorites);\n  }\n\n  // update the stock data for the user\n  const updateStockData = async (url, userId, newStocks) => {\n    try {\n      // update the stock data \n      const response = await axios.put(url, { userId: userId, stocks: newStocks });\n      // handle error\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // update the stock data for the user\n  const updateFavoriteData = async (url, userId, newFavorites) => {\n    try {\n      // update the stock data \n      const response = await axios.put(url, { userId: userId, favorites: newFavorites });\n      // handle error\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // update the stock data for the user\n  const updateListData = async (url, userId, newLists) => {\n    try {\n      // update the stock data \n      const response = await axios.put(url, { userId: userId, lists: newLists });\n      // handle error\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // export all functions, data, and components wrapped in context\n  return (\n    <StockContext.Provider\n      value={{\n        stocks,\n        addStock,\n        removeStock,\n        clearStocks,\n        findStock,\n        favorites,\n        addFavorite,\n        removeFavorite,\n        clearFavorites,\n        findFavorite,\n        setNewFavorites,\n        findSymbol,\n        editStock,\n        editFavorite,\n        getStockTime,\n        setNewStocks,\n        removeList,\n        addList,\n        addStockToList,\n        clearLists,\n        findList,\n        setNewLists,\n        lists,\n        removeStockFromList,\n      }}\n    >\n      {props.children}\n    </StockContext.Provider>\n  );\n}\n\nexport default StockContextProvider;\n","import { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport {\n  discontinuousTimeScaleProviderBuilder,\n  Chart,\n  ChartCanvas,\n  CandlestickSeries,\n  MovingAverageTooltip,\n  OHLCTooltip,\n  lastVisibleItemBasedZoomAnchor,\n  XAxis,\n  YAxis,\n  CrossHairCursor,\n  EdgeIndicator,\n  MouseCoordinateX,\n  MouseCoordinateY,\n  ZoomButtons,\n} from \"react-financial-charts\";\n\nfunction TechnicalGraph({ stock, width, height }) {\n  // Technical Chart Initialization\n  let stockData = [];\n  let idx = 0;\n  let low = stock.data.values[0].close;\n  let high = stock.data.values[0].close;\n\n  // get the stock data in order and get the min and max values\n  for (let i = stock.data.values.length - 1; i >= 0; i--) {\n    low = Math.min(low, stock.data.values[i].close);\n    high = Math.max(high, stock.data.values[i].close);\n    stockData[idx] = stock.data.values[i];\n    idx++;\n  }\n  // create the dates in the correct format\n  const ScaleProvider = discontinuousTimeScaleProviderBuilder().inputDateAccessor(\n    (d) => new Date(d.datetime)\n  );\n  // css margins for the chart\n  const margin = { left: 5, right: 75, top: 24, bottom: 24 };\n  // create the scale and other important indicators for the chart \n  const { data, xScale, xAccessor, displayXAccessor } = ScaleProvider(\n    stockData\n  );\n  // round to 2 decimal places\n  const pricesDisplayFormat = format(\".2f\");\n  // create responsive height\n  const gridHeight = height - margin.top - margin.bottom;\n  const chartHeight = gridHeight;\n  // date format in year month day\n  const dateTimeFormat = \"%Y %B %d\";\n  const timeDisplayFormat = timeFormat(dateTimeFormat);\n  // create Y axis scale\n  const candleChartExtents = (data) => {\n    return [high, low];\n  };\n  // create label\n  const yEdgeIndicator = (data) => {\n    return data.close;\n  };\n  // color the candlestick red or green\n  const openCloseColor = (data) => {\n    return data.close > data.open ? \"#ef5350\" : \"#26a69a\";\n  };\n\n  return (\n    <ChartCanvas\n      height={height}\n      ratio={3}\n      width={width}\n      margin={margin}\n      data={data}\n      displayXAccessor={displayXAccessor}\n      seriesName=\"Data\"\n      xScale={xScale}\n      xAccessor={xAccessor}\n      zoomAnchor={lastVisibleItemBasedZoomAnchor}\n      id=\"technical-chart\"\n    >\n      <Chart id={3} height={chartHeight} yExtents={candleChartExtents}>\n        {/* <XAxis showGridLines showTickLabel={false} id=\"XAxis\" /> */}\n        <YAxis showGridLines tickFormat={pricesDisplayFormat} />\n        {/* This is the main chart of candlesticks */}\n        <CandlestickSeries />\n        <MouseCoordinateY\n          rectWidth={margin.right}\n          displayFormat={pricesDisplayFormat}\n        />\n        <EdgeIndicator\n          itemType=\"last\"\n          rectWidth={margin.right}\n          fill={openCloseColor}\n          lineStroke={openCloseColor}\n          displayFormat={pricesDisplayFormat}\n          yAccessor={yEdgeIndicator}\n        />\n        <MovingAverageTooltip\n          origin={[8, 24]}\n          options={[\n          ]}\n        />\n        <ZoomButtons />\n        <OHLCTooltip origin={[8, 16]} />\n        <XAxis />\n        {/* <YAxis ticks={4} tickFormat={pricesDisplayFormat} /> */}\n        <MouseCoordinateX displayFormat={timeDisplayFormat} />\n        <MouseCoordinateY\n          rectWidth={margin.right}\n          displayFormat={pricesDisplayFormat}\n        />\n      </Chart>\n      <CrossHairCursor />\n    </ChartCanvas>\n  );\n}\n\nexport default TechnicalGraph;\n","import './Stock.css'\nimport { useState, useEffect, useContext } from \"react\";\nimport { StockContext } from \"../../context/StockContext\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n//Component to render the buttons and handle changes to data\nfunction StockButtons({ handleChart, loading, handleTime, stock, setLoading, user, handleUpdate }) {\n  // stock context api shared data across components\n  const { removeStock, addFavorite, findFavorite, addStockToList, lists, removeStockFromList } = useContext(StockContext);\n  // State to track which list to add the stock to\n  const [list, setList] = useState(\"\");\n  // URLS to make API calls from the Context API\n  // server url to update favorites\n  const UPDATE_FAVORITES = process.env.REACT_APP_UPDATE_FAVORITES;\n  // server url to update lists\n  const UPDATE_LISTS = process.env.REACT_APP_UPDATE_LISTS;\n  // server url to update stocks\n  const UPDATE_STOCKS = process.env.REACT_APP_UPDATE_STOCKS;\n\n  // When the user adds a favorite to their list update the list\n  const handleFavorite = () => {\n    setLoading(true);\n    const favorite = findFavorite(stock.symbol);\n    // Add the favorite to the list if it is defined\n    if (favorite === undefined) {\n      addFavorite(stock.symbol, stock.data, stock.percentChange, stock.timeline, UPDATE_FAVORITES, user.sub);\n    }\n    setLoading(false);\n  }\n\n  // set the list to add the stock to\n  const handleListChange = (name) => {\n    setList(name);\n  }\n\n  // function to add a stock to a list\n  const addToList = () => {\n    setLoading(true);\n    addStockToList(list, stock.symbol, UPDATE_LISTS, user.sub);\n    setLoading(false);\n  }\n\n  // function to remove a stock from a list\n  const removeFromList = () => {\n    setLoading(true);\n    removeStockFromList(list, stock.symbol, UPDATE_LISTS, user.sub);\n    setLoading(false);\n  }\n\n  // function to remove the stock altogether\n  const handleRemove = () => {\n    setLoading(true);\n    removeStock(stock.id, UPDATE_STOCKS, UPDATE_FAVORITES, UPDATE_LISTS, user.sub);\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"stock-buttons\">\n      <button\n        className=\"favorite\"\n        class=\"button is-warning ml-2 mt-4 mb-2\"\n        onClick={() => handleFavorite()}>\n        Favorite\n      </button>\n      <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => handleChart(false)}>Technical Graph</button>\n      <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => handleChart(true)}>Simple Graph</button>\n      <div class=\"dropdown is-hoverable ml-2 mt-4\" >\n        <div class=\"dropdown-trigger\">\n          <button\n            class=\"button\"\n            aria-haspopup=\"true\"\n            aria-controls=\"dropdown-menu3\"\n            disabled={loading}\n            id=\"stock-dropdown\">\n            <span id=\"dropdown-font\">Lists</span>\n            <span class=\"icon is-small\">\n              <FontAwesomeIcon icon={faAngleDown} />\n            </span>\n          </button>\n        </div>\n        <div class=\"dropdown-menu\" id=\"sort-dropdown\" role=\"menu\">\n          <div class=\"dropdown-content\" id=\"sort-dropdown\">\n            <div class=\"dropdown-item\">\n              {lists.length ? (\n                <div className=\"list\">\n                  <ul>\n                    {lists.map(list => {\n                      return (\n                        <li>\n                          <button\n                            class=\"button is-link mt-2\"\n                            id=\"dropdown-buton\"\n                            onClick={() => handleListChange(list.name)}\n                            disabled={loading}>\n                            {list.name}\n                          </button>\n                        </li>\n                      )\n                    })}\n                  </ul>\n                </div>\n              ) : (\n                <article class=\"message is-link\">\n                  <div class=\"message-body \">\n                    <strong>No Lists</strong>\n                  </div>\n                </article>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => addToList()}>Add To List</button>\n      <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => removeFromList()}>Remove From List</button>\n      <button\n        className=\"delete-stock\"\n        class=\"button is-danger ml-3 pr-2 pl-5 mt-4 mb-2\"\n        onClick={() => handleRemove(stock.id)}>\n        <FontAwesomeIcon id=\"trash\" icon={faTrashAlt} />\n      </button>\n      <br />\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('1min')}>30Min</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('5min')}>2.5H</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('15min')}>7.5H</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('30min')}>15H</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('1h')}>~1D</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('2h')}>~1W</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('1day')}>1M</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('1week')}>6M+</button>\n      <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTime('1month')}>2.5Y</button>\n      <button class=\"button is-primary ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate()}>Update Stock</button>\n    </div>\n  );\n}\n\nexport default StockButtons;\n","import './Stock.css';\nimport { useState, useEffect } from \"react\";\nimport { StockContext } from \"../../context/StockContext\";\nimport { Line } from \"react-chartjs-2\";\nimport useDimensions from \"react-cool-dimensions\";\nimport TechnicalGraph from '../TechnicalGraph/TechnicalGraph';\nimport StockButtons from './StockButtons';\n\n// Component to display the individual stock\nfunction Stock({ stock, handleTimeChange, handleStockChange, user }) {\n  // State to track which chart to display (simple or technical)\n  const [simpleChart, setSimpleChart] = useState(true);\n  // loading state to have components wait for data to load\n  const [loading, setLoading] = useState(false);\n  // Observe the size of the Stock Card for responsive design\n  const { observe, unobserve, width, height, entry } = useDimensions({\n    // breakpoints to change the size of the graph\n    breakpoints: { XS: 0, SM: 320, MD: 480, LG: 640 },\n    // Will only update the state on breakpoint changed, default is false\n    updateOnBreakpointChange: true,\n    onResize: ({ observe, unobserve, width, height, entry }) => {\n      // Triggered whenever the size of the target is changed...\n      unobserve(); // To stop observing the current target element\n      observe(); // To re-start observing the current target element\n    },\n  });\n\n  // dates of the stock for the graph\n  const labels = [];\n  // prices of the stock for the graph\n  const prices = [];\n\n  let militaryTime = false;\n  let timeline = \"\";\n  switch (stock.timeline) {\n    case '1min': timeline = \"30 minutes\";\n      militaryTime = true;\n      break;\n    case '5min': timeline = \"2.5 hours\";\n      militaryTime = true;\n      break;\n    case '15min': timeline = \"7.5 hours\";\n      militaryTime = true;\n      break;\n    case '30min': timeline = \"15 hours\";\n      militaryTime = true;\n      break;\n    case '1h': timeline = \"30 hours\";\n      break;\n    case '2h': timeline = \"1 week\";\n      break;\n    case '1day': timeline = \"1 month\";\n      break;\n    case '1week': timeline = \"30 weeks\";\n      break;\n    case '1month': timeline = \"2.5 years\";\n      break;\n    default: break;\n  }\n\n  // 30 dates and prices for the graph\n  let index = stock.data.values.length - 1;\n\n  // Loop through each date and price for the stock and add it to the arrays\n  for (let i = 0; i < stock.data.values.length; i++) {\n    labels[index] = stock.data.values[i].datetime;\n    prices[index] = stock.data.values[i].close;\n    index--;\n  }\n\n  if (militaryTime) {\n    let timeIndex = 0;\n    for (let label of labels) {\n      labels[timeIndex] = label.slice(11);\n      timeIndex++;\n    }\n  }\n\n  // options for the graph\n  const options = {\n    responsive: true,\n    title: {\n      display: true,\n      // position: \"top\",\n      text: stock.symbol,\n      fontSize: 18,\n      fontColor: \"#111\"\n    },\n    legend: {\n      display: true,\n      position: \"bottom\",\n      labels: {\n        fontColor: \"#333\",\n        fontSize: 16\n      }\n    },\n  };\n\n  // data for the graph\n  const ChartData = (canvas) => {\n    // Create gradients to make the graph pretty\n    const ctx = canvas.getContext(\"2d\");\n    const gradientStroke = ctx.createLinearGradient(700, 0, 300, 0);\n    gradientStroke.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n    gradientStroke.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n    const gradientFill = ctx.createLinearGradient(700, 0, 300, 0);\n    gradientFill.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n    gradientFill.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n    // return the data for the graph\n    return {\n      labels: labels,\n      datasets: [\n        {\n          label: stock.symbol,\n          data: prices,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderColor: gradientStroke,\n          pointBorderColor: gradientStroke,\n          pointBackgroundColor: gradientStroke,\n          pointHoverBackgroundColor: gradientStroke,\n          pointHoverBorderColor: gradientStroke,\n          pointBorderWidth: 5,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 1,\n          pointRadius: 3,\n          borderWidth: 4,\n        },\n      ],\n    };\n  };\n\n  // data for the red graph\n  const redData = (canvas) => {\n    // Create gradients to make the graph pretty\n    const ctx = canvas.getContext(\"2d\");\n    const gradientStroke = ctx.createLinearGradient(700, 0, 300, 0);\n    gradientStroke.addColorStop(1, \"rgba(141, 23, 174, 0.6)\");\n    gradientStroke.addColorStop(0, \"rgba(200, 39, 72, 0.6)\");\n    const gradientFill = ctx.createLinearGradient(700, 0, 300, 0);\n    gradientFill.addColorStop(1, \"rgba(141, 23, 174, 0.6)\");\n    gradientFill.addColorStop(0, \"rgba(200, 39, 72, 0.6)\");\n\n    // return the data for the graph\n    return {\n      labels: labels,\n      datasets: [\n        {\n          label: stock.symbol,\n          data: prices,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderColor: gradientStroke,\n          pointBorderColor: gradientStroke,\n          pointBackgroundColor: gradientStroke,\n          pointHoverBackgroundColor: gradientStroke,\n          pointHoverBorderColor: gradientStroke,\n          pointBorderWidth: 5,\n          pointHoverRadius: 5,\n          pointHoverBorderWidth: 1,\n          pointRadius: 3,\n          borderWidth: 4,\n        },\n      ],\n    };\n  };\n\n  // When the user changes the timeframe of the stock, update the graph\n  const handleTime = (time) => {\n    setLoading(true);\n    handleTimeChange(time, stock);\n    handleStockChange();\n    setLoading(false);\n  }\n\n  const handleUpdate = () => {\n    setLoading(true);\n    handleStockChange();\n    setLoading(false);\n  }\n\n  // function to set the chart to simple or technical\n  const handleChart = (flag) => {\n    setSimpleChart(flag);\n  }\n\n  if (stock.percentChange >= 0) {\n    // Return the graph\n    if (simpleChart) {\n      return (\n        <div ref={observe} className=\"StockCard mt-6 pl-4 pr-4 pb-4 pt-4\" id=\"StockChart\">\n          <h3 id=\"stock-heading\">{stock.symbol}: {timeline}</h3>\n          <Line data={ChartData} options={options} />\n          <StockButtons\n            handleTime={handleTime}\n            handleChart={handleChart}\n            handleUpdate={handleUpdate}\n            loading={loading}\n            setLoading={setLoading}\n            stock={stock}\n            user={user}\n          />\n        </div >\n      );\n    } else {\n      return (\n        <div ref={observe} className=\"StockCard mt-6 pl-4 pr-4 pb-4 pt-4\" id=\"StockChart\">\n          <h3 id=\"stock-heading\">{stock.symbol}: {timeline}</h3>\n          <TechnicalGraph stock={stock} width={width} height={height} />\n          <StockButtons\n            handleTime={handleTime}\n            handleChart={handleChart}\n            handleUpdate={handleUpdate}\n            loading={loading}\n            setLoading={setLoading}\n            stock={stock}\n            user={user}\n          />\n        </div >\n      );\n    }\n  } else {\n    // Return the graph\n    if (simpleChart) {\n      return (\n        <div ref={observe} className=\"StockCard mt-6 pl-4 pr-4 pb-4 pt-4\" id=\"StockChart\">\n          <h3 id=\"stock-heading\">{stock.symbol}: {timeline}</h3>\n          <Line data={redData} options={options} />\n          <StockButtons\n            handleTime={handleTime}\n            handleChart={handleChart}\n            handleUpdate={handleUpdate}\n            loading={loading}\n            setLoading={setLoading}\n            stock={stock}\n            user={user}\n          />\n        </div >\n      );\n    } else {\n      return (\n        <div ref={observe} className=\"StockCard mt-6 pl-4 pr-4 pb-4 pt-4\" id=\"StockChart\">\n          <h3 id=\"stock-heading\">{stock.symbol}: {timeline}</h3>\n          <TechnicalGraph stock={stock} width={width} height={height} />\n          <StockButtons\n            handleTime={handleTime}\n            handleChart={handleChart}\n            hanelUpdate={handleUpdate}\n            loading={loading}\n            setLoading={setLoading}\n            stock={stock}\n            user={user}\n          />\n        </div >\n      );\n    }\n\n  }\n}\n\nexport default Stock;\n","import React, { useContext } from \"react\";\nimport { StockContext } from \"../../context/StockContext\";\nimport Stock from \"./../Stock/Stock\";\n\n// Component to display a list of stocks\nconst StockList = ({ handleTimeChange, filterSymbols, handleStockChange, user }) => {\n  const { stocks } = useContext(StockContext);\n\n  // If there are no stocks to filter display all stocks\n  if (filterSymbols.length === 0) {\n    return (\n      <div>\n        {stocks.length ? (\n          <div className=\"list\">\n            {stocks.map(stock => {\n              return <Stock\n                stock={stock}\n                key={stock.id}\n                handleTimeChange={handleTimeChange}\n                handleStockChange={handleStockChange}\n                user={user}\n              />;\n            })}\n          </div>\n        ) : (\n          <article class=\"message is-link mt-6 ml-6\">\n            <div class=\"message-body \">\n              <strong>No Stocks</strong>\n            </div>\n          </article>\n        )}\n      </div>\n    );\n    // Display only filtered stocks\n  } else {\n    let filterStocks = [];\n    // Get each filtered stock and add it to the array\n    for (const symbol of filterSymbols) {\n      for (let stock of stocks) {\n        if (stock.symbol === symbol) {\n          filterStocks.push(stock);\n        }\n      }\n    }\n    return (\n      <div>\n        {filterStocks.length ? (\n          <div className=\"list\">\n            {filterStocks.map(stock => {\n              return <Stock\n                stock={stock}\n                key={stock.id}\n                handleTimeChange={handleTimeChange}\n                handleStockChange={handleStockChange}\n                user={user}\n              />;\n            })}\n          </div>\n        ) : (\n          <article class=\"message is-link mt-6 ml-6\">\n            <div class=\"message-body \">\n              <strong>No Stocks</strong>\n            </div>\n          </article>\n        )}\n      </div>\n    );\n  }\n\n};\n\nexport default StockList;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { StockContext } from \"../../context/StockContext\";\nimport StockList from '../StockList/StockList';\nimport './StockHub.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nconst axios = require('axios').default;\n\n// Component to display all stocks and the forms to add/edit stocks\nconst StockHub = ({ user }) => {\n  // context api to modify data across components\n  const { stocks, addStock, clearStocks, editStock, findFavorite,\n    editFavorite, findSymbol, setNewStocks } = useContext(StockContext);\n  // symbol of the stock to be searched\n  const [symbol, setSymbol] = useState('');\n  // array of symbols to filter from the stock list\n  const [filterSymbols, setFilterSymbols] = useState([]);\n  // contains the current symbols from the filter bar\n  const [filterSymbol, setFilterSymbol] = useState('');\n  // when the page is loading some actions are disabled\n  const [loading, setLoading] = useState(false);\n  // timeframe of the stock to graph\n  const [timeline, setTimeline] = useState('1day');\n  // when the timeline is changed of a stock this state is changed to reflect that change\n  const [stockChange, setStockChange] = useState(false);\n  // the current stock to be modified\n  const [currentStock, setCurrentStock] = useState({});\n  // the current favorite to be modified\n  const [currentFavorite, setCurrentFavorite] = useState({});\n  // when sorting the stocks decide which direction to sort\n  const [descending, setDescending] = useState(true);\n  // modal for confirming events\n  const [modal, setModal] = useState(false);\n  // flag for displaying the instructions\n  const [showHero, setShowHero] = useState(true);\n  // flag for updating the stocks on the database\n  const [updateStocks, setUpdateStocks] = useState(false);\n  // server url to update favorites\n  const UPDATE_FAVORITES = process.env.REACT_APP_UPDATE_FAVORITES;\n  // server url to update lists\n  const UPDATE_LISTS = process.env.REACT_APP_UPDATE_LISTS;\n  // server url to update stocks\n  const UPDATE_STOCKS = process.env.REACT_APP_UPDATE_STOCKS;\n  //server url\n  const SERVER = process.env.REACT_APP_GET_USER_STOCKS + user;\n  // server url to create stocks\n  const CREATE_STOCKS = process.env.REACT_APP_CREATE_STOCKS;\n\n  //TODO add an update data button to stock???\n\n  // Fetch the stock data from the server and render the stocks\n  // If there is no stock data for this user, create new data\n  useEffect(() => {\n    const fetchDataFromServer = async () => {\n      setLoading(true);\n      try {\n        // fetch the stock data \n        const response = await axios.get(SERVER);\n        // handle error\n        if (response.data.stocks === null) {\n          setLoading(false);\n          console.log(\"Creating new stock data for user\");\n          createNewStockData();\n          setLoading(false);\n        } else {\n          // delete irrelevent data\n          delete response.data.stocks._id;\n          // set the stocks from the database\n          let newStocks = [];\n          //push stocks to the list from the Context API\n          for (const stock of response.data.stocks.stocks) {\n            newStocks.push(stock);\n          }\n          setNewStocks(newStocks);\n          // cleanup function\n          setLoading(false);\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n      }\n    }\n\n    // create new stock data for the user\n    const createNewStockData = async () => {\n      setLoading(true);\n      try {\n        // create the stock data \n        await axios.put(CREATE_STOCKS, { userId: user, stocks: stocks });\n        // handle error\n      } catch (error) {\n        console.error(error);\n        setLoading(false);\n      }\n    }\n    fetchDataFromServer();\n  }, []);\n\n  useEffect(() => {\n    if (user !== undefined) {\n      // update the stock data for the user\n      const updateStockData = async () => {\n        setLoading(true);\n        try {\n          // update the stock data \n          await axios.put(UPDATE_STOCKS, { userId: user, stocks: stocks });\n          setLoading(false);\n          // handle error\n        } catch (error) {\n          console.error(error);\n          setLoading(false);\n        }\n      }\n\n      updateStockData();\n    }\n  }, [updateStocks]);\n\n  // Axios options for getting stock data from 12 Data API\n  const options = {\n    method: 'GET',\n    url: process.env.REACT_APP_RAPIDAPI_TIME_URL,\n    params: { interval: `${timeline}`, symbol: `${symbol}`, format: 'json', outputsize: '30' },\n    headers: {\n      'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n      'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n    }\n  };\n\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    // When the user changes the timeline for a stock the new data is fetched and displayed to the graph\n    const changeStockData = async () => {\n      setLoading(true);\n      try {\n        // fetch the data \n        const response = await axios.request(options);\n        // handle error\n        if (response.data.status === \"error\") {\n          setSymbol('');\n          setLoading(false);\n          console.log(response.data.message);\n        } else {\n          // get the stock and calculate the percent change over the time period\n          const percentChange = calculatePercentChange(response.data);\n          // edit the stock being modified\n          editStock(symbol, response.data, percentChange,\n            timeline, currentStock.id, UPDATE_STOCKS, UPDATE_LISTS, user);\n          if (currentFavorite !== undefined) {\n            // edit the favorite in the sidebar to match the stock being modified\n            editFavorite(symbol, response.data, percentChange,\n              timeline, currentFavorite.id, UPDATE_FAVORITES, user);\n          }\n          // cleanup function\n          setUpdateStocks(!updateStocks);\n          setSymbol('');\n          setLoading(false);\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n        setSymbol('');\n        setLoading(false);\n      }\n    }\n\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    } else {\n      changeStockData();\n    }\n  }, [stockChange]);\n\n\n\n  // Fetches the stock data with the symbol and displays is in a graph\n  const addStockData = async () => {\n    setLoading(true);\n    try {\n      // fetch the data\n      const response = await axios.request(options);\n      // handle error\n      if (response.data.status === \"error\") {\n        setSymbol('');\n        console.log(response.data.message);\n        setLoading(false);\n      } else {\n        // get the stock and calculate the percent change over the time period\n        const foundStock = findSymbol(symbol);\n        if (foundStock === undefined) {\n          const percentChange = calculatePercentChange(response.data);\n          // add the stock to the list and context API\n          addStock(symbol, response.data, percentChange, timeline);\n        }\n        // cleanup\n        setUpdateStocks(!updateStocks);\n        setSymbol('');\n        setLoading(false);\n      }\n      // handle error\n    } catch (error) {\n      console.error(error);\n      setSymbol('');\n      setLoading(false);\n    }\n  }\n\n  // Calculates the percent change of the stock over the time period and return  \n  // it rounded to the nearest hundreth place\n  const calculatePercentChange = (response) => {\n    let priceSize = response.values.length;\n    let endPrice = response.values[0].close;\n    let startPrice = response.values[priceSize - 1].close;\n    let difference = endPrice - startPrice;\n    let percentChange = (difference / startPrice) * 100;\n    let percentChangeRounded = percentChange.toFixed(2);\n    percentChange = parseFloat(percentChangeRounded);\n    return percentChange;\n  }\n\n  // Add the stock data for the current symbol in input bar\n  const handleSubmit = e => {\n    e.preventDefault();\n    addStockData();\n  }\n\n  // Edit the stock being modified for the new timeline of the graph\n  const handleTimeChange = (time, stock) => {\n    setSymbol(stock.symbol);\n    setCurrentStock(stock);\n    setTimeline(time);\n    // get favorite corresponding to the stock being modified if available\n    const favorite = findFavorite(stock.symbol);\n    setCurrentFavorite(favorite);\n  }\n\n  // When user changes timeline change state to reflect change\n  const handleStockChange = (time) => {\n    setStockChange(!stockChange);\n  }\n\n  // Change symbol state to match with the input \n  const handleChange = (e) => {\n    e.preventDefault();\n    setSymbol(e.target.value);\n  }\n\n  // Set the symbol of the stock/s to filter\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    setFilterSymbol(e.target.value);\n  }\n\n  // Set the new stocks after filtering them\n  const handleFilter = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let splitSymbols = []\n    // filter the symbols if there is a comma\n    if (filterSymbol.includes(',')) {\n      const noWhiteSpace = filterSymbol.replace(/\\s+/g, '')\n      splitSymbols = noWhiteSpace.split(',');\n      // filter the symbols if there is only spaces\n    } else {\n      splitSymbols = filterSymbol.split(' ');\n    }\n    // Set the filter list with the newest filtered stocks\n    setFilterSymbols([...filterSymbols, ...splitSymbols]);\n    setLoading(false);\n    setFilterSymbol('');\n  }\n\n  // Sort the list of stocks in ascending/descending order\n  const handleSort = () => {\n    let sortedStocks = [];\n\n    let index = 0;\n    for (let stock of stocks) {\n      sortedStocks[index] = stock;\n      index++;\n    }\n    // sort them in descending order\n    if (descending) {\n      sortedStocks.sort((a, b) => b.percentChange - a.percentChange);\n      // sort them in ascending order\n    } else {\n      sortedStocks.sort((a, b) => a.percentChange - b.percentChange);\n    }\n    // set the new list of stocks\n    setNewStocks(sortedStocks);\n  }\n\n  // clear the list of stocks on the screen\n  const clear = e => {\n    e.preventDefault();\n    clearStocks(UPDATE_STOCKS, UPDATE_LISTS, UPDATE_FAVORITES, user);\n    setModal(false);\n    setUpdateStocks(!updateStocks);\n  }\n\n  // Clear all current filters that are applied\n  const clearFilters = e => {\n    setFilterSymbols([]);\n  }\n\n  // Set the sorting order to ascending\n  const setDescendingFalse = () => {\n    setDescending(false);\n  }\n\n  // Set the sorting order to descending\n  const setDescendingTrue = () => {\n    setDescending(true);\n  }\n\n  // function to confirm the deletion of all stocks\n  const confirmClear = () => {\n    setModal(true);\n  }\n\n  // function to set modal to false and close confirmation dialogue \n  const clearModal = () => {\n    setModal(false);\n  }\n\n  // function to hide the instructions\n  const toggleHero = () => {\n    setShowHero(!showHero);\n  }\n\n  if (!modal) {\n    return (\n      <div class=\"StockForm\">\n        {showHero ? (\n          <div>\n            <a onClick={() => toggleHero()} href=\"#instructions\">\n              <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n            </a>\n            {/* Title and information about the dashboard */}\n            <section class=\"hero is-link\" id=\"hero-dash\">\n              <div class=\"hero-body\" >\n                <p class=\"title\" id=\"hero-color\">\n                  Welcome to MyStockWatch\n                </p>\n                <p class=\"subtitle\" id=\"hero-color\">\n                  Enter the symbol and click the <strong id=\"hero-color\">Add Stock button or Enter</strong>, to add the stock.\n                </p>\n                <h2 class=\"subtitle\" id=\"hero-color\">\n                  Enter a symbol or multiple symbols separated by a comma or space to filter the stocks. Then hit the\n                  <strong id=\"hero-color\"> Filter button or Enter</strong>, to filter the stocks.\n                </h2>\n                <h2 class=\"subtitle\" id=\"hero-color\">\n                  Use the dropdown menu and select an option then press the\n                  <strong id=\"hero-color\"> Sort button</strong>, to sort the stocks by change in price.\n                </h2>\n              </div>\n            </section>\n\n          </div>) :\n          (\n            <a onClick={() => toggleHero()} href=\"#instructions\">\n              <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n            </a>\n          )\n        }\n        <div class=\"block\" />\n        {/* Forms and buttons to interact with the dashboard */}\n        <div className=\"button-and-forms ml-6\">\n          <div class=\"columns\">\n            <div class=\"column is-4\">\n              <button class=\"button is-link ml-2\" onClick={handleSubmit} disabled={loading}>Add Stock</button>\n              <button class=\"button is-danger ml-5\" onClick={confirmClear} disabled={loading}>\n                Clear All Stocks\n              </button>\n\n              <form onSubmit={handleSubmit}>\n                <div className=\"stock-form\" id=\"stock-search\">\n                  <input\n                    id=\"StockInput\"\n                    type=\"text\"\n                    placeholder=\"Enter Symbol...\"\n                    value={symbol}\n                    onChange={handleChange}\n                    required\n                    class=\"input is-rounded is-link mt-4\"\n                    disabled={loading}\n                  />\n                </div>\n              </form>\n            </div>\n            <div class=\"column is-3\">\n              <button class=\"button is-link ml-2\" onClick={handleFilter} disabled={loading}>Filter</button>\n              <button class=\"button is-danger ml-5\" onClick={clearFilters} disabled={loading}>\n                Clear All Filters\n              </button>\n              <form onSubmit={handleFilter}>\n                <input\n                  id=\"FilterInput\"\n                  type=\"text\"\n                  placeholder=\"Enter Symbol to Filter\"\n                  value={filterSymbol}\n                  onChange={handleFilterChange}\n                  required\n                  class=\"input is-rounded is-link mt-4\"\n                  disabled={loading}\n                />\n              </form>\n            </div>\n            <div class=\"column is-4\">\n              <button class=\"button is-link ml-4 mr-4\" onClick={handleSort} disabled={loading}>Sort</button>\n              <div class=\"dropdown is-hoverable ml-4\">\n                <div class=\"dropdown-trigger\">\n                  <button class=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu3\" disabled={loading} id=\"form-button\">\n                    <span>Ascending/Descending</span>\n                    <span class=\"icon is-small\">\n                      <FontAwesomeIcon icon={faAngleDown} />\n                    </span>\n                  </button>\n                </div>\n                <div class=\"dropdown-menu\" id=\"sort-dropdown\" role=\"menu\">\n                  <div class=\"dropdown-content\" id=\"sort-dropdown\">\n                    <div class=\"dropdown-item\">\n                      <button\n                        class=\"button is-link\"\n                        id=\"dropdown-buton\"\n                        onClick={setDescendingFalse}\n                        disabled={loading}>\n                        Ascending\n                      </button>\n                      <button\n                        class=\"button is-link mt-4\"\n                        id=\"dropdown-buton\"\n                        onClick={setDescendingTrue}\n                        disabled={loading}>\n                        Descending\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* render the list of stocks and pass down important functions to change aspects of the stocks */}\n        <StockList\n          handleTimeChange={handleTimeChange}\n          filterSymbols={filterSymbols}\n          handleStockChange={handleStockChange}\n          user={user}\n        />\n      </div >\n    );\n  } else {\n    return (\n      <div class=\"modal is-active\">\n        <div class=\"modal-background\"> </div>\n        <div class=\"modal-content\">\n          {/* <!-- Any other Bulma elements you want --> */}\n          <div class=\"section\" id=\"modal-section\">\n            <h3 id=\"modal-heading\">Are you sure you want to clear all stocks?</h3>\n            <button class=\"button is-danger mt-4\" onClick={clear}>Clear All Stocks</button>\n            <button class=\"button is-primary mt-4 ml-4\" onClick={clearModal}>Cancel</button>\n          </div>\n        </div>\n        <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n      </div>\n    );\n  }\n}\n\nexport default StockHub\n","import './Favorite.css'\nimport React, { useContext } from 'react'\nimport { StockContext } from \"../../context/StockContext\";\n\n// Component to display the individual favorite stock in the menu\nfunction Favorite({ favorite, user }) {\n  const { removeFavorite } = useContext(StockContext);\n  let price = favorite.data.values[0].close;\n  price = parseFloat(price).toFixed(2);\n\n  // server url to update favorites\n  const UPDATE_FAVORITES = `http://localhost:3000/favorites/update/`;\n\n  // Display stocks that have gained in value\n  if (favorite.percentChange > 0) {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"green\">\n            <article class=\"message is-primary\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-5 mt-2\"\n                  onClick={() => removeFavorite(favorite.id, user, UPDATE_FAVORITES)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n    // Display stocks that have lost value\n  } else {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"red\">\n            <article class=\"message is-danger\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-5 mt-2\"\n                  onClick={() => removeFavorite(favorite.id, user, UPDATE_FAVORITES)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n  }\n\n}\n\nexport default Favorite;\n","import React, { useContext } from 'react'\nimport { StockContext } from \"../../context/StockContext\";\n\n// Component to display the individual favorite stock in the menu\nfunction ListStock({ favorite, name, url, userId }) {\n  const { removeStockFromList } = useContext(StockContext);\n  let price = favorite.data.values[0].close;\n  price = parseFloat(price).toFixed(2);\n\n  // Remove stock from list\n  const removeStock = (name, symbol) => {\n    removeStockFromList(name, symbol, url, userId);\n  }\n\n  // Display stocks that have gained in value\n  if (favorite.percentChange > 0) {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"green\">\n            <article class=\"message is-primary\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-6 mt-2\"\n                  onClick={() => removeStock(name, favorite.symbol)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n    // Display stocks that have lost value\n  } else {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"red\">\n            <article class=\"message is-danger\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-6 mt-2\"\n                  onClick={() => removeStock(name, favorite.symbol)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n  }\n\n}\n\nexport default ListStock;\n","import ListStock from \"./ListStock\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nfunction RenderLists({ list, hideList, removeList, url, userId }) {\n  return (\n    <>\n      <p class=\"menu-label mt-5\" >\n        <strong id=\"menu-label\">{list.name}</strong>\n        <a onClick={() => hideList(list.name)}>\n          <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n        </a>\n        <button class=\"button is-danger is-small ml-6\" onClick={() => removeList(list.name, url, userId)}>Delete</button>\n        <p id=\"favorites\">\n          {\n            list.stocks.length ? (\n              <div className=\"list\">\n                <ul class=\"menu-list\">\n                  {list.stocks.map(stock => {\n                    return <ListStock favorite={stock} name={list.name} key={stock.id} url={url} userId={userId} />;\n                  })}\n                </ul>\n              </div>\n            ) : (\n              <div className=\"no-favorites\">No Stocks</div>\n            )\n          }\n        </p>\n      </p>\n    </>\n  );\n}\n\nexport default RenderLists;\n","import './Menu.css';\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { StockContext } from \"../../context/StockContext\";\nimport Favorite from '../Favorite/Favorite';\nimport RenderLists from './RenderLists';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp, faAngleDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nconst axios = require('axios').default;\n\n// Component to display all favorite stocks\nfunction Menu({ user }) {\n  // use context api\n  const { favorites, clearFavorites, addList, removeList, lists, clearLists, setNewLists, setNewFavorites } = useContext(StockContext);\n  // list name to add\n  const [listName, setListName] = useState(\"\");\n  // list of lists to conditionally render in dropdown\n  const [listsToRender, setListsToRender] = useState({});\n  // state for first 3 lists to render\n  const [renderGainers, setRenderGainers] = useState(false);\n  const [renderLosers, setRenderLosers] = useState(false);\n  const [renderFavorites, setRenderFavorites] = useState(false);\n  // state to trigger render\n  const [render, setRender] = useState(false);\n  // modal for confirming events\n  const [FavoritesModal, setFavoritesModal] = useState(false);\n  // modal for confirming events\n  const [ListsModal, setListModal] = useState(false);\n  // state to hide the entire menu\n  const [hideMenu, setHideMenu] = useState(false);\n  // server url to create lists\n  const CREATE_LISTS = process.env.REACT_APP_CREATE_LISTS;\n  // server url to create lists\n  const CREATE_FAVORITES = process.env.REACT_APP_CREATE_FAVORITES;\n  // server url to update lists\n  const UPDATE_LISTS = process.env.REACT_APP_UPDATE_LISTS;\n  // server url to get lists\n  const GET_LISTS = process.env.REACT_APP_GET_LISTS + user;\n  // server url to get favorites\n  const GET_FAVORITES = process.env.REACT_APP_GET_FAVORITES + user;\n  // server url to update favorites\n  const UPDATE_FAVORITES = process.env.REACT_APP_UPDATE_FAVORITES;\n\n  useEffect(() => {\n    let renderLists = listsToRender;\n    for (const list of lists) {\n      if (renderLists[list.name] !== false) {\n        renderLists[list.name] = true;\n      }\n    }\n    setListsToRender(renderLists);\n\n    const checkForLists = async () => {\n      try {\n        // fetch the lists data \n        const response = await axios.get(GET_LISTS);\n        // handle error\n        if (response.data.lists.length === 0) {\n          console.log(\"No lists have been created\");\n          // create the new lists\n          const listResponse = await axios.put(CREATE_LISTS,\n            { userId: user, lists: lists });\n          // check for null lists\n          if (listResponse.data.lists === null) {\n            console.log(\"error creating new lists\");\n          } else {\n            console.log(\"created new lists\");\n          }\n        } else {\n          // lists already exists so update the lists\n          const newLists = [];\n          // check if lists exist\n          if (response.data.lists.lists !== undefined) {\n            // loop through every list in the response\n            for (const list of response.data.lists.lists) {\n              newLists.push(list);\n            }\n          }\n          setNewLists(newLists);\n          // update the lists data \n          const res = await axios.put(UPDATE_LISTS, { userId: user, lists: newLists });\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    checkForLists();\n  }, []);\n\n  useEffect(() => {\n    const checkForFavorites = async () => {\n      try {\n        // fetch the favorite data \n        const response = await axios.get(GET_FAVORITES);\n        // handle error\n        if (response.data.favorites === null) {\n          // create the new favorites\n          const FavoriteResponse = await axios.put(CREATE_FAVORITES,\n            { userId: user, favorites: favorites });\n          // check for null favorites\n          if (FavoriteResponse.data.favorites === null) {\n            console.log(\"error creating new favorites\");\n          } else {\n            console.log(\"created new favorites\");\n          }\n        } else {\n          // create the new favorites\n          const newFavorites = [];\n          // check for favorites from database\n          for (const favorite of response.data.favorites.favorites) {\n            newFavorites.push(favorite);\n          }\n          if (newFavorites !== undefined) {\n            setNewFavorites(newFavorites);\n          }\n          // update the favorite data \n          const res = await axios.put(UPDATE_FAVORITES, { userId: user, favorites: newFavorites });\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    checkForFavorites();\n  }, []);\n\n  let index = 0;\n  let gainers = [];\n  let losers = [];\n\n  if (favorites !== undefined) {\n    // get favorite stocks\n    for (let favorite of favorites) {\n      gainers[index] = favorite;\n      losers[index] = favorite;\n      index++;\n    }\n  }\n\n  // filter the stocks by price change\n  gainers = gainers.filter(gainer => gainer.percentChange >= 0);\n  losers = losers.filter(loser => loser.percentChange < 0);\n  // Sort the favorite stocks by price change\n  gainers.sort((a, b) => b.percentChange - a.percentChange);\n  losers.sort((a, b) => a.percentChange - b.percentChange);\n\n  // Change symbol state to match with the input \n  const handleChange = (e) => {\n    e.preventDefault();\n    setListName(e.target.value);\n  }\n\n  // Add the new list from the input\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addList(listName, [], UPDATE_LISTS, user);\n    setListName(\"\");\n  }\n\n  // hide the list\n  const hideList = (name) => {\n    if (name === \"gainers\") {\n      setRenderGainers(false);\n    } else if (name === \"losers\") {\n      setRenderLosers(false);\n    } else if (name === \"favorites\") {\n      setRenderFavorites(false);\n    } else {\n      let renderLists = listsToRender\n      renderLists[name] = false;\n      setListsToRender(renderLists);\n      setRender(!render);\n    }\n  }\n\n  // show the list\n  const showList = (name) => {\n    if (name === \"gainers\") {\n      setRenderGainers(true);\n    } else if (name === \"losers\") {\n      setRenderLosers(true);\n    } else if (name === \"favorites\") {\n      setRenderFavorites(true);\n    } else {\n      let renderLists = listsToRender\n      renderLists[name] = true;\n      setListsToRender(renderLists);\n      setRender(!render);\n    }\n  }\n\n  // clear the list of stocks on the screen\n  const clearFavoritesConfirmed = e => {\n    e.preventDefault();\n    clearFavorites(UPDATE_FAVORITES, user);\n    setFavoritesModal(false);\n  }\n\n  // clear the list of stocks on the screen\n  const clearListsConfirmed = e => {\n    e.preventDefault();\n    clearLists(UPDATE_LISTS, user);\n    setListModal(false);\n  }\n\n  // function to confirm the deletion of all stocks\n  const confirmFavoriteClear = () => {\n    setFavoritesModal(true);\n  }\n\n  // function to set modal to false and close confirmation dialogue \n  const clearFavoriteModal = () => {\n    setFavoritesModal(false);\n  }\n\n  // function to confirm the deletion of all stocks\n  const confirmListsModal = () => {\n    setListModal(true);\n  }\n\n  // function to set modal to false and close confirmation dialogue \n  const clearListsModal = () => {\n    setListModal(false);\n  }\n\n  // function to hide the entire menu\n  const hideMenuFunc = () => {\n    setHideMenu(true);\n  }\n\n  // function to show the entire menu\n  const showMenu = () => {\n    setHideMenu(false);\n  }\n\n  if (hideMenu) {\n    return (\n      <div>\n        <aside class=\"menu\">\n          <a onClick={() => showMenu()} href=\"#toggleMenu\">\n            <FontAwesomeIcon icon={faAngleUp} size=\"2x\" />\n          </a>\n        </aside>\n      </div>\n    );\n  } else {\n    if (!FavoritesModal && !ListsModal) {\n      return (\n        <div>\n          <aside class=\"menu\">\n            <form onSubmit={handleSubmit} className=\"AddListsForm\">\n              <a onClick={() => hideMenuFunc()} href=\"#toggleMenu\">\n                <FontAwesomeIcon id=\"angle-down\" icon={faAngleDown} size=\"2x\" />\n              </a>\n              <a\n                href=\"#createList\"\n                onKeyDown={() => handleSubmit()}\n                onClick={() => handleSubmit()}>\n                <FontAwesomeIcon id=\"circle-icon\" icon={faPlusCircle} size=\"2x\" />\n              </a>\n              <input\n                id=\"menu-input\"\n                class=\"input is-primary\"\n                type=\"text\"\n                placeholder=\"Create new list\"\n                onChange={handleChange}\n                value={listName}\n              />\n            </form>\n            <br />\n            {\n              renderGainers ? (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Gainers</strong>\n                  <a onClick={() => hideList(\"gainers\")} href=\"#gainers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n                  </a>\n                  <p id=\"gainers\">\n                    {\n                      gainers.length ? (\n                        <div className=\"list\">\n                          <ul class=\"menu-list\">\n                            {gainers.map(favorite => {\n                              return <Favorite favorite={favorite} key={favorite.id} user={user} />;\n                            })}\n                          </ul>\n                        </div>\n                      ) : (\n                        <div className=\"no-favorites\">No Gainers</div>\n                      )\n                    }\n                  </p>\n                </p>\n              ) : (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Gainers</strong>\n                  <a onClick={() => showList(\"gainers\")} href=\"#gainers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                  </a>\n                </p>\n              )\n            }\n            {\n              renderLosers ? (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Losers</strong>\n                  <a onClick={() => hideList(\"losers\")} href=\"#losers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n                  </a>\n                  <p id=\"losers\">\n                    {\n                      losers.length ? (\n                        <div className=\"list\">\n                          <ul class=\"menu-list\">\n                            {losers.map(favorite => {\n                              return <Favorite favorite={favorite} key={favorite.id} user={user} />;\n                            })}\n                          </ul>\n                        </div>\n                      ) : (\n                        <div className=\"no-favorites\">No Losers</div>\n                      )\n                    }\n                  </p>\n                </p>\n              ) : (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Losers</strong>\n                  <a onClick={() => showList(\"losers\")} href=\"#losers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                  </a>\n                </p>\n              )\n            }\n            {\n              renderFavorites ? (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Favorites</strong>\n                  <a onClick={() => hideList(\"favorites\")} href=\"#favorites\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n                  </a>\n                  <p id=\"favorites\">\n                    {\n                      favorites.length ? (\n                        <div className=\"list\">\n                          <ul class=\"menu-list\">\n                            {favorites.map(favorite => {\n                              return <Favorite favorite={favorite} key={favorite.id} user={user} />;\n                            })}\n                          </ul>\n                        </div>\n                      ) : (\n                        <div className=\"no-favorites\">No Favorites</div>\n                      )\n                    }\n                  </p>\n                </p>\n              ) : (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Favorites</strong>\n                  <a onClick={() => showList(\"favorites\")} href=\"#favorites\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                  </a>\n                </p>\n              )\n            }\n            <button\n              class=\"button is-danger pr-4 pl-4 mb-2 mt-4\"\n              onClick={() => confirmFavoriteClear()}>\n              Clear Favorites\n            </button>\n            {\n              lists.length ? (\n                <div className=\"list\">\n                  {lists.map(list => {\n                    if (listsToRender[list.name] === true) {\n                      return <RenderLists\n                        list={list}\n                        hideList={hideList}\n                        listsToRender={listsToRender}\n                        removeList={removeList}\n                        url={UPDATE_LISTS}\n                        userId={user}\n                      />;\n                    } else {\n                      return (\n                        <p class=\"menu-label mt-5\">\n                          <strong id=\"menu-label\">{list.name}</strong>\n                          <a onClick={() => showList(list.name)} href=\"#list\">\n                            <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                          </a>\n                          <button\n                            class=\"button is-danger is-small ml-6\"\n                            onClick={() => removeList(list.name)}>\n                            Delete\n                          </button>\n                        </p>\n                      );\n                    }\n                  })}\n                  <button\n                    class=\"button is-danger mt-2 mb-4\"\n                    onClick={() => confirmListsModal()}>\n                    Clear Lists\n                  </button>\n                </div>\n              ) : (\n                <div className=\"no-favorites\">No Custom Lists</div>\n              )\n            }\n          </aside>\n        </div>\n      );\n    } else if (FavoritesModal) {\n      return (\n        <div class=\"modal is-active\">\n          <div class=\"modal-background\"> </div>\n          <div class=\"modal-content\">\n            <div class=\"section\" id=\"modal-section\">\n              <h3 id=\"modal-heading\">Are you sure you want to clear all Favorites?</h3>\n              <button\n                class=\"button is-danger mt-4\"\n                onClick={clearFavoritesConfirmed}>\n                Clear All Favorites\n              </button>\n              <button\n                class=\"button is-primary mt-4 ml-4\"\n                onClick={clearFavoriteModal}>\n                Cancel\n              </button>\n            </div>\n          </div>\n          <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n      );\n    } else if (ListsModal) {\n      return (\n        <div class=\"modal is-active\">\n          <div class=\"modal-background\"> </div>\n          <div class=\"modal-content\">\n            <div class=\"section\" id=\"modal-section\">\n              <h3 id=\"modal-heading\">Are you sure you want to clear all lists?</h3>\n              <button\n                class=\"button is-danger mt-4\"\n                onClick={clearListsConfirmed}>\n                Clear All Lists\n              </button>\n              <button\n                class=\"button is-primary mt-4 ml-4\"\n                onClick={clearListsModal}>\n                Cancel\n              </button>\n            </div>\n          </div>\n          <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n      );\n    } else {\n      return null\n    }\n  }\n}\n\nexport default Menu;\n","import './Dashboard.css';\nimport { useEffect, useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\nimport StockContextProvider from '../../context/StockContext';\nimport StockHub from '../StockHub/StockHub';\nimport Menu from '../Menu/Menu';\nconst axios = require('axios').default;\n\n// Component for the dashboard of the application providing the main functionality\nfunction Dashboard({ user, toggleTheme, theme }) {\n\n  // user Id for the user\n  const [userId, setUserId] = useState('');\n  // server url to update user\n  const CREATE_USER = process.env.REACT_APP_CREATE_USER;\n  // server url to get user\n  let GET_USER = process.env.REACT_APP_GET_USER;\n\n  if (user !== undefined) {\n    GET_USER = process.env.REACT_APP_GET_USER + user.email;\n  }\n\n  // Check if user exists and creat a new user if they do not exist\n  useEffect(() => {\n    const checkForUser = async () => {\n      try {\n        // fetch the stock data \n        const response = await axios.get(GET_USER);\n        // handle error\n        if (response.data.user === null) {\n          console.log(\"No user has been created\");\n          // create the new user\n          const name = user.name.split(' ');\n          const firstName = name[0];\n          const lastName = name[1];\n          const type = 'consumer';\n          const email = user.email;\n          const password = \"placeholder\";\n          const userResponse = await axios.put(CREATE_USER,\n            { userId: userId, firstName: firstName, lastName: lastName, type: type, email: email, password: password });\n          if (userResponse.data.user === null) {\n            console.log(\"error creating new user\");\n          } else {\n            console.log(\"created new user\");\n            setUserId(userResponse.data.user._id);\n          }\n        } else {\n          // user already exists so set the id\n          setUserId(response.data.user._id);\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    if (user !== undefined) {\n      checkForUser();\n    }\n  }, [user]);\n\n  if (user !== undefined && userId !== '') {\n    return (\n      <StockContextProvider>\n        <div className=\"Dashboard\">\n          {/* Navigation */}\n          <header className=\"app-header\">\n            <Nav toggleTheme={toggleTheme} theme={theme} />\n          </header>\n          <div class=\"block\"></div>\n          {/* Column Layout */}\n          <div class=\"columns is-mobile\">\n            <div class=\"column is-2\">\n            </div>\n            <div class=\"column is-8\">\n              {/* Layout to add stocks and individual cards for stocks */}\n              <section class=\"section\">\n                <div class=\"container\">\n                  <div class=\"block\"></div>\n                  <StockHub user={userId} />\n                  <div class=\"block\"></div>\n                </div>\n              </section>\n            </div>\n            {/* Sidebar for favorites */}\n            <div class=\"column is-2\" id=\"SideMenu\">\n              <Menu user={userId} />\n            </div>\n          </div>\n          <div className=\"homeFooter\">\n            <Footer />\n          </div>\n        </div >\n      </StockContextProvider>\n    );\n  } else {\n    return null;\n  }\n\n}\n\nexport default Dashboard;\n","import './Home.css';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Redirect } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\n\n// Component to display the home page of the application\nfunction Home() {\n  // Auth0 authentication handler\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n\n  return (\n    <div className=\"Home\">\n      <body>\n        <section class=\"hero is-medium\" id=\"home-hero\">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <h1 class=\"title is-1\" id=\"homeTitle\">Welcome to MyStockWatch</h1>\n              <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                The simple and intuitive stock tracker and financial news aggregator\n              </h2>\n              {/* <a href=\"register\" class=\"button is-white is-medium is-inverted\">Learn More&ensp; </a> */}\n            </div>\n          </div>\n        </section>\n        <section id=\"parallax-1\" class=\"hero is-large \">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <div class=\"columns\">\n                <div class=\"column is-6 is-offset-6\">\n                  <h1 class=\"title is-1 \" id=\"homeTitle\">Free and Easy to Use Platform</h1>\n                  <hr class=\"content-divider\" />\n                  <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                    Track stocks individually, search, filter, and sort them.\n                  </h2>\n                  <a href=\"register\" class=\"button is-white is-inverted\">Next&ensp;</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section id=\"parallax-2\" class=\"hero is-large \">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <div class=\"columns\">\n                <div class=\"column is-6\">\n                  <h1 class=\"title is-1 \" id=\"homeTitle\">Get the Latest Financial News</h1>\n                  <hr class=\"content-divider\" />\n                  <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                    Add stocks to your favorites and get news in one place.\n                  </h2>\n                  <a href=\"register\" class=\"button is-white is-inverted\">Next&ensp;</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section id=\"parallax-3\" class=\"hero is-large \">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <div class=\"columns\">\n                <div class=\"column is-6 is-offset-6\">\n                  <h1 class=\"title is-1 \" id=\"homeTitle\">\n                    For Beginners and Advanced Users Alike\n                  </h1>\n                  <hr class=\"content-divider\" />\n                  <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                    Get financial data displayed from many different timeframes of your choosing. Also display the charts using simple or technical charts.\n                  </h2>\n                  <a href=\"register\" class=\"button is-white is-inverted\">Next&ensp; </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section class=\"cta va\" id=\"home-cta\">\n          <div class=\"container\">\n            <div class=\"columns\">\n              <div class=\"column is-6\">\n                <h1 class=\"title is-1 \" id=\"homeTitle\">Sign Up Today!</h1>\n                <hr class=\"content-divider\" />\n                <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                  Sign Up with your email and password become a user today!\n                </h2>\n                <a href=\"register\">\n                  <button class=\"button is-black mt-2\">Register</button>\n                </a>\n                <button\n                  class=\"button is-black mt-2 ml-4\"\n                  onClick={() => loginWithRedirect()}>\n                  Login\n                </button>\n                {isAuthenticated ? (\n                  <a href=\"dashboard\">\n                    <button class=\"button is-black mt-2 ml-4\">Dashboard</button>\n                  </a>) : null}\n              </div>\n            </div>\n          </div>\n        </section>\n      </body>\n    </div >\n  );\n}\n\nexport default Home;\n","import './Card.css';\nimport { useState } from \"react\";\n\n// Component for individual news card\nfunction Card({ article, type }) {\n  let name = \"\";\n  let count = 0;\n  let thumbnail = \"https://bulma.io/images/placeholders/1280x960.png\";\n  let image = \"https://bulma.io/images/placeholders/1280x960.png\";\n  let organization = \"\";\n  let description = \"\";\n  let date = \"\";\n  let link = \"\";\n\n  if (type === \"trending\") {\n    for (const letter of article.name) {\n      if (count < 60) {\n        name += letter;\n      } else {\n        name += \"...\";\n        break;\n      }\n      count++;\n    }\n    if (article.name.length < 49) {\n      name += \"\\r\\n \";\n    }\n    if (article.description !== undefined) {\n      count = 0;\n      for (const letter of article.description) {\n        if (count < 120) {\n          description += letter;\n        } else {\n          description += \"...\";\n          break;\n        }\n        count++;\n      }\n    }\n    if (article.provider[0].image.thumbnail.contentUrl !== undefined) {\n      thumbnail = article.provider[0].image.thumbnail.contentUrl;\n    }\n    if (article.provider[0].name !== undefined) {\n      organization = article.provider[0].name;\n    }\n    if (article.datePublished !== undefined) {\n      for (let index = 0; index < 10; index++) {\n        date += article.datePublished[index];\n      }\n    }\n    if (article.image !== undefined) {\n      image = article.image.thumbnail.contentUrl;\n    }\n    if (article.url !== undefined) {\n      link = article.url;\n    }\n  } else {\n    for (const letter of article.attributes.title) {\n      if (count < 60) {\n        name += letter;\n      } else {\n        name += \"...\";\n        break;\n      }\n      count++;\n    }\n    if (name.length < 49) {\n      name += \"\\r\\n \";\n    }\n    if (article.attributes.gettyImage !== undefined && article.attributes.gettyImage !== null) {\n      image = article.attributes.gettyImage.crop_4_3;\n    }\n    if (article.attributes.publishOn !== undefined) {\n      for (let index = 0; index < 10; index++) {\n        date += article.attributes.publishOn[index];\n      }\n    }\n    if (article.links.self !== undefined) {\n      link = article.links.self;\n\n    }\n  }\n\n  const handleRedirect = () => {\n    window.open(link, \"_blank\");\n  }\n\n  const handleNewsRedirect = () => {\n    const newLink = 'http://www.google.com/search?q=' + link;\n    window.open(newLink, \"_blank\");\n  }\n\n  if (type === \"trending\") {\n    return (\n      <div class=\"card\" id=\"news-card\">\n        {/* <div class=\"card-image\">\n          <figure class=\"image is-4by3\">\n            <img src={image} alt=\"main section\" />\n          </figure>\n        </div> */}\n        <div class=\"card-content\" id=\"news-content\">\n          <div class=\"media\">\n            <div class=\"media-left\">\n              <figure class=\"image is-48x48\">\n                <img src={thumbnail} alt=\"profile\" />\n              </figure>\n            </div>\n            <div class=\"media-content\">\n              <p class=\"title is-4\" id=\"card-title\">{name}</p>\n            </div>\n          </div>\n          <div class=\"content\">\n            {organization}<br /><br />\n            {description}\n          </div>\n          <time datetime={date}>Date: {date}</time>\n          <div class=\"block\"></div>\n          {/* <button class=\"button is-link\">Expand</button> */}\n          <button class=\"button is-link\" onClick={handleRedirect}>\n            Read Article\n          </button>\n\n          <div class=\"modal\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">\n                <p class=\"modal-card-title\">Modal title</p>\n                <button class=\"delete\" aria-label=\"close\"></button>\n              </header>\n              <section class=\"modal-card-body\">\n                {/* <!-- Content ... --> */}\n              </section>\n              <footer class=\"modal-card-foot\">\n                <button class=\"button is-success\">Save changes</button>\n                <button class=\"button\">Cancel</button>\n              </footer>\n            </div>\n          </div>\n        </div>\n      </div >\n    );\n  } else {\n    return (\n      <div class=\"card mt-6\" id=\"news-card\">\n        {/* <div class=\"card-image\">\n          <figure class=\"image is-4by3\">\n            <img src={image} alt=\"main section\" />\n          </figure>\n        </div> */}\n        <div class=\"card-content\" id=\"news-content\">\n          <div class=\"media\">\n            <div class=\"media-left\">\n            </div>\n            <div class=\"media-content\">\n              <p class=\"title is-4\" id=\"card-title\">{name}</p>\n            </div>\n          </div>\n          <time datetime={date}>Date: {date}</time>\n          <div class=\"block\"></div>\n          {/* <button class=\"button is-link\">Expand</button> */}\n          <button class=\"button is-link\" onClick={handleNewsRedirect}>\n            Read Article\n          </button>\n\n          <div class=\"modal\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">\n                <p class=\"modal-card-title\">Modal title</p>\n                <button class=\"delete\" aria-label=\"close\"></button>\n              </header>\n              <section class=\"modal-card-body\">\n                {/* <!-- Content ... --> */}\n              </section>\n              <footer class=\"modal-card-foot\">\n                <button class=\"button is-success\">Save changes</button>\n                <button class=\"button\">Cancel</button>\n              </footer>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import Card from \"./../Card/Card\";\n\n// Component to display a list of news cards\nconst CardList = ({ news, type }) => {\n\n  return (\n    <div class=\"CardList\">\n      {news.length ? (\n        <div class=\"columns is-mobile\">\n          <div class=\"column is-4\">\n            <Card article={news[0]} type={type} />\n            <Card article={news[3]} type={type} />\n            <Card article={news[6]} type={type} />\n            <Card article={news[9]} type={type} />\n          </div>\n          <div class=\"column is-4\">\n            <Card article={news[1]} type={type} />\n            <Card article={news[4]} type={type} />\n            <Card article={news[7]} type={type} />\n            <Card article={news[10]} type={type} />\n          </div>\n          <div class=\"column is-4\">\n            <Card article={news[2]} type={type} />\n            <Card article={news[5]} type={type} />\n            <Card article={news[8]} type={type} />\n            <Card article={news[11]} type={type} />\n          </div>\n        </div>\n      ) : (\n        <article class=\"message is-link mt-6 ml-6\">\n          <div class=\"message-body \">\n            <strong>No News</strong>\n          </div>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default CardList;\n","import './News.css';\nimport Nav from '../Nav/Nav';\nimport CardList from '../CardList/CardList';\nimport Footer from '../Footer/Footer';\nimport { useState, useEffect, useContext } from \"react\";\nconst axios = require('axios').default;\n\n// Component to display the news cards\nfunction News({ toggleTheme }) {\n  // array of news articles\n  const [news, setNews] = useState([]);\n  // symbol of the stock to be searched\n  const [symbol, setSymbol] = useState('');\n  // when the page is loading some actions are disabled\n  const [loading, setLoading] = useState(false);\n  // type of news to be displayed (individual or trending)\n  const [type, setType] = useState('trending');\n\n  // News API\n  const BingNewsOptions = {\n    method: 'GET',\n    url: process.env.REACT_APP_NEWS_URL,\n    params: { textFormat: 'Raw', safeSearch: 'Off', category: 'Business' },\n    headers: {\n      'x-bingapis-sdk': 'true',\n      'x-rapidapi-host': process.env.REACT_APP_NEWS_HOST,\n      'x-rapidapi-key': process.env.REACT_APP_NEWS_KEY\n    }\n  };\n\n  const SeekingAlphaIndividual = {\n    method: 'GET',\n    url: process.env.REACT_APP_NEWS_SYMBOL_URL,\n    params: { id: `${symbol}`, size: '20', until: '0' },\n    headers: {\n      'x-rapidapi-host': process.env.REACT_APP_NEWS_SYMBOL_HOST,\n      'x-rapidapi-key': process.env.REACT_APP_NEWS_SYMBOL_KEY\n    }\n  };\n\n  // Fetches the stock data with the symbol and displays is in a graph\n  const addNewsData = async () => {\n    try {\n      // fetch the data\n      const response = await axios.request(BingNewsOptions);\n      // handle error\n      if (response.data.status === \"error\") {\n        console.log(response.data.message);\n      } else {\n        let articles = [];\n        for (const article of response.data.value) {\n          articles.push(article);\n        }\n        setNews(articles);\n      }\n      // handle error\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const addNewsForSymbol = async () => {\n    try {\n      // fetch the data\n      const response = await axios.request(SeekingAlphaIndividual);\n      // handle error\n      if (response.data.status === \"error\") {\n        console.log(response.data.message);\n      } else {\n        let articles = [];\n        for (const article of response.data.data) {\n          articles.push(article);\n        }\n        setNews(articles);\n      }\n      // handle error\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    if (type === 'trending') {\n      addNewsData();\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    if (news.length === 20) {\n      setType('individual');\n    } else {\n      setType('trending');\n    }\n    setLoading(false);\n  }, [news]);\n\n  // Add the news data for the current symbol in input bar\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    addNewsForSymbol();\n  }\n\n  // Change symbol state to match with the input \n  const handleChange = (e) => {\n    e.preventDefault();\n    setSymbol(e.target.value);\n  }\n\n  // set the articles back to trending news\n  const clear = e => {\n    e.preventDefault();\n    setLoading(true);\n    addNewsData();\n  }\n\n  if (loading) {\n    return (\n      <div></div>\n    );\n  } else {\n    return (\n      <div classname=\"News\" id=\"NewsSection\">\n        {/* Navigation */}\n        <header className=\"app-header\">\n          <Nav toggleTheme={toggleTheme} />\n        </header>\n        <div class=\"block\"></div>\n\n        {/* Column Layout */}\n        <div class=\"columns is-mobile\">\n          <div class=\"column is-2\">\n          </div>\n          <div class=\"column is-8\">\n            <div className=\"button-and-forms mt-4\">\n              <div class=\"columns\">\n                <div class=\"column is-6\">\n                  <section class=\"hero is-link\" id=\"hero-dash\">\n                    <div class=\"hero-body\">\n                      <p class=\"subtitle\" id=\"hero-color\">\n                        Enter the symbol and click the <strong id=\"hero-color\">Add News button or Enter</strong>, to get news pertaining to the stock.\n                      </p>\n                    </div>\n                  </section>\n                </div>\n                <div class=\"column is-6 mt-6\">\n                  <button\n                    class=\"button is-link\"\n                    onClick={handleSubmit}\n                    disabled={loading}>\n                    Add News\n                  </button>\n                  <button\n                    class=\"button is-danger ml-5\"\n                    onClick={clear}\n                    disabled={loading}>\n                    Clear Filter\n                  </button>\n                  <form onSubmit={handleSubmit}>\n                    <div className=\"stock-form\" id=\"stock-search\">\n                      <input\n                        id=\"StockInput\"\n                        type=\"text\"\n                        placeholder=\"Enter Symbol...\"\n                        value={symbol}\n                        onChange={handleChange}\n                        required\n                        class=\"input is-rounded is-link mt-4\"\n                        disabled={loading}\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            {/* Layout to add stocks and individual cards for stocks */}\n            <CardList key={news} news={news} type={type} />\n          </div>\n          <div class=\"column is-2\" id=\"SideMenu\">\n          </div>\n        </div>\n\n        <div className=\"homeFooter\">\n          <Footer />\n        </div>\n\n      </div >\n    );\n  }\n\n}\n\nexport default News;\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './components/Theme/theme';\nimport { GlobalStyles } from './components/Theme/globalStyles';\nimport { useDarkMode } from './components/Theme/useDarkMode';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Home from './components/Home/Home';\nimport News from './components/News/News.jsx';\n\nfunction App() {\n  // theme toggle state\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  // theme state\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  // user authentication from auth0\n  const { user, isAuthenticated } = useAuth0();\n\n  //Router for the application\n  if (isAuthenticated) {\n    if (!componentMounted) {\n      return <></>;\n    } else {\n      return (\n        <ThemeProvider theme={themeMode}>\n          <div className=\"app\">\n            <GlobalStyles />\n            <Router>\n              <Route path=\"/\" exact children={<Home />} />\n              <Route path=\"/dashboard\" exact children={<Dashboard user={user} toggleTheme={toggleTheme} theme={theme} />} />\n              <Route path=\"/home\" exact children={<Home />} />\n              <Route path=\"/news\" exact children={<News toggleTheme={toggleTheme} theme={theme} />} />\n            </Router>\n          </div >\n        </ThemeProvider>\n      );\n    }\n  } else {\n    if (!componentMounted) {\n      return <></>;\n    }\n    else {\n      return (\n        <ThemeProvider theme={themeMode}>\n          <div className=\"app\">\n            <GlobalStyles />\n            <Router>\n              <Route path=\"/\" exact children={<Home />} />\n            </Router>\n          </div>\n        </ThemeProvider>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('dark');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !localTheme) {\n      setMode('dark');\n    } else if (localTheme) {\n      setTheme(localTheme);\n      setMode('light');\n    }\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted]\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.css';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\nconst redirectUri = process.env.REACT_APP_AUTH0_REDIRECT_URI;\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    // redirectUri={window.location.origin}\n    redirectUri={redirectUri}>\n    <App />\n  </Auth0Provider >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}