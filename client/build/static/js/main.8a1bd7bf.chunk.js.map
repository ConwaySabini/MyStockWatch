{"version":3,"sources":["components/Theme/theme.js","components/Theme/globalStyles.js","components/Nav/Nav.jsx","components/Footer/Footer.jsx","context/StockContext.jsx","components/TechnicalGraph/TechnicalGraph.jsx","components/Stock/StockButtons.jsx","components/Stock/Stock.jsx","components/StockList/StockList.jsx","components/StockHub/StockHub.jsx","components/Favorite/Favorite.jsx","components/Menu/ListStock.jsx","components/Menu/RenderLists.jsx","components/Menu/Menu.jsx","components/Dashboard/Dashboard.jsx","components/Home/Home.jsx","components/Card/Card.jsx","components/CardList/CardList.jsx","components/News/News.jsx","App.jsx","components/Theme/useDarkMode.js","reportWebVitals.js","index.jsx"],"names":["lightTheme","body","stockBody","navBar","hover","text","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","theme","Nav","toggleTheme","logout","useAuth0","useState","isBurger","setIsBurger","className","class","role","aria-label","id","href","icon","faChartLine","size","onClick","aria-expanded","aria-hidden","faMoon","faSun","Footer","axios","require","default","StockContext","createContext","StockContextProvider","props","initialStockState","JSON","parse","localStorage","getItem","initialFavoriteState","initialListsState","initialTADataState","stocks","setStocks","favorites","setFavorites","lists","setLists","taData","setTAData","useEffect","setItem","stringify","findTAData","symbol","type","find","data","toUpperCase","removeFavorite","userId","url","newFavorites","filter","favorite","updateFavoriteData","findFavorite","findStock","stock","updateStockData","newStocks","a","put","console","error","updateListData","newLists","Provider","value","addStock","percentChange","timeline","nanoid","removeStock","favoriteURL","listsURL","foundStock","undefined","list","push","deleteStockFromLists","clearStocks","stocksURL","favoritesURL","userID","addFavorite","clearFavorites","setNewFavorites","findSymbol","stockToGet","editStock","map","editFavorite","getStockTime","setNewStocks","removeList","name","addList","addStockToList","foundList","clearLists","findList","setNewLists","removeStockFromList","addTAData","newTAData","techData","removeTAData","clearTAData","children","TechnicalGraph","width","height","stockData","idx","low","values","close","high","i","length","Math","min","max","margin","left","right","top","bottom","discontinuousTimeScaleProviderBuilder","inputDateAccessor","d","Date","datetime","ScaleProvider","xScale","xAccessor","displayXAccessor","pricesDisplayFormat","format","chartHeight","timeDisplayFormat","timeFormat","openCloseColor","open","ChartCanvas","ratio","seriesName","zoomAnchor","lastVisibleItemBasedZoomAnchor","Chart","yExtents","YAxis","showGridLines","tickFormat","CandlestickSeries","MouseCoordinateY","rectWidth","displayFormat","EdgeIndicator","itemType","fill","lineStroke","yAccessor","MovingAverageTooltip","origin","options","ZoomButtons","OHLCTooltip","XAxis","MouseCoordinateX","CrossHairCursor","StockButtons","handleChart","loading","setLoading","user","handleUpdate","handleStockModal","handleTADisplay","clearTechnicalAnalysis","useContext","setList","UPDATE_FAVORITES","process","UPDATE_LISTS","sub","aria-haspopup","aria-controls","disabled","faAngleDown","faTrashAlt","Stock","handleStockChange","handleTimeChange","simpleChart","setSimpleChart","ta","setTA","technicalChange","setTechnicalChange","smaValues","setSMAValues","emaValues","setEMAValues","rsiValues","setRSIValues","macdValues","setMACDValues","stochValues","setSTOCHValues","bbandsValues","setBBANDSValues","useDimensions","breakpoints","XS","SM","MD","LG","updateOnBreakpointChange","onResize","observe","unobserve","entry","MACD","method","params","interval","slow_period","fast_ma_type","outputsize","fast_period","slow_ma_type","signal_period","series_type","signal_ma_type","headers","SMA","time_period","EMA","BBANDS","ma_type","sd","RSI","STOCH","slow_d_period","fast_k_period","slow_dma_type","slow_kma_type","slow_k_period","sma","ema","bbands","rsi","macd","stoch","addTechnicalAnalysis","dataOptions","request","response","log","status","message","calculateEMA","calculateSMA","calculateRSI","calculateBBANDS","calculateSTOCH","calculateMACD","labels","prices","taIndex","lower_band","middle_band","upper_band","macd_signal","macd_hist","slow_k","slow_d","clearSMA","clearEMA","clearBBANDS","clearMACD","clearSTOCH","clearRSI","handleTechnicalChange","time","flag","militaryTime","mainTimeline","index","timeIndex","label","slice","graphOptions","responsive","title","display","fontSize","fontColor","legend","position","graphOptionsMACD","graphOptionsRSI","graphOptionsSTOCH","macdData","canvas","datasets","ctx","getContext","gradientStroke","createLinearGradient","gradientFill","gradientSignal","addColorStop","macdLine","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","borderWidth","macdSignal","macdHistogram","rsiData","stochData","graidentSlowD","ref","gradientStrokeSMA","gradientStrokeEMA","gradientStrokeBBANDS","result","lower","middle","upper","StockList","filterSymbols","filterStocks","StockHub","setSymbol","setFilterSymbols","filterSymbol","setFilterSymbol","setTimeline","descending","setDescending","modal","setModal","stockModal","setStockModal","stockView","setStock","showHero","setShowHero","updateStocks","setUpdateStocks","stockChange","setStockChange","currentStock","setCurrentStock","currentFavorite","setCurrentFavorite","UPDATE_STOCKS","SERVER","fetchDataFromServer","get","createNewStockData","_id","addStockData","calculatePercentChange","firstRender","useRef","changeStockData","current","priceSize","endPrice","startPrice","percentChangeRounded","toFixed","parseFloat","handleSubmit","e","preventDefault","handleFilter","splitSymbols","includes","replace","split","stockSymbol","toggleHero","faAngleUp","onSubmit","placeholder","onChange","target","required","sortedStocks","sort","b","Favorite","price","ListStock","RenderLists","hideList","Menu","listName","setListName","listsToRender","setListsToRender","renderGainers","setRenderGainers","renderLosers","setRenderLosers","renderFavorites","setRenderFavorites","render","setRender","FavoritesModal","setFavoritesModal","ListsModal","setListModal","hideMenu","setHideMenu","GET_LISTS","GET_FAVORITES","renderLists","checkForLists","checkForFavorites","gainers","losers","gainer","loser","event","showList","onKeyDown","faPlusCircle","Dashboard","setUserId","GET_USER","email","firstName","lastName","password","userResponse","checkForUser","Home","loginWithRedirect","isAuthenticated","Card","article","count","thumbnail","organization","description","date","link","letter","provider","image","contentUrl","datePublished","attributes","publishOn","links","self","src","alt","window","newLink","CardList","news","News","setNews","setType","BingNewsOptions","textFormat","safeSearch","category","SeekingAlphaIndividual","until","addNewsData","articles","addNewsForSymbol","classname","App","setTheme","componentMounted","setComponentMounted","setMode","mode","useDarkMode","themeMode","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.8a1bd7bf.chunk.js","sourcesContent":["export const lightTheme = {\n  body: '#F7F7F7',\n  stockBody: '#c8c8c8',\n  navBar: '#FFFFFF',\n  hover: '#cbc9cf',\n  text: '#363537',\n  toggleBorder: '#FFF',\n  gradient: 'linear-gradient(#39598A, #79D7ED)',\n}\n\nexport const darkTheme = {\n  body: '#2E2E2E',\n  stockBody: '#3d3c3e',\n  navBar: '#363537',\n  hover: '#757378',\n  text: '#FAFAFA',\n  toggleBorder: '#6B8096',\n  gradient: 'linear-gradient(#091236, #1E215D)',\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n  \n  .Dashboard {\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #NewsSection {\n    background-color: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #news-card {\n    background-color: ${({ theme }) => theme.navBar};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #menu-label {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #card-title {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #navigation-bar {\n    background-color: ${({ theme }) => theme.navBar};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #navbar-item:hover {\n    background-color: ${({ theme }) => theme.hover};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #navbar-item {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #home-footer {\n    background-color: ${({ theme }) => theme.navBar};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #StockChart {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #stock-modal-section {\n    background-color: ${({ theme }) => theme.navBar};\n    transition: all 0.25s linear;\n  }\n\n  #hero-color {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n  \n  #StockInput {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #FilterInput {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #FilterInput::placeholder {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #StockInput::placeholder {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #menu-input {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #menu-input::placeholder {\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n\n  #form-button {\n    background-color: ${({ theme }) => theme.stockBody};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n  \n  #burger {\n    background-color: ${({ theme }) => theme.navBar};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }`;\n","import './Nav.css';\nimport { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartLine, faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\n\n// Component to render the navigation bar\nfunction Nav({ toggleTheme, theme }) {\n  const { logout } = useAuth0();\n  const [isBurger, setIsBurger] = useState(false);\n\n  return (\n    <div className=\"navigation\">\n      <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\" id=\"navigation-bar\">\n        <>\n          {\n            isBurger ? (\n              <>\n                <div class=\"navbar-brand\" id=\"navbar-hover\">\n                  <a class=\"navbar-item\" href=\"/dashboard#title\" >\n                    <FontAwesomeIcon icon={faChartLine} size=\"2x\" />\n                    <a class=\"nav-title fa-2x\" href=\"/dashboard#title\">\n                      MyStockWatch\n                    </a>\n                    {/* <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" /> */}\n                  </a>\n\n                  <a\n                    href=\"#burger\"\n                    role=\"button\"\n                    class=\"navbar-burger showNav is-active\"\n                    onClick={() => setIsBurger(!isBurger)}\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    id=\"burger\"\n                  >\n                    <span aria-hidden=\"true\" id=\"burger\"></span>\n                    <span aria-hidden=\"true\" id=\"burger\"></span>\n                    <span aria-hidden=\"true\" id=\"burger\"></span>\n                  </a>\n                </div>\n                <div id=\"navigation-bar\" class=\"navbar-menu is-active\">\n                  <div class=\"navbar-start\">\n                    <a class=\"navbar-item\" href=\"/home\" id=\"navbar-item\">\n                      Home\n                    </a>\n                    <a class=\"navbar-item\" href=\"/dashboard\" id=\"navbar-item\">\n                      Dashboard\n                    </a>\n                    <a class=\"navbar-item\" href=\"/news\" id=\"navbar-item\">\n                      News\n                    </a>\n                    {/* <a class=\"navbar-item\" href=\"about\">\n              About\n            </a> */}\n                  </div>\n                  <div class=\"navbar-end\">\n                    <div class=\"navbar-item\">\n                      <div class=\"buttons\">\n                        {\n                          theme === 'light' ? (\n                            <button class=\"button is-link mt-2\" onClick={toggleTheme}>\n                              <FontAwesomeIcon icon={faMoon} />\n                            </button>\n                          ) : (\n                            <button class=\"button is-link mt-2\" onClick={toggleTheme}>\n                              <FontAwesomeIcon icon={faSun} />\n                            </button>\n                          )\n                        }\n                        <button class=\"button is-primary mt-2 ml-2 mb-2\" onClick={() => logout()}>\n                          <strong>Log Out</strong>\n                        </button>\n                      </div>\n                      {/* <Profile></Profile> */}\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <div class=\"navbar-brand\">\n                  <a class=\"navbar-item\" href=\"/dashboard#title\">\n                    <FontAwesomeIcon icon={faChartLine} size=\"2x\" />\n                    <a class=\"nav-title fa-2x\" href=\"/dashboard#title\">\n                      MyStockWatch\n                    </a>\n                    {/* <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" /> */}\n                  </a>\n\n                  <a\n                    href=\"#burger\"\n                    role=\"button\"\n                    class=\"navbar-burger showNav\"\n                    onClick={() => setIsBurger(!isBurger)}\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                  >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                  </a>\n                </div>\n                <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n                  <div class=\"navbar-start\">\n                    <a class=\"navbar-item\" href=\"/home\" id=\"navbar-item\">\n                      Home\n                    </a>\n                    <a class=\"navbar-item\" href=\"/dashboard\" id=\"navbar-item\">\n                      Dashboard\n                    </a>\n                    <a class=\"navbar-item\" href=\"/news\" id=\"navbar-item\">\n                      News\n                    </a>\n                    {/* <a class=\"navbar-item\" href=\"about\">\n              About\n            </a> */}\n                  </div>\n                  <div class=\"navbar-end\">\n                    <div class=\"navbar-item\">\n                      <div class=\"buttons\">\n                        {\n                          theme === 'light' ? (\n                            <button class=\"button is-link mt-2\" onClick={toggleTheme}>\n                              <FontAwesomeIcon icon={faMoon} />\n                            </button>\n                          ) : (\n                            <button class=\"button is-link mt-2\" onClick={toggleTheme}>\n                              <FontAwesomeIcon icon={faSun} />\n                            </button>\n                          )\n                        }\n                        <button class=\"button is-primary mt-2 ml-2 mb-2\" onClick={() => logout()}>\n                          <strong>Log Out</strong>\n                        </button>\n                      </div>\n                      {/* <Profile></Profile> */}\n                    </div>\n                  </div>\n                </div>\n              </>\n            )\n          }\n        </>\n      </nav >\n\n    </div >\n  );\n}\n\nexport default Nav;\n","import './Footer.css';\n\n//TODO link my name to portfolio\n// Component to display the footer of the application\nfunction Footer() {\n  return (\n\n    <div className=\"HomeFooter\" >\n      {/* Footer with information and links */}\n      <footer class=\"footer\" id=\"home-footer\">\n        <section class=\"section is-small\">\n          <div class=\"container\">\n            <div class=\"content has-text-centered\">\n              <div class=\"soc\">\n                <a href=\"/#github\">\n                  <i class=\"fa fa-github-alt fa-lg\" role=\"none\"></i>\n                </a>\n              </div>\n              <div className=\"FooterMessage\">\n                <p>\n                  <strong>MyStockWatch</strong> by <a href=\"/\">Ethan Sabini</a>. The source code is licensed by\n                  <a href=\"http://opensource.org/licenses/mit-license.php\"> MIT</a>. The website content\n                  is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </footer>\n\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect, createContext } from 'react';\nimport { nanoid } from 'nanoid';\nconst axios = require('axios').default;\n\nexport const StockContext = createContext();\n\nconst StockContextProvider = props => {\n    // Set the state in local storage\n    const initialStockState = JSON.parse(localStorage.getItem('stocks')) || [];\n    const initialFavoriteState = JSON.parse(localStorage.getItem('favorites')) || [];\n    const initialListsState = JSON.parse(localStorage.getItem('lists')) || [];\n    const initialTADataState = JSON.parse(localStorage.getItem('taData')) || [];\n\n    // states for stock, favorites, and news list\n    const [stocks, setStocks] = useState(initialStockState);\n    const [favorites, setFavorites] = useState(initialFavoriteState);\n    const [lists, setLists] = useState(initialListsState);\n    const [taData, setTAData] = useState(initialTADataState);\n\n    // update local storage on modification\n    useEffect(() => {\n        localStorage.setItem('stocks', JSON.stringify(stocks));\n    }, [stocks]);\n\n    // update local storage on modification\n    useEffect(() => {\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n    }, [favorites]);\n\n    // update local storage on modification\n    useEffect(() => {\n        localStorage.setItem('lists', JSON.stringify(lists));\n    }, [lists]);\n\n    // update local storage on modification\n    useEffect(() => {\n        localStorage.setItem('taData', JSON.stringify(taData));\n    }, [taData]);\n\n    // Add taData to the state\n    const addTAData = (symbol, timeline, type, data) => {\n        const foundData = findTAData(symbol, type);\n        // if data already exists, delete it first\n        if (foundData !== undefined) {\n            let newTAData = taData.filter(function (techData) {\n                if (techData.symbol.toUpperCase() !== symbol.toUpperCase() && techData.type.toUpperCase() !== type.toUpperCase())\n                    return true;\n                return false;\n            });\n            newTAData = [...newTAData, { symbol, timeline, type, data, id: nanoid() }];\n            setTAData(newTAData);\n        }\n        else {\n            // create new data\n            const newTAData = [...taData, { symbol, timeline, type, data, id: nanoid() }];\n            setTAData(newTAData);\n        }\n    }\n\n    // remove taData from the state\n    const removeTAData = (symbol, type) => {\n        let newTAData = taData.filter(function (data) {\n            if (data.symbol.toUpperCase() !== symbol.toUpperCase() && data.type.toUpperCase() !== type.toUpperCase())\n                return true;\n            return false;\n        });\n        setTAData(newTAData);\n    }\n\n    // find taData\n    const findTAData = (symbol, type) => {\n        return taData.find(function (data) {\n            if (data.symbol.toUpperCase() === symbol.toUpperCase() && data.type.toUpperCase() === type.toUpperCase())\n                return data;\n            return undefined;\n        });\n    }\n\n    // Clear TA Data\n    const clearTAData = () => {\n        // update context\n        setTAData([]);\n    }\n\n    // Add favorites\n    const addFavorite = (symbol, data, percentChange, timeline, url, userId) => {\n        const newFavorites = [...favorites, { symbol, data, percentChange, timeline, id: nanoid() }];\n        setFavorites(newFavorites);\n        updateFavoriteData(url, userId, newFavorites);\n    }\n\n    // Remove favorites\n    const removeFavorite = (id, userId, url) => {\n        let newFavorites = favorites.filter(favorite => favorite.id !== id);\n        setFavorites(newFavorites);\n\n        // delete the stock from the favorites database\n        updateFavoriteData(url, userId, newFavorites);\n    }\n\n    // Clear favorites\n    const clearFavorites = (url, userId) => {\n        let newFavorites = [];\n        // update database with new favorites\n        updateFavoriteData(url, userId, newFavorites);\n        // update context\n        setFavorites([]);\n    }\n\n    // Find Favorite\n    const findFavorite = symbol => {\n        return favorites.find(favorite => favorite.symbol.toUpperCase() === symbol.toUpperCase());\n    }\n\n    // Add List\n    const addList = (name, stocks, url, userId) => {\n        //check if list name already exists\n        const listExists = lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n        if (listExists === undefined) {\n            // add the list to the lists\n            let newLists = [...lists, { name, stocks, id: nanoid() }];\n            // update database with new lists\n            updateListData(url, userId, newLists);\n            // update context\n            setLists(newLists);\n        }\n    }\n\n    // Find List\n    const findList = name => {\n        return lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n    }\n\n    // Find and remove List\n    const removeList = (name, url, userId) => {\n        let newLists = lists.filter(list => list.name.toUpperCase() !== name.toUpperCase());\n        // update context\n        setLists(newLists);\n        // update database with new lists\n        updateListData(url, userId, newLists);\n    }\n\n    // Add a stock to a list\n    const addStockToList = (name, symbol, url, userId) => {\n        // edit stock if it exists\n        const foundStock = stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n        // find the list with the stock\n        const foundList = lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n        // check if stock already exists in list\n        const inList = foundList.stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n        // add the stock to the list if it is not in the list already\n        if (inList === undefined) {\n            // set the new stocks with added stock\n            let newStocks = [...foundList.stocks, foundStock];\n            foundList.stocks = newStocks;\n            // update the lists\n            const newLists = lists.map(list => (list.name.toUpperCase() === name.toUpperCase() ? foundList : list));\n            // update the database and context\n            updateListData(url, userId, newLists);\n            setLists(newLists);\n        }\n    }\n\n    // remove a stock from a list\n    const removeStockFromList = (name, symbol, url, userId) => {\n        // edit stock if it exists\n        const foundStock = stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n        const foundList = lists.find(list => list.name.toUpperCase() === name.toUpperCase());\n        // change the lists stocks to remove the stock\n        foundList.stocks = foundList.stocks.filter(stock => stock.symbol.toUpperCase() !== foundStock.symbol.toUpperCase());\n        // Add the list to the lists\n        const newLists = lists.map(list => (list.name.toUpperCase() === name.toUpperCase() ? foundList : list));\n        // update the list in the database\n        updateListData(url, userId, newLists);\n        // update context API lists\n        setLists(newLists);\n    }\n\n    // check if a list contains a stock\n    const deleteStockFromLists = (symbol, userId, url) => {\n        let newLists = [];\n        // find the lists if they exist\n        for (let list of lists) {\n            newLists.push(list);\n        }\n        for (let list of newLists) {\n            for (let stock of list.stocks) {\n                if (stock.symbol === symbol) {\n                    // remove the stock from the list\n                    list.stocks = list.stocks.filter(stock => stock.symbol.toUpperCase() !== symbol.toUpperCase());\n                }\n            }\n        }\n        setLists(newLists);\n        // delete the stock from the lists database\n        updateListData(url, userId, newLists);\n    }\n\n    // Clear favorites\n    const clearLists = (url, userId) => {\n        let newLists = [];\n        updateListData(url, userId, newLists);\n        setLists([]);\n    }\n\n    // Add stocks\n    const addStock = (symbol, data, percentChange, timeline) => {\n        // update context\n        setStocks([...stocks, { symbol, data, percentChange, timeline, id: nanoid() }]);\n    }\n\n    // Remove stock by id\n    const removeStock = (id, url, favoriteURL, listsURL, userId) => {\n        let newStocks = stocks.filter(stock => stock.id !== id);\n        setStocks(newStocks);\n        // find the favorite if it exists\n        let foundStock = findStock(id);\n        let favorite = findFavorite(foundStock.symbol);\n        if (favorite !== undefined) {\n            // remove favorite stock\n            removeFavorite(favorite.id, userId, favoriteURL);\n        }\n        // remove stock from the list\n        deleteStockFromLists(foundStock.symbol, userId, listsURL);\n        // delete the stock from the database\n        updateStockData(url, userId, newStocks);\n    }\n\n    // Clear stocks and favorites \n    const clearStocks = (stocksURL, favoritesURL, listsURL, userID) => {\n        // update context\n        setStocks([]);\n        setFavorites([]);\n        setLists([]);\n        // update database\n        let newStocks = [];\n        updateStockData(stocksURL, userID, newStocks);\n        updateFavoriteData(favoritesURL, userID, newStocks);\n        updateListData(listsURL, userID, newStocks);\n    }\n\n    // Find stock and return it\n    const findStock = id => {\n        return stocks.find(stock => stock.id === id);\n    }\n\n    // Find stock timeline and return it\n    const getStockTime = id => {\n        const stockToGet = stocks.find(stock => stock.id === id);\n        return stockToGet.timeline;\n    }\n\n    // Find stock with matching symbol\n    const findSymbol = symbol => {\n        const stockToGet = stocks.find(stock => stock.symbol.toUpperCase() === symbol.toUpperCase());\n        if (stockToGet !== undefined) {\n            return stockToGet;\n        }\n        return undefined;\n    }\n\n    // Edit stock\n    const editStock = (symbol, data, percentChange, timeline, id, stocksURL, listsURL, userId) => {\n        // edit stock if it exists\n        const newStocks = stocks.map(stock => (stock.id === id ? { symbol, data, percentChange, timeline, id } : stock));\n        setStocks(newStocks);\n        let newLists = [];\n        // find the lists if they exist\n        for (let list of lists) {\n            newLists.push(list);\n        }\n        for (let list of newLists) {\n            list.stocks = list.stocks.map(stock => (stock.symbol.toUpperCase() === symbol.toUpperCase() ? { symbol, data, percentChange, timeline, id } : stock));\n        }\n        setLists(newLists);\n        updateStockData(stocksURL, userId, newStocks);\n        updateListData(listsURL, userId, newLists);\n    }\n\n    // Set all stocks, method does not need to use database API\n    const setNewStocks = (newStocks) => {\n        setStocks(newStocks);\n    }\n\n    // Set all lists, method does not need to use database API\n    const setNewLists = (newLists) => {\n        setLists(newLists);\n    }\n\n    // Set all favorites, method does not need to use database API\n    const setNewFavorites = (newFavorites) => {\n        setFavorites(newFavorites);\n    }\n\n    // Edit favorite\n    const editFavorite = (symbol, data, percentChange, timeline, id, url, userId) => {\n        // edit favorite if it exists\n        const newFavorites = favorites.map(favorite => (favorite.id === id ? { symbol, data, percentChange, timeline, id } : favorite));\n        // update databse data\n        updateFavoriteData(url, userId, newFavorites);\n        setFavorites(newFavorites);\n    }\n\n    // update the stock data for the user\n    const updateStockData = async (url, userId, newStocks) => {\n        try {\n            // update the stock data \n            await axios.put(url, { userId: userId, stocks: newStocks });\n            // handle error\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // update the stock data for the user\n    const updateFavoriteData = async (url, userId, newFavorites) => {\n        try {\n            // update the stock data \n            await axios.put(url, { userId: userId, favorites: newFavorites });\n            // handle error\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // update the stock data for the user\n    const updateListData = async (url, userId, newLists) => {\n        try {\n            // update the stock data \n            await axios.put(url, { userId: userId, lists: newLists });\n            // handle error\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    // export all functions, data, and components wrapped in context\n    return (\n        <StockContext.Provider\n            value={{\n                stocks,\n                addStock,\n                removeStock,\n                clearStocks,\n                findStock,\n                favorites,\n                addFavorite,\n                removeFavorite,\n                clearFavorites,\n                findFavorite,\n                setNewFavorites,\n                findSymbol,\n                editStock,\n                editFavorite,\n                getStockTime,\n                setNewStocks,\n                removeList,\n                addList,\n                addStockToList,\n                clearLists,\n                findList,\n                setNewLists,\n                lists,\n                removeStockFromList,\n                taData,\n                addTAData,\n                findTAData,\n                removeTAData,\n                clearTAData,\n            }}\n        >\n            {props.children}\n        </StockContext.Provider>\n    );\n}\n\nexport default StockContextProvider;\n","import { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport {\n  discontinuousTimeScaleProviderBuilder,\n  Chart,\n  ChartCanvas,\n  CandlestickSeries,\n  MovingAverageTooltip,\n  OHLCTooltip,\n  lastVisibleItemBasedZoomAnchor,\n  XAxis,\n  YAxis,\n  CrossHairCursor,\n  EdgeIndicator,\n  MouseCoordinateX,\n  MouseCoordinateY,\n  ZoomButtons,\n} from \"react-financial-charts\";\n\nfunction TechnicalGraph({ stock, width, height }) {\n  // Technical Chart Initialization\n  let stockData = [];\n  let idx = 0;\n  let low = stock.data.values[0].close;\n  let high = stock.data.values[0].close;\n\n  // get the stock data in order and get the min and max values\n  for (let i = stock.data.values.length - 1; i >= 0; i--) {\n    low = Math.min(low, stock.data.values[i].close);\n    high = Math.max(high, stock.data.values[i].close);\n    stockData[idx] = stock.data.values[i];\n    idx++;\n  }\n  // create the dates in the correct format\n  const ScaleProvider = discontinuousTimeScaleProviderBuilder().inputDateAccessor(\n    (d) => new Date(d.datetime)\n  );\n  // css margins for the chart\n  const margin = { left: 5, right: 75, top: 24, bottom: 24 };\n  // create the scale and other important indicators for the chart \n  const { data, xScale, xAccessor, displayXAccessor } = ScaleProvider(\n    stockData\n  );\n  // round to 2 decimal places\n  const pricesDisplayFormat = format(\".2f\");\n  // create responsive height\n  const gridHeight = height - margin.top - margin.bottom;\n  const chartHeight = gridHeight;\n  // date format in year month day\n  const dateTimeFormat = \"%Y %B %d\";\n  const timeDisplayFormat = timeFormat(dateTimeFormat);\n  // create Y axis scale\n  const candleChartExtents = (data) => {\n    return [high, low];\n  };\n  // create label\n  const yEdgeIndicator = (data) => {\n    return data.close;\n  };\n  // color the candlestick red or green\n  const openCloseColor = (data) => {\n    return data.close > data.open ? \"#ef5350\" : \"#26a69a\";\n  };\n\n  return (\n    <ChartCanvas\n      height={height}\n      ratio={3}\n      width={width}\n      margin={margin}\n      data={data}\n      displayXAccessor={displayXAccessor}\n      seriesName=\"Data\"\n      xScale={xScale}\n      xAccessor={xAccessor}\n      zoomAnchor={lastVisibleItemBasedZoomAnchor}\n      id=\"technical-chart\"\n    >\n      <Chart id={3} height={chartHeight} yExtents={candleChartExtents}>\n        {/* <XAxis showGridLines showTickLabel={false} id=\"XAxis\" /> */}\n        <YAxis showGridLines tickFormat={pricesDisplayFormat} />\n        {/* This is the main chart of candlesticks */}\n        <CandlestickSeries />\n        <MouseCoordinateY\n          rectWidth={margin.right}\n          displayFormat={pricesDisplayFormat}\n        />\n        <EdgeIndicator\n          itemType=\"last\"\n          rectWidth={margin.right}\n          fill={openCloseColor}\n          lineStroke={openCloseColor}\n          displayFormat={pricesDisplayFormat}\n          yAccessor={yEdgeIndicator}\n        />\n        <MovingAverageTooltip\n          origin={[8, 24]}\n          options={[\n          ]}\n        />\n        <ZoomButtons />\n        <OHLCTooltip origin={[8, 16]} />\n        <XAxis />\n        {/* <YAxis ticks={4} tickFormat={pricesDisplayFormat} /> */}\n        <MouseCoordinateX displayFormat={timeDisplayFormat} />\n        <MouseCoordinateY\n          rectWidth={margin.right}\n          displayFormat={pricesDisplayFormat}\n        />\n      </Chart>\n      <CrossHairCursor />\n    </ChartCanvas>\n  );\n}\n\nexport default TechnicalGraph;\n","import './Stock.css'\nimport { useState, useContext } from \"react\";\nimport { StockContext } from \"../../context/StockContext\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n//Component to render the buttons and handle changes to data\nfunction StockButtons({ handleChart, loading, stock, setLoading, user, handleUpdate, handleStockModal,\n    handleTADisplay, clearTechnicalAnalysis }) {\n    // stock context api shared data across components\n    const { removeStock, addFavorite, findFavorite, addStockToList, lists, removeStockFromList } = useContext(StockContext);\n    // State to track which list to add the stock to\n    const [list, setList] = useState(\"\");\n    // URLS to make API calls from the Context API\n    // server url to update favorites\n    const UPDATE_FAVORITES = process.env.REACT_APP_UPDATE_FAVORITES;\n    // server url to update lists\n    const UPDATE_LISTS = process.env.REACT_APP_UPDATE_LISTS;\n    // server url to update stocks\n    const UPDATE_STOCKS = process.env.REACT_APP_UPDATE_STOCKS;\n\n    // When the user adds a favorite to their list update the list\n    const handleFavorite = () => {\n        setLoading(true);\n        const favorite = findFavorite(stock.symbol);\n        // Add the favorite to the list if it is defined\n        if (favorite === undefined) {\n            addFavorite(stock.symbol, stock.data, stock.percentChange, stock.timeline, UPDATE_FAVORITES, user.sub);\n        }\n        setLoading(false);\n    }\n\n    // set the list to add the stock to\n    const handleListChange = (name) => {\n        setList(name);\n    }\n\n    // function to add a stock to a list\n    const addToList = () => {\n        setLoading(true);\n        if (list !== \"\") {\n            addStockToList(list, stock.symbol, UPDATE_LISTS, user.sub);\n        }\n        setLoading(false);\n    }\n\n    // function to remove a stock from a list\n    const removeFromList = () => {\n        setLoading(true);\n        if (list !== \"\") {\n            removeStockFromList(list, stock.symbol, UPDATE_LISTS, user.sub);\n        }\n        setLoading(false);\n    }\n\n    // function to remove the stock altogether\n    const handleRemove = () => {\n        setLoading(true);\n        removeStock(stock.id, UPDATE_STOCKS, UPDATE_FAVORITES, UPDATE_LISTS, user.sub);\n        setLoading(false);\n    }\n\n\n\n    return (\n        <div className=\"stock-buttons\">\n            <button\n                className=\"favorite\"\n                class=\"button is-warning ml-2 mt-4 mb-2\"\n                onClick={() => handleFavorite()}>\n                Favorite\n            </button>\n            <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => handleChart(false)}>Technical Graph</button>\n            <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => handleChart(true)}>Simple Graph</button>\n            <div class=\"dropdown is-hoverable ml-2 mt-4\" >\n                <div class=\"dropdown-trigger\">\n                    <button\n                        class=\"button\"\n                        aria-haspopup=\"true\"\n                        aria-controls=\"dropdown-menu3\"\n                        disabled={loading}\n                        id=\"stock-dropdown\">\n                        <span id=\"dropdown-font\">Lists</span>\n                        <span class=\"icon is-small\">\n                            <FontAwesomeIcon icon={faAngleDown} />\n                        </span>\n                    </button>\n                </div>\n                <div class=\"dropdown-menu\" id=\"sort-dropdown\" role=\"menu\">\n                    <div class=\"dropdown-content\" id=\"sort-dropdown\">\n                        <div class=\"dropdown-item\">\n                            {lists.length ? (\n                                <div className=\"list\">\n                                    <ul>\n                                        {lists.map(list => {\n                                            return (\n                                                <li>\n                                                    <button\n                                                        class=\"button is-link mt-2\"\n                                                        id=\"dropdown-buton\"\n                                                        onClick={() => handleListChange(list.name)}\n                                                        disabled={loading}>\n                                                        {list.name}\n                                                    </button>\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            ) : (\n                                <article class=\"message is-link\">\n                                    <div class=\"message-body \">\n                                        <strong>No Lists</strong>\n                                    </div>\n                                </article>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => addToList()}>Add To List</button>\n            <button class=\"button is-primary ml-2 mt-4 mb-2\" onClick={() => removeFromList()}>Remove From List</button>\n            <button\n                className=\"delete-stock\"\n                class=\"button is-danger ml-3 pr-2 pl-5 mt-4 mb-2\"\n                onClick={() => handleRemove()}>\n                <FontAwesomeIcon id=\"trash\" icon={faTrashAlt} />\n            </button>\n            <br />\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('1min')}>30Min</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('5min')}>2.5H</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('15min')}>7.5H</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('30min')}>15H</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('1h')}>~1D</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('2h')}>~1W</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('1day')}>1M</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('1week')}>6M+</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate('1month')}>2.5Y</button>\n            <button class=\"button is-primary ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleUpdate(stock.timeline)}>Update</button>\n            <br></br>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTADisplay(\"SMA\")}>SMA</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTADisplay(\"EMA\")}>EMA</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTADisplay(\"RSI\")}>RSI</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTADisplay(\"MACD\")}>MACD</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTADisplay(\"BBANDS\")}>BBANDS</button>\n            <button class=\"button is-link ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleTADisplay(\"STOCH\")}>STOCH</button>\n            <button\n                className=\"delete-stock\"\n                class=\"button is-danger ml-3 pr-4 pl-4 mt-4 mb-2\"\n                onClick={() => clearTechnicalAnalysis()}>\n                Clear TA\n            </button>\n            <button class=\"button is-primary ml-3 pr-4 pl-4 mt-4 mb-2\" onClick={() => handleStockModal(stock.symbol)}>View</button>\n        </div >\n    );\n}\n\nexport default StockButtons;\n","import './Stock.css';\nimport { useState, useContext, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { StockContext } from \"../../context/StockContext\";\nimport useDimensions from \"react-cool-dimensions\";\nimport TechnicalGraph from '../TechnicalGraph/TechnicalGraph';\nimport StockButtons from './StockButtons';\nconst axios = require('axios').default;\n\n\n// Component to display the individual stock\nfunction Stock({ stock, user,\n    handleStockModal, handleStockChange, handleTimeChange }) {\n    // context api to modify data across components\n    const { addTAData, findTAData, removeTAData } = useContext(StockContext);\n\n    // State to track which chart to display (simple or technical)\n    const [simpleChart, setSimpleChart] = useState(true);\n    // loading state to have components wait for data to load\n    const [loading, setLoading] = useState(false);\n    // set the technical analysis to be displayed\n    const [ta, setTA] = useState('');\n    // when the technical analysis is changed of a stock this state is changed to reflect that change\n    const [technicalChange, setTechnicalChange] = useState(false);\n    // array for sma values\n    const [smaValues, setSMAValues] = useState([]);\n    // array for ema values\n    const [emaValues, setEMAValues] = useState([]);\n    // array for rsi values\n    const [rsiValues, setRSIValues] = useState([]);\n    // array for macd values\n    const [macdValues, setMACDValues] = useState([]);\n    // array for stochastic oscillator values\n    const [stochValues, setSTOCHValues] = useState([]);\n    // array for bollinger bands values\n    const [bbandsValues, setBBANDSValues] = useState([]);\n\n    // Observe the size of the Stock Card for responsive design\n    const { observe, width, height } = useDimensions({\n        // breakpoints to change the size of the graph\n        breakpoints: { XS: 0, SM: 320, MD: 480, LG: 640 },\n        // Will only update the state on breakpoint changed, default is false\n        updateOnBreakpointChange: true,\n        onResize: ({ observe, unobserve, width, height, entry }) => {\n            // Triggered whenever the size of the target is changed...\n            unobserve(); // To stop observing the current target element\n            observe(); // To re-start observing the current target element\n        },\n    });\n\n    // Moving Average Convergence Divergence Extended(MACDEXT) \n    // gives greater control over MACD input parameters. MACDEXT has an unstable period ~ 100.\n    const MACD = {\n        method: 'GET',\n        url: 'https://twelve-data1.p.rapidapi.com/macdext',\n        params: {\n            interval: stock.timeline,\n            symbol: stock.symbol,\n            slow_period: '26',\n            fast_ma_type: 'SMA',\n            outputsize: '30',\n            fast_period: '12',\n            slow_ma_type: 'SMA',\n            signal_period: '9',\n            format: 'json',\n            series_type: 'close',\n            signal_ma_type: 'SMA'\n        },\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n        }\n    };\n\n    // Simple Moving Average(SMA) is an arithmetic moving average calculated by adding \n    // the latest closing prices and then dividing them by the number of time periods.\n    const SMA = {\n        method: 'GET',\n        url: 'https://twelve-data1.p.rapidapi.com/sma',\n        params: {\n            symbol: stock.symbol,\n            interval: stock.timeline,\n            series_type: 'close',\n            format: 'json',\n            outputsize: '30',\n            time_period: '9'\n        },\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n        }\n    };\n\n    // Exponential Moving Average(EMA) places greater importance on recent data points than the normal Moving Average(MA).\n    const EMA = {\n        method: 'GET',\n        url: 'https://twelve-data1.p.rapidapi.com/ema',\n        params: {\n            interval: stock.timeline,\n            symbol: stock.symbol,\n            time_period: '9',\n            outputsize: '30',\n            format: 'json',\n            series_type: 'close'\n        },\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n        }\n    };\n\n    // Bollinger Bands®(BBANDS) are volatility bands located above and below a moving average. \n    // The volatility size parameter depends on standard deviation.\n    const BBANDS = {\n        method: 'GET',\n        url: 'https://twelve-data1.p.rapidapi.com/bbands',\n        params: {\n            interval: stock.timeline,\n            symbol: stock.symbol,\n            format: 'json',\n            outputsize: '30',\n            time_period: '20',\n            ma_type: 'SMA',\n            series_type: 'close',\n            sd: '2'\n        },\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n        }\n    };\n\n    // Relative Strength Index(RSI) is a momentum indicator, \n    // which calculates the magnitude of a price change to assess \n    // the overbought and oversold conditions in the price of an asset.\n    const RSI = {\n        method: 'GET',\n        url: 'https://twelve-data1.p.rapidapi.com/rsi',\n        params: {\n            symbol: stock.symbol,\n            interval: stock.timeline,\n            outputsize: '30',\n            series_type: 'close',\n            time_period: '14',\n            format: 'json'\n        },\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n        }\n    };\n\n    // Stochastic Oscillator(STOCH) is used to decide if the price trend is strong.\n    const STOCH = {\n        method: 'GET',\n        url: 'https://twelve-data1.p.rapidapi.com/stoch',\n        params: {\n            interval: stock.timeline,\n            symbol: stock.symbol,\n            outputsize: '30',\n            slow_d_period: '3',\n            format: 'json',\n            fast_k_period: '14',\n            slow_dma_type: 'SMA',\n            slow_kma_type: 'SMA',\n            slow_k_period: '1'\n        },\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n        }\n    };\n\n    useEffect(() => {\n        if (!smaValues.length) {\n            const sma = findTAData(stock.symbol, 'SMA');\n            if (sma !== undefined) setSMAValues(sma.data);\n        }\n\n        if (!emaValues.length) {\n            const ema = findTAData(stock.symbol, 'EMA');\n            if (ema !== undefined) setEMAValues(ema.data);\n        }\n\n        if (!bbandsValues.length) {\n            const bbands = findTAData(stock.symbol, 'BBANDS');\n            if (bbands !== undefined) setBBANDSValues(bbands.data);\n        }\n\n        if (!rsiValues.length) {\n            const rsi = findTAData(stock.symbol, 'RSI');\n            if (rsi !== undefined) setRSIValues(rsi.data);\n        }\n\n        if (!macdValues.length) {\n            const macd = findTAData(stock.symbol, 'MACD');\n            if (macd !== undefined) setMACDValues(macd.data);\n        }\n\n        if (!stochValues.length) {\n            const stoch = findTAData(stock.symbol, 'STOCH');\n            if (stoch !== undefined) setSTOCHValues(stoch.data);\n        }\n    }, []);\n\n    useEffect(() => {\n        // Fetches the technical data\n        const addTechnicalAnalysis = async () => {\n            try {\n                // fetch the data\n                let dataOptions = {};\n                if (ta !== '') {\n                    switch (ta) {\n                        case 'SMA':\n                            dataOptions = SMA;\n                            break;\n                        case 'EMA':\n                            dataOptions = EMA;\n                            break;\n                        case 'BBANDS':\n                            dataOptions = BBANDS;\n                            break;\n                        case 'RSI':\n                            dataOptions = RSI;\n                            break;\n                        case 'STOCH':\n                            dataOptions = STOCH;\n                            break;\n                        case 'MACD':\n                            dataOptions = MACD;\n                            break;\n                        default:\n                            break;\n                    }\n                    const response = await axios.request(dataOptions);\n                    // debug\n                    console.log(\"TA DATA: \", response.data);\n                    // handle error\n                    if (response.data.status === \"error\") {\n                        setTA('');\n                        console.log(response.data.message);\n                    } else {\n                        switch (ta) {\n                            case \"EMA\":\n                                //handleUpdate(stock.timeline);\n                                calculateEMA(response.data);\n                                break;\n                            case \"SMA\":\n                                //handleUpdate(stock.timeline);\n                                calculateSMA(response.data);\n                                break;\n                            case \"RSI\":\n                                //handleUpdate(stock.timeline);\n                                calculateRSI(response.data);\n                                break;\n                            case \"BBANDS\":\n                                //handleUpdate(stock.timeline);\n                                calculateBBANDS(response.data);\n                                break;\n                            case \"STOCH\":\n                                //handleUpdate(stock.timeline);\n                                calculateSTOCH(response.data);\n                                break;\n                            case \"MACD\":\n                                //handleUpdate(stock.timeline);\n                                calculateMACD(response.data);\n                                break;\n                            default:\n                                break;\n                        }\n                        // cleanup\n                        setTA('');\n                    }\n                }\n                // handle error\n            } catch (error) {\n                console.error(error);\n                setTA('');\n            }\n        }\n        setLoading(true);\n        addTechnicalAnalysis();\n        setLoading(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [technicalChange]);\n\n    // When user wants technical data set the variables\n    const handleTechnicalChange = (type) => {\n        setTA(type);\n        switch (type) {\n            case \"EMA\":\n                if (!emaValues.length) {\n                    setTechnicalChange(!technicalChange);\n                }\n                else {\n                    clearEMA();\n                }\n                break;\n            case \"SMA\":\n                if (!smaValues.length) {\n                    setTechnicalChange(!technicalChange);\n                }\n                else {\n                    clearSMA();\n                }\n                break;\n            case \"RSI\":\n                if (!rsiValues.length) {\n                    setTechnicalChange(!technicalChange);\n                }\n                else {\n                    clearRSI();\n                }\n                break;\n            case \"BBANDS\":\n                if (!bbandsValues.length) {\n                    setTechnicalChange(!technicalChange);\n                }\n                else {\n                    clearBBANDS();\n                }\n                break;\n            case \"STOCH\":\n                if (!stochValues.length) {\n                    setTechnicalChange(!technicalChange);\n                }\n                else {\n                    clearSTOCH();\n                }\n                break;\n            case \"MACD\":\n                if (!macdValues.length) {\n                    setTechnicalChange(!technicalChange);\n                }\n                else {\n                    clearMACD();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    // dates of the stock for the graph\n    const labels = [];\n    // prices of the stock for the graph\n    const prices = [];\n\n    // Calculate the Simple Moving Average over a period of time\n    const calculateSMA = (data) => {\n        let values = [];\n        // 30 dates and prices for the graph\n        let taIndex = data.values.length - 1;\n        // Loop through each date and price for the stock and add it to the arrays\n        for (let i = 0; i < data.values.length; i++) {\n            values[taIndex] = data.values[i].sma;\n            taIndex--;\n        }\n        setSMAValues(values);\n        addTAData(stock.symbol, stock.timeline, \"SMA\", values);\n    }\n\n    // Calculate the Exponential Moving Average over a period of time\n    const calculateEMA = (data) => {\n        let values = [];\n        // 30 dates and prices for the graph\n        let taIndex = data.values.length - 1;\n        // Loop through each date and price for the stock and add it to the arrays\n        for (let i = 0; i < data.values.length; i++) {\n            values[taIndex] = data.values[i].ema;\n            taIndex--;\n        }\n        setEMAValues(values);\n        addTAData(stock.symbol, stock.timeline, \"EMA\", values);\n    }\n\n    // Calculate the Bollinger Bands over a period of time\n    const calculateBBANDS = (data) => {\n        let values = [];\n        values.push([]);\n        values.push([]);\n        values.push([]);\n        // 30 dates and prices for the graph\n        let taIndex = data.values.length - 1;\n        // Loop through each date and price for the stock and add it to the arrays\n        for (let i = 0; i < data.values.length; i++) {\n            values[0][taIndex] = data.values[i].lower_band;\n            values[1][taIndex] = data.values[i].middle_band;\n            values[2][taIndex] = data.values[i].upper_band;\n            taIndex--;\n        }\n        setBBANDSValues(values);\n        addTAData(stock.symbol, stock.timeline, \"BBANDS\", values);\n    }\n\n    // Calculate the MACD over a period of time\n    const calculateMACD = (data) => {\n        let values = [];\n        values.push([]);\n        values.push([]);\n        values.push([]);\n        // 30 dates and prices for the graph\n        let taIndex = data.values.length - 1;\n        // Loop through each date and price for the stock and add it to the arrays\n        for (let i = 0; i < data.values.length; i++) {\n            values[0][taIndex] = data.values[i].macd;\n            values[1][taIndex] = data.values[i].macd_signal;\n            values[2][taIndex] = data.values[i].macd_hist;\n            taIndex--;\n        }\n        setMACDValues(values);\n        addTAData(stock.symbol, stock.timeline, \"MACD\", values);\n    }\n\n    // Calculate the Stochastic Oscillator over a period of time\n    const calculateSTOCH = (data) => {\n        let values = [];\n        values.push([]);\n        values.push([]);\n        // 30 dates and prices for the graph\n        let taIndex = data.values.length - 1;\n        // Loop through each date and price for the stock and add it to the arrays\n        for (let i = 0; i < data.values.length; i++) {\n            values[0][taIndex] = data.values[i].slow_k;\n            values[1][taIndex] = data.values[i].slow_d;\n            taIndex--;\n        }\n        setSTOCHValues(values);\n        addTAData(stock.symbol, stock.timeline, \"STOCH\", values);\n    }\n\n    // Calculate the Relative Strength Index over a period of time\n    const calculateRSI = (data) => {\n        let values = [];\n        // 30 dates and prices for the graph\n        let taIndex = data.values.length - 1;\n        // Loop through each date and price for the stock and add it to the arrays\n        for (let i = 0; i < data.values.length; i++) {\n            values[taIndex] = data.values[i].rsi;\n            taIndex--;\n        }\n        setRSIValues(values);\n        addTAData(stock.symbol, stock.timeline, \"RSI\", values);\n    }\n\n    // clear SMA from chart\n    const clearSMA = () => {\n        setSMAValues([]);\n    }\n\n    // clear EMA from chart\n    const clearEMA = () => {\n        setEMAValues([]);\n    }\n\n    // clear BBANDS from chart\n    const clearBBANDS = () => {\n        setBBANDSValues([]);\n    }\n\n    // clear MACD from chart\n    const clearMACD = () => {\n        setMACDValues([]);\n    }\n\n    // clear STOCH from chart\n    const clearSTOCH = () => {\n        setSTOCHValues([]);\n    }\n\n    // clear RSI from chart\n    const clearRSI = () => {\n        setRSIValues([]);\n    }\n\n    // clear technical analysis from chart\n    const clearTechnicalAnalysis = () => {\n        if (smaValues.length) {\n            removeTAData(stock.symbol, \"SMA\");\n            setSMAValues([]);\n        }\n        if (emaValues.length) {\n            removeTAData(stock.symbol, \"EMA\");\n            setEMAValues([]);\n        }\n        if (bbandsValues.length) {\n            removeTAData(stock.symbol, \"BBANDS\");\n            setBBANDSValues([]);\n        }\n        if (macdValues.length) {\n            removeTAData(stock.symbol, \"MACD\");\n            setMACDValues([]);\n        }\n        if (stochValues.length) {\n            removeTAData(stock.symbol, \"STOCH\");\n            setSTOCHValues([]);\n        }\n        if (rsiValues.length) {\n            removeTAData(stock.symbol, \"RSI\");\n            setRSIValues([]);\n        }\n    }\n\n    // function to handle the technical change\n    const handleTADisplay = (type) => {\n        setLoading(true);\n        handleTechnicalChange(type);\n        setLoading(false);\n    }\n\n    // When the user changes the timeframe of the stock, update the graph\n    const handleUpdate = (time) => {\n        setLoading(true);\n        clearTechnicalAnalysis();\n        handleTimeChange(time, stock);\n        handleStockChange();\n        setLoading(false);\n    }\n\n    // function to set the chart to simple or technical\n    const handleChart = (flag) => {\n        setSimpleChart(flag);\n    }\n\n    let militaryTime = false;\n    let mainTimeline = \"\";\n    switch (stock.timeline) {\n        case '1min': mainTimeline = \"30 minutes\";\n            militaryTime = true;\n            break;\n        case '5min': mainTimeline = \"2.5 hours\";\n            militaryTime = true;\n            break;\n        case '15min': mainTimeline = \"7.5 hours\";\n            militaryTime = true;\n            break;\n        case '30min': mainTimeline = \"15 hours\";\n            militaryTime = true;\n            break;\n        case '1h': mainTimeline = \"30 hours\";\n            break;\n        case '2h': mainTimeline = \"1 week\";\n            break;\n        case '1day': mainTimeline = \"1 month\";\n            break;\n        case '1week': mainTimeline = \"30 weeks\";\n            break;\n        case '1month': mainTimeline = \"2.5 years\";\n            break;\n        default: break;\n    }\n\n    // 30 dates and prices for the graph\n    let index = stock.data.values.length - 1;\n\n    // Loop through each date and price for the stock and add it to the arrays\n    for (let i = 0; i < stock.data.values.length; i++) {\n        labels[index] = stock.data.values[i].datetime;\n        prices[index] = stock.data.values[i].close;\n        index--;\n    }\n\n    if (militaryTime) {\n        let timeIndex = 0;\n        for (let label of labels) {\n            labels[timeIndex] = label.slice(11);\n            timeIndex++;\n        }\n    }\n\n    // options for the graph\n    const graphOptions = {\n        responsive: true,\n        title: {\n            display: true,\n            // position: \"top\",\n            text: stock.symbol,\n            fontSize: 18,\n            fontColor: \"#111\"\n        },\n        legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n                fontColor: \"#333\",\n                fontSize: 16\n            }\n        },\n    };\n\n    // options for the graph\n    const graphOptionsMACD = {\n        responsive: true,\n        title: {\n            display: true,\n            // position: \"top\",\n            text: \"Moving Average Convergence Divergence\",\n            fontSize: 18,\n            fontColor: \"#111\"\n        },\n        legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n                fontColor: \"#333\",\n                fontSize: 16\n            }\n        },\n    };\n\n    // options for the graph\n    const graphOptionsRSI = {\n        responsive: true,\n        title: {\n            display: true,\n            // position: \"top\",\n            text: \"Relative Strength Index\",\n            fontSize: 18,\n            fontColor: \"#111\"\n        },\n        legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n                fontColor: \"#333\",\n                fontSize: 16\n            }\n        },\n    };\n\n    // options for the graph\n    const graphOptionsSTOCH = {\n        responsive: true,\n        title: {\n            display: true,\n            // position: \"top\",\n            text: \"Stochastic Oscillator\",\n            fontSize: 18,\n            fontColor: \"#111\"\n        },\n        legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n                fontColor: \"#333\",\n                fontSize: 16\n            }\n        },\n    };\n\n    // data for the graph\n    const ChartData = (canvas) => {\n        // Create gradients to make the graph pretty\n        const ctx = canvas.getContext(\"2d\");\n        const gradientStroke = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientFill = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientStrokeSMA = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientStrokeEMA = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientStrokeBBANDS = ctx.createLinearGradient(700, 0, 300, 0);\n        // green graph\n        if (stock.percentChange >= 0) {\n            gradientStroke.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n            gradientStroke.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n            gradientFill.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n            gradientFill.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n            gradientStrokeSMA.addColorStop(1, \"rgba(157, 43, 213, 1)\");\n            gradientStrokeSMA.addColorStop(0, \"rgba(187, 71, 243, 1)\");\n\n            gradientStrokeEMA.addColorStop(1, \"rgba(233, 20, 20, 1)\");\n            gradientStrokeEMA.addColorStop(0, \"rgba(156, 17, 17, 1)\");\n\n            gradientStrokeBBANDS.addColorStop(1, \"rgba(46, 237, 27, 1)\");\n            gradientStrokeBBANDS.addColorStop(0, \"rgba(109, 202, 100, 1)\");\n        }\n        // red graph\n        else {\n            gradientStroke.addColorStop(1, \"rgba(141, 23, 174, 0.6)\");\n            gradientStroke.addColorStop(0, \"rgba(200, 39, 72, 0.6)\");\n\n            gradientFill.addColorStop(1, \"rgba(141, 23, 174, 0.6)\");\n            gradientFill.addColorStop(0, \"rgba(200, 39, 72, 0.6)\");\n\n            gradientStrokeSMA.addColorStop(1, \"rgba(34, 230, 58, 1)\");\n            gradientStrokeSMA.addColorStop(0, \"rgba(34, 167, 230, 1)\");\n\n            gradientStrokeBBANDS.addColorStop(1, \"rgba(46, 237, 27, 1)\");\n            gradientStrokeBBANDS.addColorStop(0, \"rgba(109, 202, 100, 1)\");\n        }\n\n        const result = {\n            labels: labels,\n            datasets: []\n        };\n\n        if (smaValues.length) {\n            const data = {\n                id: 2,\n                label: \"SMA\",\n                data: smaValues,\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStrokeSMA,\n                pointBorderColor: gradientStrokeSMA,\n                pointBackgroundColor: gradientStrokeSMA,\n                pointHoverBackgroundColor: gradientStrokeSMA,\n                pointHoverBorderColor: gradientStrokeSMA,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            result.datasets.push(data);\n        }\n        if (emaValues.length) {\n            console.log(\"emaValues \", emaValues);\n            const data = {\n                id: 3,\n                label: \"EMA\",\n                data: emaValues,\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStrokeEMA,\n                pointBorderColor: gradientStrokeEMA,\n                pointBackgroundColor: gradientStrokeEMA,\n                pointHoverBackgroundColor: gradientStrokeEMA,\n                pointHoverBorderColor: gradientStrokeEMA,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            result.datasets.push(data);\n        }\n\n        if (bbandsValues.length) {\n            const lower = {\n                id: 7,\n                label: \"lower_bands\",\n                data: bbandsValues[0],\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStrokeBBANDS,\n                pointBorderColor: gradientStrokeBBANDS,\n                pointBackgroundColor: gradientStrokeBBANDS,\n                pointHoverBackgroundColor: gradientStrokeBBANDS,\n                pointHoverBorderColor: gradientStrokeBBANDS,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            const middle = {\n                id: 8,\n                label: \"middle_bands\",\n                data: bbandsValues[1],\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStrokeBBANDS,\n                pointBorderColor: gradientStrokeBBANDS,\n                pointBackgroundColor: gradientStrokeBBANDS,\n                pointHoverBackgroundColor: gradientStrokeBBANDS,\n                pointHoverBorderColor: gradientStrokeBBANDS,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            const upper = {\n                id: 9,\n                label: \"upper_bands\",\n                data: bbandsValues[2],\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStrokeBBANDS,\n                pointBorderColor: gradientStrokeBBANDS,\n                pointBackgroundColor: gradientStrokeBBANDS,\n                pointHoverBackgroundColor: gradientStrokeBBANDS,\n                pointHoverBorderColor: gradientStrokeBBANDS,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            result.datasets.push(lower);\n            result.datasets.push(middle);\n            result.datasets.push(upper);\n        }\n\n        // push the graph\n        result.datasets.push({\n            id: 1,\n            label: stock.symbol,\n            data: prices,\n            fill: true,\n            backgroundColor: gradientFill,\n            borderColor: gradientStroke,\n            pointBorderColor: gradientStroke,\n            pointBackgroundColor: gradientStroke,\n            pointHoverBackgroundColor: gradientStroke,\n            pointHoverBorderColor: gradientStroke,\n            pointBorderWidth: 5,\n            pointHoverRadius: 5,\n            pointHoverBorderWidth: 1,\n            pointRadius: 3,\n            borderWidth: 4,\n        });\n\n        // return the data for the graph\n        return {\n            ...result,\n        };\n    };\n\n    // data for the graph\n    const macdData = (canvas) => {\n        const macd = {\n            labels: labels,\n            datasets: [],\n        }\n\n        // Create gradients to make the graph pretty\n        const ctx = canvas.getContext(\"2d\");\n        const gradientStroke = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientFill = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientSignal = ctx.createLinearGradient(700, 0, 300, 0);\n        gradientStroke.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n        gradientStroke.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n        gradientFill.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n        gradientFill.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n        gradientSignal.addColorStop(1, \"rgba(195, 30, 88, 1)\");\n        gradientSignal.addColorStop(0, \"rgba(158, 28, 152, 1)\");\n\n        if (macdValues.length) {\n            const macdLine = {\n                id: 1,\n                type: 'line',\n                label: \"MACD\",\n                data: macdValues[0],\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStroke,\n                pointBorderColor: gradientStroke,\n                pointBackgroundColor: gradientStroke,\n                pointHoverBackgroundColor: gradientStroke,\n                pointHoverBorderColor: gradientStroke,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            const macdSignal = {\n                id: 2,\n                type: 'line',\n                label: \"MACD Signal\",\n                data: macdValues[1],\n                fill: false,\n                backgroundColor: gradientSignal,\n                borderColor: gradientSignal,\n                pointBorderColor: gradientSignal,\n                pointBackgroundColor: gradientSignal,\n                pointHoverBackgroundColor: gradientSignal,\n                pointHoverBorderColor: gradientSignal,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            const macdHistogram = {\n                id: 3,\n                type: 'bar',\n                label: \"Histogram\",\n                data: macdValues[2],\n                fill: true,\n                backgroundColor: gradientFill,\n                borderColor: gradientStroke,\n                pointBorderColor: gradientStroke,\n                pointBackgroundColor: gradientStroke,\n                pointHoverBackgroundColor: gradientStroke,\n                pointHoverBorderColor: gradientStroke,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            macd.datasets.push(macdHistogram);\n            macd.datasets.push(macdLine);\n            macd.datasets.push(macdSignal);\n        }\n\n        // return the data for the graph\n        return {\n            ...macd,\n        };\n    };\n\n    // data for the graph\n    const rsiData = (canvas) => {\n        const rsi = {\n            labels: labels,\n            datasets: [],\n        }\n\n        // Create gradients to make the graph pretty\n        const ctx = canvas.getContext(\"2d\");\n        const gradientStroke = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientFill = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientSignal = ctx.createLinearGradient(700, 0, 300, 0);\n        gradientStroke.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n        gradientStroke.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n        gradientFill.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n        gradientFill.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n        if (rsiValues.length) {\n            const data = {\n                id: 4,\n                label: \"RSI\",\n                data: rsiValues,\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStroke,\n                pointBorderColor: gradientStroke,\n                pointBackgroundColor: gradientStroke,\n                pointHoverBackgroundColor: gradientStroke,\n                pointHoverBorderColor: gradientStroke,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            rsi.datasets.push(data);\n        }\n\n        // return the data for the graph\n        return {\n            ...rsi,\n        };\n    };\n\n    // data for the graph\n    const stochData = (canvas) => {\n        const stoch = {\n            labels: labels,\n            datasets: [],\n        }\n\n        // Create gradients to make the graph pretty\n        const ctx = canvas.getContext(\"2d\");\n        const gradientStroke = ctx.createLinearGradient(700, 0, 300, 0);\n        const gradientFill = ctx.createLinearGradient(700, 0, 300, 0);\n        const graidentSlowD = ctx.createLinearGradient(700, 0, 300, 0);\n        gradientStroke.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n        gradientStroke.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n        gradientFill.addColorStop(1, \"rgba(72, 95, 199, 0.6)\");\n        gradientFill.addColorStop(0, \"rgba(0, 209, 178, 0.6)\");\n\n        graidentSlowD.addColorStop(1, \"rgba(195, 30, 88, 1)\");\n        graidentSlowD.addColorStop(0, \"rgba(158, 28, 152, 1)\");\n\n        if (stochValues.length) {\n            const slow_k = {\n                id: 6,\n                label: \"slow_k\",\n                data: stochValues[0],\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: gradientStroke,\n                pointBorderColor: gradientStroke,\n                pointBackgroundColor: gradientStroke,\n                pointHoverBackgroundColor: gradientStroke,\n                pointHoverBorderColor: gradientStroke,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            const slow_d = {\n                id: 6,\n                label: \"slow_d\",\n                data: stochValues[1],\n                fill: false,\n                backgroundColor: gradientFill,\n                borderColor: graidentSlowD,\n                pointBorderColor: graidentSlowD,\n                pointBackgroundColor: graidentSlowD,\n                pointHoverBackgroundColor: graidentSlowD,\n                pointHoverBorderColor: graidentSlowD,\n                pointBorderWidth: 5,\n                pointHoverRadius: 5,\n                pointHoverBorderWidth: 1,\n                pointRadius: 3,\n                borderWidth: 4,\n            };\n            stoch.datasets.push(slow_k);\n            stoch.datasets.push(slow_d);\n        }\n\n        // return the data for the graph\n        return {\n            ...stoch,\n        };\n\n    };\n\n    // display the stock component\n    // Return the graph\n    if (simpleChart) {\n        return (\n            <div ref={observe} className=\"StockCard mt-6 pl-4 pr-4 pb-4 pt-4\" id=\"StockChart\">\n                <h3 id=\"stock-heading\">{stock.symbol}: {mainTimeline}</h3>\n                <Line data={ChartData} options={graphOptions} />\n                {\n                    macdValues.length ? (\n                        <Line data={macdData} options={graphOptionsMACD} />\n                    ) : (\n                        null\n                    )\n                }\n                {\n                    rsiValues.length ? (\n                        <Line data={rsiData} options={graphOptionsRSI} />\n                    ) : (\n                        null\n                    )\n                }\n                {\n                    stochValues.length ? (\n                        <Line data={stochData} options={graphOptionsSTOCH} />\n                    ) : (\n                        null\n                    )\n                }\n                <StockButtons\n                    handleChart={handleChart}\n                    handleUpdate={handleUpdate}\n                    loading={loading}\n                    setLoading={setLoading}\n                    stock={stock}\n                    user={user}\n                    handleStockModal={handleStockModal}\n                    handleTADisplay={handleTADisplay}\n                    clearTechnicalAnalysis={clearTechnicalAnalysis}\n                />\n            </div >\n        );\n    } else {\n        return (\n            <div ref={observe} className=\"StockCard mt-6 pl-4 pr-4 pb-4 pt-4\" id=\"StockChart\">\n                <h3 id=\"stock-heading\">{stock.symbol}: {mainTimeline}</h3>\n                <TechnicalGraph stock={stock} width={width} height={height} />\n                {\n                    macdValues.length ? (\n                        <Line data={macdData} options={graphOptionsMACD} />\n                    ) : (\n                        null\n                    )\n                }\n                {\n                    rsiValues.length ? (\n                        <Line data={rsiData} options={graphOptionsRSI} />\n                    ) : (\n                        null\n                    )\n                }\n                {\n                    stochValues.length ? (\n                        <Line data={stochData} options={graphOptionsSTOCH} />\n                    ) : (\n                        null\n                    )\n                }\n                <StockButtons\n                    handleChart={handleChart}\n                    handleUpdate={handleUpdate}\n                    loading={loading}\n                    setLoading={setLoading}\n                    stock={stock}\n                    user={user}\n                    handleStockModal={handleStockModal}\n                    handleTADisplay={handleTADisplay}\n                    clearTechnicalAnalysis={clearTechnicalAnalysis}\n                />\n            </div >\n        );\n    }\n}\n\nexport default Stock;\n","import React, { useContext } from \"react\";\nimport { StockContext } from \"../../context/StockContext\";\nimport Stock from \"./../Stock/Stock\";\n\n// Component to display a list of stocks\nconst StockList = ({ filterSymbols, user,\n    handleStockModal, handleStockChange, handleTimeChange }) => {\n    const { stocks } = useContext(StockContext);\n\n    // If there are no stocks to filter display all stocks\n    if (filterSymbols.length === 0) {\n        return (\n            <div>\n                {stocks.length ? (\n                    <div className=\"list\">\n                        {stocks.map(stock => {\n                            return <Stock\n                                stock={stock}\n                                key={stock.id}\n                                user={user}\n                                handleStockModal={handleStockModal}\n                                handleStockChange={handleStockChange}\n                                handleTimeChange={handleTimeChange}\n                            />;\n                        })}\n                    </div>\n                ) : (\n                    <article class=\"message is-link mt-6 ml-6\">\n                        <div class=\"message-body \">\n                            <strong>No Stocks</strong>\n                        </div>\n                    </article>\n                )}\n            </div>\n        );\n        // Display only filtered stocks\n    } else {\n        let filterStocks = [];\n        // Get each filtered stock and add it to the array\n        for (const symbol of filterSymbols) {\n            for (let stock of stocks) {\n                if (stock.symbol === symbol) {\n                    filterStocks.push(stock);\n                }\n            }\n        }\n        return (\n            <div>\n                {filterStocks.length ? (\n                    <div className=\"list\">\n                        {filterStocks.map(stock => {\n                            return <Stock\n                                stock={stock}\n                                key={stock.id}\n                                user={user}\n                                handleStockModal={handleStockModal}\n                                handleStockChange={handleStockChange}\n                                handleTimeChange={handleTimeChange}\n                            />;\n                        })}\n                    </div>\n                ) : (\n                    <article class=\"message is-link mt-6 ml-6\">\n                        <div class=\"message-body \">\n                            <strong>No Stocks</strong>\n                        </div>\n                    </article>\n                )}\n            </div>\n        );\n    }\n\n};\n\nexport default StockList;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { StockContext } from \"../../context/StockContext\";\nimport StockList from '../StockList/StockList';\nimport './StockHub.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport Stock from '../Stock/Stock';\nconst axios = require('axios').default;\n\n// Component to display all stocks and the forms to add/edit stocks\nconst StockHub = ({ user }) => {\n    // context api to modify data across components\n    const { stocks, addStock, clearStocks, findSymbol, setNewStocks,\n        editFavorite, findFavorite, editStock } = useContext(StockContext);\n    // symbol of the stock to be searched\n    const [symbol, setSymbol] = useState('');\n    // array of symbols to filter from the stock list\n    const [filterSymbols, setFilterSymbols] = useState([]);\n    // contains the current symbols from the filter bar\n    const [filterSymbol, setFilterSymbol] = useState('');\n    // when the page is loading some actions are disabled\n    const [loading, setLoading] = useState(false);\n    // timeframe of the stock to graph\n    const [timeline, setTimeline] = useState('1day');\n    // when sorting the stocks decide which direction to sort\n    const [descending, setDescending] = useState(true);\n    // modal for confirming events\n    const [modal, setModal] = useState(false);\n    // modal for viewing stock\n    const [stockModal, setStockModal] = useState(false);\n    // stock to display for stock modal\n    const [stockView, setStock] = useState(null);\n    // flag for displaying the instructions\n    const [showHero, setShowHero] = useState(true);\n    // flag for updating the stocks on the database\n    const [updateStocks, setUpdateStocks] = useState(false);\n    // when the timeline is changed of a stock this state is changed to reflect that change\n    const [stockChange, setStockChange] = useState(false);\n    // the current stock to be modified\n    const [currentStock, setCurrentStock] = useState({});\n    // the current favorite to be modified\n    const [currentFavorite, setCurrentFavorite] = useState({});\n\n    // server url to update favorites\n    const UPDATE_FAVORITES = process.env.REACT_APP_UPDATE_FAVORITES;\n    // server url to update lists\n    const UPDATE_LISTS = process.env.REACT_APP_UPDATE_LISTS;\n    // server url to update stocks\n    const UPDATE_STOCKS = process.env.REACT_APP_UPDATE_STOCKS;\n    //server url\n    const SERVER = process.env.REACT_APP_GET_USER_STOCKS + user;\n    // server url to create stocks\n    const CREATE_STOCKS = process.env.REACT_APP_CREATE_STOCKS;\n\n    // Fetch the stock data from the server and render the stocks\n    // If there is no stock data for this user, create new data\n    useEffect(() => {\n        const fetchDataFromServer = async () => {\n            setLoading(true);\n            try {\n                // fetch the stock data \n                const response = await axios.get(SERVER);\n                // handle error\n                if (response.data.stocks === null) {\n                    setLoading(false);\n                    console.log(\"Creating new stock data for user\");\n                    createNewStockData();\n                    setLoading(false);\n                } else {\n                    // delete irrelevent data\n                    delete response.data.stocks._id;\n                    // set the stocks from the database\n                    let newStocks = [];\n                    //push stocks to the list from the Context API\n                    for (const stock of response.data.stocks.stocks) {\n                        newStocks.push(stock);\n                    }\n                    if (newStocks.length > 0) {\n                        setNewStocks(newStocks);\n                    }\n                    //console.log(\"newStocks\", newStocks);\n                    // cleanup function\n                    setLoading(false);\n                }\n                // handle error\n            } catch (error) {\n                console.error(error);\n                setLoading(false);\n            }\n        }\n\n        // create new stock data for the user\n        const createNewStockData = async () => {\n            setLoading(true);\n            try {\n                // create the stock data \n                await axios.put(CREATE_STOCKS, { userId: user, stocks: stocks });\n                // handle error\n            } catch (error) {\n                console.error(error);\n                setLoading(false);\n            }\n        }\n        fetchDataFromServer();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Fetches the stock data with the symbol and displays is in a graph\n    const addStockData = async () => {\n        setLoading(true);\n        try {\n            // fetch the data\n            const response = await axios.request(options);\n            // handle error\n            if (response.data.status === \"error\") {\n                setSymbol('');\n                console.log(response.data.message);\n                setLoading(false);\n            } else {\n                // get the stock and calculate the percent change over the time period\n                const foundStock = findSymbol(symbol);\n                if (foundStock === undefined) {\n                    const percentChange = calculatePercentChange(response.data);\n                    // add the stock to the list and context API\n                    addStock(symbol, response.data, percentChange, timeline);\n                }\n                // cleanup\n                setUpdateStocks(!updateStocks);\n                setSymbol('');\n                setLoading(false);\n            }\n            // handle error\n        } catch (error) {\n            console.error(error);\n            setSymbol('');\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        if (user !== undefined) {\n            // update the stock data for the user\n            const updateStockData = async () => {\n                setLoading(true);\n                try {\n                    // update the stock data \n                    await axios.put(UPDATE_STOCKS, { userId: user, stocks: stocks });\n                    setLoading(false);\n                    // handle error\n                } catch (error) {\n                    console.error(error);\n                    setLoading(false);\n                }\n            }\n            updateStockData();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [updateStocks]);\n\n    // ref to not call function on first render\n    const firstRender = useRef(true);\n\n    useEffect(() => {\n        // When the user changes the timeline for a stock the new data is fetched and displayed to the graph\n        const changeStockData = async () => {\n            setLoading(true);\n            try {\n                // fetch the data \n                const response = await axios.request(options);\n                // handle error\n                if (response.data.status === \"error\") {\n                    setSymbol('');\n                    setLoading(false);\n                    console.log(response.data.message);\n                } else {\n                    // get the stock and calculate the percent change over the time period\n                    const percentChange = calculatePercentChange(response.data);\n                    // edit the stock being modified\n                    editStock(currentStock.symbol, response.data, percentChange,\n                        timeline, currentStock.id, UPDATE_STOCKS, UPDATE_LISTS, user);\n                    if (currentFavorite !== undefined) {\n                        // edit the favorite in the sidebar to match the stock being modified\n                        editFavorite(currentFavorite.symbol, response.data, percentChange,\n                            timeline, currentFavorite.id, UPDATE_FAVORITES, user);\n                    }\n                    // cleanup function\n                    setUpdateStocks(!updateStocks);\n                    setSymbol('');\n                    setLoading(false);\n                }\n                // handle error\n            } catch (error) {\n                console.error(error);\n                setSymbol('');\n                setLoading(false);\n            }\n        }\n        if (firstRender.current) {\n            firstRender.current = false;\n            return;\n        } else {\n            changeStockData();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [stockChange]);\n\n    // Axios options for getting stock data from 12 Data API\n    const options = {\n        method: 'GET',\n        url: process.env.REACT_APP_RAPIDAPI_TIME_URL,\n        params: { interval: `${timeline}`, symbol: `${symbol}`, format: 'json', outputsize: '30' },\n        headers: {\n            'x-rapidapi-host': process.env.REACT_APP_RAPIDAPI_HOST,\n            'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY\n        }\n    };\n\n    // Calculates the percent change of the stock over the time period and return  \n    // it rounded to the nearest hundreth place\n    const calculatePercentChange = (response) => {\n        let priceSize = response.values.length;\n        let endPrice = response.values[0].close;\n        let startPrice = response.values[priceSize - 1].close;\n        let difference = endPrice - startPrice;\n        let percentChange = (difference / startPrice) * 100;\n        let percentChangeRounded = percentChange.toFixed(2);\n        percentChange = parseFloat(percentChangeRounded);\n        return percentChange;\n    }\n\n    // When user changes timeline change state to reflect change\n    const handleStockChange = (time) => {\n        setStockChange(!stockChange);\n    }\n\n    // Edit the stock being modified for the new timeline of the graph\n    const handleTimeChange = (time, stock) => {\n        setSymbol(stock.symbol);\n        setCurrentStock(stock);\n        setTimeline(time);\n        // get favorite corresponding to the stock being modified if available\n        const favorite = findFavorite(stock.symbol);\n        setCurrentFavorite(favorite);\n    }\n\n    // Add the stock data for the current symbol in input bar\n    const handleSubmit = e => {\n        e.preventDefault();\n        addStockData();\n    }\n\n    // Change symbol state to match with the input \n    const handleChange = (e) => {\n        e.preventDefault();\n        setSymbol(e.target.value);\n    }\n\n    // Set the symbol of the stock/s to filter\n    const handleFilterChange = (e) => {\n        e.preventDefault();\n        setFilterSymbol(e.target.value);\n    }\n\n    // Set the new stocks after filtering them\n    const handleFilter = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        let splitSymbols = []\n        // filter the symbols if there is a comma\n        if (filterSymbol.includes(',')) {\n            const noWhiteSpace = filterSymbol.replace(/\\s+/g, '')\n            splitSymbols = noWhiteSpace.split(',');\n            // filter the symbols if there is only spaces\n        } else {\n            splitSymbols = filterSymbol.split(' ');\n        }\n        // Set the filter list with the newest filtered stocks\n        setFilterSymbols([...filterSymbols, ...splitSymbols]);\n        setLoading(false);\n        setFilterSymbol('');\n    }\n\n    // Sort the list of stocks in ascending/descending order\n    const handleSort = () => {\n        let sortedStocks = [];\n\n        let index = 0;\n        for (let stock of stocks) {\n            sortedStocks[index] = stock;\n            index++;\n        }\n        // sort them in descending order\n        if (descending) {\n            sortedStocks.sort((a, b) => b.percentChange - a.percentChange);\n            // sort them in ascending order\n        } else {\n            sortedStocks.sort((a, b) => a.percentChange - b.percentChange);\n        }\n        // set the new list of stocks\n        setNewStocks(sortedStocks);\n    }\n\n    // clear the list of stocks on the screen\n    const clear = e => {\n        e.preventDefault();\n        clearStocks(UPDATE_STOCKS, UPDATE_LISTS, UPDATE_FAVORITES, user);\n        setModal(false);\n        setUpdateStocks(!updateStocks);\n    }\n\n    // Clear all current filters that are applied\n    const clearFilters = e => {\n        setFilterSymbols([]);\n    }\n\n    // Set the sorting order to ascending\n    const setDescendingFalse = () => {\n        setDescending(false);\n    }\n\n    // Set the sorting order to descending\n    const setDescendingTrue = () => {\n        setDescending(true);\n    }\n\n    const handleStockModal = (stockSymbol) => {\n        const stock = findSymbol(stockSymbol);\n        if (stock !== undefined) {\n            setStock(stock);\n            setStockModal(true);\n        }\n    }\n\n    const clearStockModal = () => {\n        setStockModal(false);\n    }\n\n    // function to confirm the deletion of all stocks\n    const confirmClear = () => {\n        setModal(true);\n    }\n\n    // function to set modal to false and close confirmation dialogue \n    const clearModal = () => {\n        setModal(false);\n    }\n\n    // function to hide the instructions\n    const toggleHero = () => {\n        setShowHero(!showHero);\n    }\n\n    if (!modal && !stockModal) {\n        return (\n            <div class=\"StockForm\">\n                {showHero ? (\n                    <div>\n                        <a onClick={() => toggleHero()} href=\"#instructions\">\n                            <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n                        </a>\n                        {/* Title and information about the dashboard */}\n                        <section class=\"hero is-link\" id=\"hero-dash\">\n                            <div class=\"hero-body\" >\n                                <p class=\"title\" id=\"hero-color\">\n                                    Welcome to MyStockWatch\n                                </p>\n                                <p class=\"subtitle\" id=\"hero-color\">\n                                    Enter the symbol and click the <strong id=\"hero-color\">Add Stock button or Enter</strong>, to add the stock.\n                                </p>\n                                <h2 class=\"subtitle\" id=\"hero-color\">\n                                    Enter a symbol or multiple symbols separated by a comma or space to filter the stocks. Then hit the\n                                    <strong id=\"hero-color\"> Filter button or Enter</strong>, to filter the stocks.\n                                </h2>\n                                <h2 class=\"subtitle\" id=\"hero-color\">\n                                    Use the dropdown menu and select an option then press the\n                                    <strong id=\"hero-color\"> Sort button</strong>, to sort the stocks by change in price.\n                                </h2>\n                            </div>\n                        </section>\n\n                    </div>) :\n                    (\n                        <a onClick={() => toggleHero()} href=\"#instructions\">\n                            <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                        </a>\n                    )\n                }\n                <div class=\"block\" />\n                {/* Forms and buttons to interact with the dashboard */}\n                <div className=\"button-and-forms ml-6\">\n                    <div class=\"columns\">\n                        <div class=\"column is-4\">\n                            <button class=\"button is-link ml-2\" onClick={handleSubmit} disabled={loading}>Add Stock</button>\n                            <button class=\"button is-danger ml-5\" onClick={confirmClear} disabled={loading}>\n                                Clear All Stocks\n                            </button>\n\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"stock-form\" id=\"stock-search\">\n                                    <input\n                                        id=\"StockInput\"\n                                        type=\"text\"\n                                        placeholder=\"Enter Symbol...\"\n                                        value={symbol}\n                                        onChange={handleChange}\n                                        required\n                                        class=\"input is-rounded is-link mt-4\"\n                                        disabled={loading}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"column is-3\">\n                            <button class=\"button is-link ml-2\" onClick={handleFilter} disabled={loading}>Filter</button>\n                            <button class=\"button is-danger ml-5\" onClick={clearFilters} disabled={loading}>\n                                Clear All Filters\n                            </button>\n                            <form onSubmit={handleFilter}>\n                                <input\n                                    id=\"FilterInput\"\n                                    type=\"text\"\n                                    placeholder=\"Enter Symbol to Filter\"\n                                    value={filterSymbol}\n                                    onChange={handleFilterChange}\n                                    required\n                                    class=\"input is-rounded is-link mt-4\"\n                                    disabled={loading}\n                                />\n                            </form>\n                        </div>\n                        <div class=\"column is-4\">\n                            <button class=\"button is-link ml-4 mr-4\" onClick={handleSort} disabled={loading}>Sort</button>\n                            <div class=\"dropdown is-hoverable ml-4\">\n                                <div class=\"dropdown-trigger\">\n                                    <button class=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu3\" disabled={loading} id=\"form-button\">\n                                        <span>Ascending/Descending</span>\n                                        <span class=\"icon is-small\">\n                                            <FontAwesomeIcon icon={faAngleDown} />\n                                        </span>\n                                    </button>\n                                </div>\n                                <div class=\"dropdown-menu\" id=\"sort-dropdown\" role=\"menu\">\n                                    <div class=\"dropdown-content\" id=\"sort-dropdown\">\n                                        <div class=\"dropdown-item\">\n                                            <button\n                                                class=\"button is-link\"\n                                                id=\"dropdown-buton\"\n                                                onClick={setDescendingFalse}\n                                                disabled={loading}>\n                                                Ascending\n                                            </button>\n                                            <button\n                                                class=\"button is-link mt-4\"\n                                                id=\"dropdown-buton\"\n                                                onClick={setDescendingTrue}\n                                                disabled={loading}>\n                                                Descending\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* render the list of stocks and pass down important functions to change aspects of the stocks */}\n                <StockList\n                    filterSymbols={filterSymbols}\n                    user={user}\n                    handleStockModal={handleStockModal}\n                    handleStockChange={handleStockChange}\n                    handleTimeChange={handleTimeChange}\n                />\n            </div >\n        );\n    } else if (stockModal) {\n        return (\n            <div class=\"modal is-active\">\n                <div class=\"modal-background\"> </div>\n                <div class=\"modal-content\" id=\"stock-modal\">\n                    {/* <!-- Any other Bulma elements you want --> */}\n                    {/* <div class=\"section\" id=\"stock-modal-section\"> */}\n                    <Stock\n                        stock={stockView}\n                        key={stockView.id}\n                        user={user}\n                        handleStockModal={handleStockModal}\n                        handleStockChange={handleStockChange}\n                        handleTimeChange={handleTimeChange}\n                        id=\"viewing-stock\"\n                    />\n                    <button class=\"button is-primary mt-4 ml-6\" onClick={clearStockModal}>Exit</button>\n                    {/* </div> */}\n                </div>\n                <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n            </div>\n        );\n    } else {\n        return (\n            <div class=\"modal is-active\">\n                <div class=\"modal-background\"> </div>\n                <div class=\"modal-content\">\n                    {/* <!-- Any other Bulma elements you want --> */}\n                    <div class=\"section\" id=\"modal-section\">\n                        <h3 id=\"modal-heading\">Are you sure you want to clear all stocks?</h3>\n                        <button class=\"button is-danger mt-4\" onClick={clear}>Clear All Stocks</button>\n                        <button class=\"button is-primary mt-4 ml-4\" onClick={clearModal}>Cancel</button>\n                    </div>\n                </div>\n                <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n            </div>\n        );\n    }\n}\n\nexport default StockHub\n","import './Favorite.css'\nimport React, { useContext } from 'react'\nimport { StockContext } from \"../../context/StockContext\";\n\n// Component to display the individual favorite stock in the menu\nfunction Favorite({ favorite, user }) {\n  const { removeFavorite } = useContext(StockContext);\n  let price = favorite.data.values[0].close;\n  price = parseFloat(price).toFixed(2);\n\n  // server url to update favorites\n  const UPDATE_FAVORITES = `http://localhost:3000/favorites/update/`;\n\n  // Display stocks that have gained in value\n  if (favorite.percentChange > 0) {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"green\">\n            <article class=\"message is-primary\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-5 mt-2\"\n                  onClick={() => removeFavorite(favorite.id, user, UPDATE_FAVORITES)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n    // Display stocks that have lost value\n  } else {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"red\">\n            <article class=\"message is-danger\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-5 mt-2\"\n                  onClick={() => removeFavorite(favorite.id, user, UPDATE_FAVORITES)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n  }\n\n}\n\nexport default Favorite;\n","import React, { useContext } from 'react'\nimport { StockContext } from \"../../context/StockContext\";\n\n// Component to display the individual favorite stock in the menu\nfunction ListStock({ favorite, name, url, userId }) {\n  const { removeStockFromList } = useContext(StockContext);\n  let price = favorite.data.values[0].close;\n  price = parseFloat(price).toFixed(2);\n\n  // Remove stock from list\n  const removeStock = (name, symbol) => {\n    removeStockFromList(name, symbol, url, userId);\n  }\n\n  // Display stocks that have gained in value\n  if (favorite.percentChange > 0) {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"green\">\n            <article class=\"message is-primary\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-6 mt-2\"\n                  onClick={() => removeStock(name, favorite.symbol)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n    // Display stocks that have lost value\n  } else {\n    return (\n      <section>\n        <div className=\"FavoriteStock mt-4\">\n          <li className=\"red\">\n            <article class=\"message is-danger\">\n              <div class=\"message-body\">\n                {favorite.symbol}: {favorite.percentChange}%\n                <button\n                  class=\"button is-small is-danger ml-6 mt-2\"\n                  onClick={() => removeStock(name, favorite.symbol)}>\n                  Delete\n                </button>\n                <br />\n                Price: {price}\n              </div>\n            </article>\n          </li>\n        </div>\n      </section>\n    );\n  }\n\n}\n\nexport default ListStock;\n","import ListStock from \"./ListStock\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nfunction RenderLists({ list, hideList, removeList, url, userId }) {\n  return (\n    <>\n      <p class=\"menu-label mt-5\" >\n        <strong id=\"menu-label\">{list.name}</strong>\n        <a href=\"#hidelist\" onClick={() => hideList(list.name)}>\n          <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n        </a>\n        <button class=\"button is-danger is-small ml-6\" onClick={() => removeList(list.name, url, userId)}>Delete</button>\n        <p id=\"favorites\">\n          {\n            list.stocks.length ? (\n              <div className=\"list\">\n                <ul class=\"menu-list\">\n                  {list.stocks.map(stock => {\n                    return <ListStock favorite={stock} name={list.name} key={stock.id} url={url} userId={userId} />;\n                  })}\n                </ul>\n              </div>\n            ) : (\n              <div className=\"no-favorites\">No Stocks</div>\n            )\n          }\n        </p>\n      </p>\n    </>\n  );\n}\n\nexport default RenderLists;\n","import './Menu.css';\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { StockContext } from \"../../context/StockContext\";\nimport Favorite from '../Favorite/Favorite';\nimport RenderLists from './RenderLists';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleUp, faAngleDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nconst axios = require('axios').default;\n\n// Component to display all favorite stocks\nfunction Menu({ user }) {\n  // use context api\n  const { favorites, clearFavorites, addList, removeList, lists, clearLists, setNewLists, setNewFavorites } = useContext(StockContext);\n  // list name to add\n  const [listName, setListName] = useState(\"\");\n  // list of lists to conditionally render in dropdown\n  const [listsToRender, setListsToRender] = useState({});\n  // state for first 3 lists to render\n  const [renderGainers, setRenderGainers] = useState(false);\n  const [renderLosers, setRenderLosers] = useState(false);\n  const [renderFavorites, setRenderFavorites] = useState(false);\n  // state to trigger render\n  const [render, setRender] = useState(false);\n  // modal for confirming events\n  const [FavoritesModal, setFavoritesModal] = useState(false);\n  // modal for confirming events\n  const [ListsModal, setListModal] = useState(false);\n  // state to hide the entire menu\n  const [hideMenu, setHideMenu] = useState(false);\n  // server url to create lists\n  const CREATE_LISTS = process.env.REACT_APP_CREATE_LISTS;\n  // server url to create lists\n  const CREATE_FAVORITES = process.env.REACT_APP_CREATE_FAVORITES;\n  // server url to update lists\n  const UPDATE_LISTS = process.env.REACT_APP_UPDATE_LISTS;\n  // server url to get lists\n  const GET_LISTS = process.env.REACT_APP_GET_LISTS + user;\n  // server url to get favorites\n  const GET_FAVORITES = process.env.REACT_APP_GET_FAVORITES + user;\n  // server url to update favorites\n  const UPDATE_FAVORITES = process.env.REACT_APP_UPDATE_FAVORITES;\n\n  useEffect(() => {\n    let renderLists = listsToRender;\n    for (const list of lists) {\n      if (renderLists[list.name] !== false) {\n        renderLists[list.name] = true;\n      }\n    }\n    setListsToRender(renderLists);\n\n    const checkForLists = async () => {\n      try {\n        // fetch the lists data \n        const response = await axios.get(GET_LISTS);\n        // handle error\n        if (response.data.lists === null || response.data.lists.length === 0) {\n          console.log(\"No lists have been created\");\n          // create the new lists\n          const listResponse = await axios.put(CREATE_LISTS,\n            { userId: user, lists: lists });\n          // check for null lists\n          if (listResponse.data.lists === null) {\n            console.log(\"error creating new lists\");\n          } else {\n            console.log(\"created new lists\");\n          }\n        } else {\n          // lists already exists so update the lists\n          const newLists = [];\n          // check if lists exist\n          if (response.data.lists.lists !== undefined) {\n            // loop through every list in the response\n            for (const list of response.data.lists.lists) {\n              newLists.push(list);\n            }\n          }\n          setNewLists(newLists);\n          // update the lists data \n          await axios.put(UPDATE_LISTS, { userId: user, lists: newLists });\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    checkForLists();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const checkForFavorites = async () => {\n      try {\n        // fetch the favorite data \n        const response = await axios.get(GET_FAVORITES);\n        // handle error\n        if (response.data.favorites === null) {\n          // create the new favorites\n          const FavoriteResponse = await axios.put(CREATE_FAVORITES,\n            { userId: user, favorites: favorites });\n          // check for null favorites\n          if (FavoriteResponse.data.favorites === null) {\n            console.log(\"error creating new favorites\");\n          } else {\n            console.log(\"created new favorites\");\n          }\n        } else {\n          // create the new favorites\n          const newFavorites = [];\n          // check for favorites from database\n          for (const favorite of response.data.favorites.favorites) {\n            newFavorites.push(favorite);\n          }\n          if (newFavorites !== undefined) {\n            setNewFavorites(newFavorites);\n          }\n          // update the favorite data \n          await axios.put(UPDATE_FAVORITES, { userId: user, favorites: newFavorites });\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    checkForFavorites();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let index = 0;\n  let gainers = [];\n  let losers = [];\n\n  if (favorites !== undefined) {\n    // get favorite stocks\n    for (let favorite of favorites) {\n      gainers[index] = favorite;\n      losers[index] = favorite;\n      index++;\n    }\n  }\n\n  // filter the stocks by price change\n  gainers = gainers.filter(gainer => gainer.percentChange >= 0);\n  losers = losers.filter(loser => loser.percentChange < 0);\n  // Sort the favorite stocks by price change\n  gainers.sort((a, b) => b.percentChange - a.percentChange);\n  losers.sort((a, b) => a.percentChange - b.percentChange);\n\n  // Change symbol state to match with the input \n  const handleChange = (e) => {\n    e.preventDefault();\n    setListName(e.target.value);\n  }\n\n  // Add the new list from the input\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addList(listName, [], UPDATE_LISTS, user);\n    setListName(\"\");\n  }\n\n  // hide the list\n  const hideList = (name) => {\n    if (name === \"gainers\") {\n      setRenderGainers(false);\n    } else if (name === \"losers\") {\n      setRenderLosers(false);\n    } else if (name === \"favorites\") {\n      setRenderFavorites(false);\n    } else {\n      let renderLists = listsToRender\n      renderLists[name] = false;\n      setListsToRender(renderLists);\n      setRender(!render);\n    }\n  }\n\n  // show the list\n  const showList = (name) => {\n    if (name === \"gainers\") {\n      setRenderGainers(true);\n    } else if (name === \"losers\") {\n      setRenderLosers(true);\n    } else if (name === \"favorites\") {\n      setRenderFavorites(true);\n    } else {\n      let renderLists = listsToRender\n      renderLists[name] = true;\n      setListsToRender(renderLists);\n      setRender(!render);\n    }\n  }\n\n  // clear the list of stocks on the screen\n  const clearFavoritesConfirmed = e => {\n    e.preventDefault();\n    clearFavorites(UPDATE_FAVORITES, user);\n    setFavoritesModal(false);\n  }\n\n  // clear the list of stocks on the screen\n  const clearListsConfirmed = e => {\n    e.preventDefault();\n    clearLists(UPDATE_LISTS, user);\n    setListModal(false);\n  }\n\n  // function to confirm the deletion of all stocks\n  const confirmFavoriteClear = () => {\n    setFavoritesModal(true);\n  }\n\n  // function to set modal to false and close confirmation dialogue \n  const clearFavoriteModal = () => {\n    setFavoritesModal(false);\n  }\n\n  // function to confirm the deletion of all stocks\n  const confirmListsModal = () => {\n    setListModal(true);\n  }\n\n  // function to set modal to false and close confirmation dialogue \n  const clearListsModal = () => {\n    setListModal(false);\n  }\n\n  // function to hide the entire menu\n  const hideMenuFunc = () => {\n    setHideMenu(true);\n  }\n\n  // function to show the entire menu\n  const showMenu = () => {\n    setHideMenu(false);\n  }\n\n  if (hideMenu) {\n    return (\n      <div>\n        <aside class=\"menu\">\n          <a onClick={() => showMenu()} href=\"#toggleMenu\">\n            <FontAwesomeIcon icon={faAngleUp} size=\"2x\" />\n          </a>\n        </aside>\n      </div>\n    );\n  } else {\n    if (!FavoritesModal && !ListsModal) {\n      return (\n        <div>\n          <aside class=\"menu\">\n            <form onSubmit={handleSubmit} className=\"AddListsForm\">\n              <a onClick={() => hideMenuFunc()} href=\"#toggleMenu\">\n                <FontAwesomeIcon id=\"angle-down\" icon={faAngleDown} size=\"2x\" />\n              </a>\n              <a\n                href=\"#createList\"\n                onKeyDown={() => handleSubmit()}\n                onClick={() => handleSubmit()}>\n                <FontAwesomeIcon id=\"circle-icon\" icon={faPlusCircle} size=\"2x\" />\n              </a>\n              <input\n                id=\"menu-input\"\n                class=\"input is-primary\"\n                type=\"text\"\n                placeholder=\"Create new list\"\n                onChange={handleChange}\n                value={listName}\n              />\n            </form>\n            <br />\n            {\n              renderGainers ? (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Gainers</strong>\n                  <a onClick={() => hideList(\"gainers\")} href=\"#gainers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n                  </a>\n                  <p id=\"gainers\">\n                    {\n                      gainers.length ? (\n                        <div className=\"list\">\n                          <ul class=\"menu-list\">\n                            {gainers.map(favorite => {\n                              return <Favorite favorite={favorite} key={favorite.id} user={user} />;\n                            })}\n                          </ul>\n                        </div>\n                      ) : (\n                        <div className=\"no-favorites\">No Gainers</div>\n                      )\n                    }\n                  </p>\n                </p>\n              ) : (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Gainers</strong>\n                  <a onClick={() => showList(\"gainers\")} href=\"#gainers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                  </a>\n                </p>\n              )\n            }\n            {\n              renderLosers ? (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Losers</strong>\n                  <a onClick={() => hideList(\"losers\")} href=\"#losers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n                  </a>\n                  <p id=\"losers\">\n                    {\n                      losers.length ? (\n                        <div className=\"list\">\n                          <ul class=\"menu-list\">\n                            {losers.map(favorite => {\n                              return <Favorite favorite={favorite} key={favorite.id} user={user} />;\n                            })}\n                          </ul>\n                        </div>\n                      ) : (\n                        <div className=\"no-favorites\">No Losers</div>\n                      )\n                    }\n                  </p>\n                </p>\n              ) : (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Losers</strong>\n                  <a onClick={() => showList(\"losers\")} href=\"#losers\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                  </a>\n                </p>\n              )\n            }\n            {\n              renderFavorites ? (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Favorites</strong>\n                  <a onClick={() => hideList(\"favorites\")} href=\"#favorites\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleDown} size=\"2x\" />\n                  </a>\n                  <p id=\"favorites\">\n                    {\n                      favorites.length ? (\n                        <div className=\"list\">\n                          <ul class=\"menu-list\">\n                            {favorites.map(favorite => {\n                              return <Favorite favorite={favorite} key={favorite.id} user={user} />;\n                            })}\n                          </ul>\n                        </div>\n                      ) : (\n                        <div className=\"no-favorites\">No Favorites</div>\n                      )\n                    }\n                  </p>\n                </p>\n              ) : (\n                <p class=\"menu-label\">\n                  <strong id=\"menu-label\">Favorites</strong>\n                  <a onClick={() => showList(\"favorites\")} href=\"#favorites\">\n                    <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                  </a>\n                </p>\n              )\n            }\n            <button\n              class=\"button is-danger pr-4 pl-4 mb-2 mt-4\"\n              onClick={() => confirmFavoriteClear()}>\n              Clear Favorites\n            </button>\n            {\n              lists.length ? (\n                <div className=\"list\">\n                  {lists.map(list => {\n                    if (listsToRender[list.name] === true) {\n                      return <RenderLists\n                        list={list}\n                        hideList={hideList}\n                        listsToRender={listsToRender}\n                        removeList={removeList}\n                        url={UPDATE_LISTS}\n                        userId={user}\n                      />;\n                    } else {\n                      return (\n                        <p class=\"menu-label mt-5\">\n                          <strong id=\"menu-label\">{list.name}</strong>\n                          <a onClick={() => showList(list.name)} href=\"#list\">\n                            <FontAwesomeIcon id=\"angle-down-menu\" icon={faAngleUp} size=\"2x\" />\n                          </a>\n                          <button\n                            class=\"button is-danger is-small ml-6\"\n                            onClick={() => removeList(list.name, UPDATE_LISTS, user)}>\n                            Delete\n                          </button>\n                        </p>\n                      );\n                    }\n                  })}\n                  <button\n                    class=\"button is-danger mt-2 mb-4\"\n                    onClick={() => confirmListsModal()}>\n                    Clear Lists\n                  </button>\n                </div>\n              ) : (\n                <div className=\"no-favorites\">No Custom Lists</div>\n              )\n            }\n          </aside>\n        </div>\n      );\n    } else if (FavoritesModal) {\n      return (\n        <div class=\"modal is-active\">\n          <div class=\"modal-background\"> </div>\n          <div class=\"modal-content\">\n            <div class=\"section\" id=\"modal-section\">\n              <h3 id=\"modal-heading\">Are you sure you want to clear all Favorites?</h3>\n              <button\n                class=\"button is-danger mt-4\"\n                onClick={clearFavoritesConfirmed}>\n                Clear All Favorites\n              </button>\n              <button\n                class=\"button is-primary mt-4 ml-4\"\n                onClick={clearFavoriteModal}>\n                Cancel\n              </button>\n            </div>\n          </div>\n          <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n      );\n    } else if (ListsModal) {\n      return (\n        <div class=\"modal is-active\">\n          <div class=\"modal-background\"> </div>\n          <div class=\"modal-content\">\n            <div class=\"section\" id=\"modal-section\">\n              <h3 id=\"modal-heading\">Are you sure you want to clear all lists?</h3>\n              <button\n                class=\"button is-danger mt-4\"\n                onClick={clearListsConfirmed}>\n                Clear All Lists\n              </button>\n              <button\n                class=\"button is-primary mt-4 ml-4\"\n                onClick={clearListsModal}>\n                Cancel\n              </button>\n            </div>\n          </div>\n          <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n        </div>\n      );\n    } else {\n      return null\n    }\n  }\n}\n\nexport default Menu;\n","import './Dashboard.css';\nimport { useEffect, useState } from 'react';\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\nimport StockContextProvider from '../../context/StockContext';\nimport StockHub from '../StockHub/StockHub';\nimport Menu from '../Menu/Menu';\nconst axios = require('axios').default;\n\n// Component for the dashboard of the application providing the main functionality\nfunction Dashboard({ user, toggleTheme, theme }) {\n  // user Id for the user\n  const [userId, setUserId] = useState('');\n  // server url to update user\n  const CREATE_USER = process.env.REACT_APP_CREATE_USER;\n  // server url to get user\n  let GET_USER = process.env.REACT_APP_GET_USER;\n\n  if (user !== undefined) {\n    GET_USER = process.env.REACT_APP_GET_USER + user.email;\n  }\n\n  // Check if user exists and creat a new user if they do not exist\n  useEffect(() => {\n    const checkForUser = async () => {\n      try {\n        // fetch the stock data \n        const response = await axios.get(GET_USER);\n        // handle error\n        if (response.data.user === null) {\n          console.log(\"No user has been created\");\n          // create the new user\n          //const name = user.name.split(' ');\n          const firstName = \"first\";\n          const lastName = \"last\";\n          const type = 'consumer';\n          const email = user.email;\n          const password = \"placeholder\";\n\n          const userResponse = await axios.put(CREATE_USER,\n            { userId: userId, firstName: firstName, lastName: lastName, type: type, email: email, password: password });\n          if (userResponse.data.user === null) {\n            console.log(\"error creating new user\");\n          } else {\n            console.log(\"created new user\");\n            setUserId(userResponse.data.user._id);\n          }\n        } else {\n          // user already exists so set the id\n          setUserId(response.data.user._id);\n        }\n        // handle error\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    if (user !== undefined) {\n      checkForUser();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  if (user !== undefined && userId !== '') {\n    return (\n      <StockContextProvider>\n        <div className=\"Dashboard\">\n          {/* Navigation */}\n          <header className=\"app-header\">\n            <Nav toggleTheme={toggleTheme} theme={theme} />\n          </header>\n          <div class=\"block\"></div>\n          {/* Column Layout */}\n          <div class=\"columns is-mobile\">\n            <div class=\"column is-2\">\n            </div>\n            <div class=\"column is-8\">\n              {/* Layout to add stocks and individual cards for stocks */}\n              <section class=\"section\">\n                <div class=\"container\">\n                  <div class=\"block\"></div>\n                  <StockHub user={userId} />\n                  <div class=\"block\"></div>\n                </div>\n              </section>\n            </div>\n            {/* Sidebar for favorites */}\n            <div class=\"column is-2\" id=\"SideMenu\">\n              <Menu user={userId} />\n            </div>\n          </div>\n          <div className=\"homeFooter\">\n            <Footer />\n          </div>\n        </div >\n      </StockContextProvider>\n    );\n  } else {\n    return null;\n  }\n\n}\n\nexport default Dashboard;\n","import './Home.css';\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\n// Component to display the home page of the application\nfunction Home() {\n  // Auth0 authentication handler\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n\n  return (\n    <div className=\"Home\">\n      <body>\n        <section class=\"hero is-medium\" id=\"home-hero\">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <h1 class=\"title is-1\" id=\"homeTitle\">Welcome to MyStockWatch</h1>\n              <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                The simple and intuitive stock tracker and financial news aggregator\n              </h2>\n              {/* <a href=\"register\" class=\"button is-white is-medium is-inverted\">Learn More&ensp; </a> */}\n            </div>\n          </div>\n        </section>\n        <section id=\"parallax-1\" class=\"hero is-large \">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <div class=\"columns\">\n                <div class=\"column is-6 is-offset-6\">\n                  <h1 class=\"title is-1 \" id=\"homeTitle\">Free and Easy to Use Platform</h1>\n                  <hr class=\"content-divider\" />\n                  <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                    Track stocks individually, search, filter, and sort them.\n                  </h2>\n                  <button onClick={() => loginWithRedirect()} class=\"button is-white is-inverted\">Next&ensp;</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section id=\"parallax-2\" class=\"hero is-large \">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <div class=\"columns\">\n                <div class=\"column is-6\">\n                  <h1 class=\"title is-1 \" id=\"homeTitle\">Get the Latest Financial News</h1>\n                  <hr class=\"content-divider\" />\n                  <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                    Add stocks to your favorites and get news in one place.\n                  </h2>\n                  <button onClick={() => loginWithRedirect()} class=\"button is-white is-inverted\">Next&ensp;</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section id=\"parallax-3\" class=\"hero is-large \">\n          <div class=\"hero-body\">\n            <div class=\"container\">\n              <div class=\"columns\">\n                <div class=\"column is-6 is-offset-6\">\n                  <h1 class=\"title is-1 \" id=\"homeTitle\">\n                    For Beginners and Advanced Users Alike\n                  </h1>\n                  <hr class=\"content-divider\" />\n                  <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                    Get financial data displayed from many different timeframes of your choosing. Also display the charts using simple or technical charts.\n                  </h2>\n                  <button onClick={() => loginWithRedirect()} class=\"button is-white is-inverted\">Next&ensp;</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section class=\"cta va\" id=\"home-cta\">\n          <div class=\"container\">\n            <div class=\"columns\">\n              <div class=\"column is-6\">\n                <h1 class=\"title is-1 \" id=\"homeTitle\">Sign Up Today!</h1>\n                <hr class=\"content-divider\" />\n                <h2 class=\"subtitle\" id=\"homeSubtitle\">\n                  Sign Up with your email and password become a user today!\n                </h2>\n                <button\n                  class=\"button is-black mt-2\"\n                  onClick={() => loginWithRedirect()}>\n                  Register\n                </button>\n                <button\n                  class=\"button is-black mt-2 ml-4\"\n                  onClick={() => loginWithRedirect()}>\n                  Login\n                </button>\n                {isAuthenticated ? (\n                  <a href=\"dashboard\">\n                    <button class=\"button is-black mt-2 ml-4\">Dashboard</button>\n                  </a>) : null}\n              </div>\n            </div>\n          </div>\n        </section>\n      </body>\n    </div >\n  );\n}\n\nexport default Home;\n","import './Card.css';\n\n// Component for individual news card\nfunction Card({ article, type }) {\n  let name = \"\";\n  let count = 0;\n  let thumbnail = \"https://bulma.io/images/placeholders/1280x960.png\";\n  //let image = \"https://bulma.io/images/placeholders/1280x960.png\";\n  let organization = \"\";\n  let description = \"\";\n  let date = \"\";\n  let link = \"\";\n\n  if (type === \"trending\") {\n    for (const letter of article.name) {\n      if (count < 60) {\n        name += letter;\n      } else {\n        name += \"...\";\n        break;\n      }\n      count++;\n    }\n    if (article.name.length < 49) {\n      name += \"\\r\\n \";\n    }\n    if (article.description !== undefined) {\n      count = 0;\n      for (const letter of article.description) {\n        if (count < 120) {\n          description += letter;\n        } else {\n          description += \"...\";\n          break;\n        }\n        count++;\n      }\n    }\n    if (article.provider[0].image.thumbnail.contentUrl !== undefined) {\n      thumbnail = article.provider[0].image.thumbnail.contentUrl;\n    }\n    if (article.provider[0].name !== undefined) {\n      organization = article.provider[0].name;\n    }\n    if (article.datePublished !== undefined) {\n      for (let index = 0; index < 10; index++) {\n        date += article.datePublished[index];\n      }\n    }\n    // if (article.image !== undefined) {\n    //   image = article.image.thumbnail.contentUrl;\n    // }\n    if (article.url !== undefined) {\n      link = article.url;\n    }\n  } else {\n    for (const letter of article.attributes.title) {\n      if (count < 60) {\n        name += letter;\n      } else {\n        name += \"...\";\n        break;\n      }\n      count++;\n    }\n    if (name.length < 49) {\n      name += \"\\r\\n \";\n    }\n    // if (article.attributes.gettyImage !== undefined && article.attributes.gettyImage !== null) {\n    //   image = article.attributes.gettyImage.crop_4_3;\n    // }\n    if (article.attributes.publishOn !== undefined) {\n      for (let index = 0; index < 10; index++) {\n        date += article.attributes.publishOn[index];\n      }\n    }\n    if (article.links.self !== undefined) {\n      link = article.links.self;\n\n    }\n  }\n\n  const handleRedirect = () => {\n    window.open(link, \"_blank\");\n  }\n\n  const handleNewsRedirect = () => {\n    const newLink = 'http://www.google.com/search?q=' + link;\n    window.open(newLink, \"_blank\");\n  }\n\n  if (type === \"trending\") {\n    return (\n      <div class=\"card\" id=\"news-card\">\n        {/* <div class=\"card-image\">\n          <figure class=\"image is-4by3\">\n            <img src={image} alt=\"main section\" />\n          </figure>\n        </div> */}\n        <div class=\"card-content\" id=\"news-content\">\n          <div class=\"media\">\n            <div class=\"media-left\">\n              <figure class=\"image is-48x48\">\n                <img src={thumbnail} alt=\"profile\" />\n              </figure>\n            </div>\n            <div class=\"media-content\">\n              <p class=\"title is-4\" id=\"card-title\">{name}</p>\n            </div>\n          </div>\n          <div class=\"content\">\n            {organization}<br /><br />\n            {description}\n          </div>\n          <time datetime={date}>Date: {date}</time>\n          <div class=\"block\"></div>\n          {/* <button class=\"button is-link\">Expand</button> */}\n          <button class=\"button is-link\" onClick={handleRedirect}>\n            Read Article\n          </button>\n\n          <div class=\"modal\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">\n                <p class=\"modal-card-title\">Modal title</p>\n                <button class=\"delete\" aria-label=\"close\"></button>\n              </header>\n              <section class=\"modal-card-body\">\n                {/* <!-- Content ... --> */}\n              </section>\n              <footer class=\"modal-card-foot\">\n                <button class=\"button is-success\">Save changes</button>\n                <button class=\"button\">Cancel</button>\n              </footer>\n            </div>\n          </div>\n        </div>\n      </div >\n    );\n  } else {\n    return (\n      <div class=\"card mt-6\" id=\"news-card\">\n        {/* <div class=\"card-image\">\n          <figure class=\"image is-4by3\">\n            <img src={image} alt=\"main section\" />\n          </figure>\n        </div> */}\n        <div class=\"card-content\" id=\"news-content\">\n          <div class=\"media\">\n            <div class=\"media-left\">\n            </div>\n            <div class=\"media-content\">\n              <p class=\"title is-4\" id=\"card-title\">{name}</p>\n            </div>\n          </div>\n          <time datetime={date}>Date: {date}</time>\n          <div class=\"block\"></div>\n          {/* <button class=\"button is-link\">Expand</button> */}\n          <button class=\"button is-link\" onClick={handleNewsRedirect}>\n            Read Article\n          </button>\n\n          <div class=\"modal\">\n            <div class=\"modal-background\"></div>\n            <div class=\"modal-card\">\n              <header class=\"modal-card-head\">\n                <p class=\"modal-card-title\">Modal title</p>\n                <button class=\"delete\" aria-label=\"close\"></button>\n              </header>\n              <section class=\"modal-card-body\">\n                {/* <!-- Content ... --> */}\n              </section>\n              <footer class=\"modal-card-foot\">\n                <button class=\"button is-success\">Save changes</button>\n                <button class=\"button\">Cancel</button>\n              </footer>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import Card from \"./../Card/Card\";\n\n// Component to display a list of news cards\nconst CardList = ({ news, type }) => {\n\n  return (\n    <div class=\"CardList\">\n      {news.length ? (\n        <div class=\"columns is-mobile\">\n          <div class=\"column is-4\">\n            <Card article={news[0]} type={type} />\n            <Card article={news[3]} type={type} />\n            <Card article={news[6]} type={type} />\n            <Card article={news[9]} type={type} />\n          </div>\n          <div class=\"column is-4\">\n            <Card article={news[1]} type={type} />\n            <Card article={news[4]} type={type} />\n            <Card article={news[7]} type={type} />\n            <Card article={news[10]} type={type} />\n          </div>\n          <div class=\"column is-4\">\n            <Card article={news[2]} type={type} />\n            <Card article={news[5]} type={type} />\n            <Card article={news[8]} type={type} />\n            <Card article={news[11]} type={type} />\n          </div>\n        </div>\n      ) : (\n        <article class=\"message is-link mt-6 ml-6\">\n          <div class=\"message-body \">\n            <strong>No News</strong>\n          </div>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default CardList;\n","import './News.css';\nimport Nav from '../Nav/Nav';\nimport CardList from '../CardList/CardList';\nimport Footer from '../Footer/Footer';\nimport { useState, useEffect } from \"react\";\nconst axios = require('axios').default;\n\n// Component to display the news cards\nfunction News({ toggleTheme }) {\n  // array of news articles\n  const [news, setNews] = useState([]);\n  // symbol of the stock to be searched\n  const [symbol, setSymbol] = useState('');\n  // when the page is loading some actions are disabled\n  const [loading, setLoading] = useState(false);\n  // type of news to be displayed (individual or trending)\n  const [type, setType] = useState('trending');\n\n  // News API\n  const BingNewsOptions = {\n    method: 'GET',\n    url: process.env.REACT_APP_NEWS_URL,\n    params: { textFormat: 'Raw', safeSearch: 'Off', category: 'Business' },\n    headers: {\n      'x-bingapis-sdk': 'true',\n      'x-rapidapi-host': process.env.REACT_APP_NEWS_HOST,\n      'x-rapidapi-key': process.env.REACT_APP_NEWS_KEY\n    }\n  };\n\n  const SeekingAlphaIndividual = {\n    method: 'GET',\n    url: process.env.REACT_APP_NEWS_SYMBOL_URL,\n    params: { id: `${symbol}`, size: '20', until: '0' },\n    headers: {\n      'x-rapidapi-host': process.env.REACT_APP_NEWS_SYMBOL_HOST,\n      'x-rapidapi-key': process.env.REACT_APP_NEWS_SYMBOL_KEY\n    }\n  };\n\n  // Fetches the stock data with the symbol and displays is in a graph\n  const addNewsData = async () => {\n    try {\n      // fetch the data\n      const response = await axios.request(BingNewsOptions);\n      // handle error\n      if (response.data.status === \"error\") {\n        console.log(response.data.message);\n      } else {\n        let articles = [];\n        for (const article of response.data.value) {\n          articles.push(article);\n        }\n        setNews(articles);\n      }\n      // handle error\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const addNewsForSymbol = async () => {\n    try {\n      // fetch the data\n      const response = await axios.request(SeekingAlphaIndividual);\n      // handle error\n      if (response.data.status === \"error\") {\n        console.log(response.data.message);\n      } else {\n        let articles = [];\n        for (const article of response.data.data) {\n          articles.push(article);\n        }\n        setNews(articles);\n      }\n      // handle error\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    if (type === 'trending') {\n      addNewsData();\n    }\n    setLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (news.length === 20) {\n      setType('individual');\n    } else {\n      setType('trending');\n    }\n    setLoading(false);\n  }, [news]);\n\n  // Add the news data for the current symbol in input bar\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    addNewsForSymbol();\n  }\n\n  // Change symbol state to match with the input \n  const handleChange = (e) => {\n    e.preventDefault();\n    setSymbol(e.target.value);\n  }\n\n  // set the articles back to trending news\n  const clear = e => {\n    e.preventDefault();\n    setLoading(true);\n    addNewsData();\n  }\n\n  if (loading) {\n    return (\n      <div></div>\n    );\n  } else {\n    return (\n      <div classname=\"News\" id=\"NewsSection\">\n        {/* Navigation */}\n        <header className=\"app-header\">\n          <Nav toggleTheme={toggleTheme} />\n        </header>\n        <div class=\"block\"></div>\n\n        {/* Column Layout */}\n        <div class=\"columns is-mobile\">\n          <div class=\"column is-2\">\n          </div>\n          <div class=\"column is-8\">\n            <div className=\"button-and-forms mt-4\">\n              <div class=\"columns\">\n                <div class=\"column is-6\">\n                  <section class=\"hero is-link\" id=\"hero-dash\">\n                    <div class=\"hero-body\">\n                      <p class=\"subtitle\" id=\"hero-color\">\n                        Enter the symbol and click the <strong id=\"hero-color\">Add News button or Enter</strong>, to get news pertaining to the stock.\n                      </p>\n                    </div>\n                  </section>\n                </div>\n                <div class=\"column is-6 mt-6\">\n                  <button\n                    class=\"button is-link\"\n                    onClick={handleSubmit}\n                    disabled={loading}>\n                    Add News\n                  </button>\n                  <button\n                    class=\"button is-danger ml-5\"\n                    onClick={clear}\n                    disabled={loading}>\n                    Clear Filter\n                  </button>\n                  <form onSubmit={handleSubmit}>\n                    <div className=\"stock-form\" id=\"stock-search\">\n                      <input\n                        id=\"StockInput\"\n                        type=\"text\"\n                        placeholder=\"Enter Symbol...\"\n                        value={symbol}\n                        onChange={handleChange}\n                        required\n                        class=\"input is-rounded is-link mt-4\"\n                        disabled={loading}\n                      />\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            {/* Layout to add stocks and individual cards for stocks */}\n            <CardList key={news} news={news} type={type} />\n          </div>\n          <div class=\"column is-2\" id=\"SideMenu\">\n          </div>\n        </div>\n\n        <div className=\"homeFooter\">\n          <Footer />\n        </div>\n\n      </div >\n    );\n  }\n\n}\n\nexport default News;\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport React from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './components/Theme/theme';\nimport { GlobalStyles } from './components/Theme/globalStyles';\nimport { useDarkMode } from './components/Theme/useDarkMode';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Home from './components/Home/Home';\nimport News from './components/News/News.jsx';\n\nfunction App() {\n  // theme toggle state\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  // theme state\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  // user authentication from auth0\n  const { user, isAuthenticated } = useAuth0();\n\n  //Router for the application\n  if (isAuthenticated) {\n    if (!componentMounted) {\n      return <></>;\n    } else {\n      return (\n        <ThemeProvider theme={themeMode}>\n          <div className=\"app\">\n            <GlobalStyles />\n            <Router>\n              <Route path=\"/\" exact children={<Home />} />\n              <Route path=\"/dashboard\" exact children={<Dashboard user={user} toggleTheme={toggleTheme} theme={theme} />} />\n              <Route path=\"/home\" exact children={<Home />} />\n              <Route path=\"/news\" exact children={<News toggleTheme={toggleTheme} theme={theme} />} />\n            </Router>\n          </div >\n        </ThemeProvider>\n      );\n    }\n  } else {\n    if (!componentMounted) {\n      return <></>;\n    }\n    else {\n      return (\n        <ThemeProvider theme={themeMode}>\n          <div className=\"app\">\n            <GlobalStyles />\n            <Router>\n              <Route path=\"/\" exact children={<Home />} />\n            </Router>\n          </div>\n        </ThemeProvider>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('dark');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n\n  useEffect(() => {\n    // const localTheme = window.localStorage.getItem('theme');\n    // if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && localTheme !== 'dark') {\n    //   setMode('dark');\n    // } else if (localTheme) {\n    //   setTheme(localTheme);\n    //   setMode('light');\n    // }\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted]\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.css';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\nconst redirectUri = process.env.REACT_APP_AUTH0_REDIRECT_URI;\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    // redirectUri={window.location.origin}\n    redirectUri={redirectUri}>\n    <App />\n  </Auth0Provider >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}